<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_wN3jsNrTEeWv0eZvzLc0yA" name="entitlement_service">
    <eAnnotations xmi:id="_xO5i49rTEeWv0eZvzLc0yA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_xO5i5NrTEeWv0eZvzLc0yA" source="codegen">
        <details xmi:id="_xO5i5drTEeWv0eZvzLc0yA" key="codegenDirectory" value="/entitlement-service/service/src/main/java"/>
        <details xmi:id="_xvqGkNrTEeWv0eZvzLc0yA" key="AssociatedSourceCode" value="/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/EsCheckDateRange.java;1723750615/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/EsCheckDateRangeTest.java;2960941268/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/EsReplyContext.java;1349442071/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/EsReplyContextTest.java;3859417939/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/GetAssociatedContractsOperation.java;548971417/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/GetContractEntitlementOperation.java;3120416572/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/GetPrintAdvantageEntitlementOperation.java;2278255615/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/GetPrintAdvantageEntitlementOperationTest.java;1218619893/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/ObligHeaderLocation.java;1067948084/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/AppliesToResultSetReader.java;354297742/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ContactCommunicationResultSetReader.java;3016290558/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ContactsResultSetReader.java;2608029738/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ContractContactResultSetReader.java;656824/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ContractLocationResultSetReader.java;2059590849/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/DbContractEntitlementManager.java;3980461233/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/DeliverableResultSetReader.java;432983466/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/DlvModifierResultSetReader.java;3693667109/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/LocationResultSetReader.java;1949177945/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/OOSContactResultSetReader.java;15821719/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/OOSLocationResultSetReader.java;3856161342/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/OOSResultSetReader.java;2262881070/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ObligationHeaderResultSetReader.java;2463665552/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/OutputDetails.java;2079925391/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/OutputDetailsTest.java;649395675/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ResultSetReader.java;3117956051/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/SerialNumberResultSetReader.java;3865313265/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ServiceProductTypeResultSetReader.java;1495430604/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/ServiceResultSetReader.java;2680459263/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/db/SvcModifierResultSetReader.java;2731380926/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/CQSGetContractBySNIntegration.java;515503051/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/CQSGetContractIntegration.java;4145862848/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/CQSGetContractIntegrationTest.java;731164195/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/CQSIntegration.java;186000464/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/ContractIntegration.java;3217162056/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/ODSGetContractBySNIntegration.java;2338875418/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/ODSGetContractIntegration.java;3677695192/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/ODSIntegration.java;894962445/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/AppliesToMapper.java;97688939/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/CQSBySNRequestMapper.java;1858499655/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/CQSRequestMapper.java;4068187069/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/CombinedUnitEntitlementMapper.java;4019074181/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ContactMapper.java;2360149530/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ContractEntitlementMapper.java;535826961/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ContractMapper.java;675965172/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/DeliverableMapper.java;543527168/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ErrorMapper.java;3485127550/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/LocationMapper.java;3684162882/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroAppliesToMapper.java;645153204/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroCQSBySNRequestMapper.java;2233131594/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroCQSRequestMapper.java;1135671482/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroCombinedUnitEntitlementMapper.java;726065918/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroContactMapper.java;963784863/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroContractEntitlementMapper.java;2400044188/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroContractMapper.java;2607041014/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroCustomerIdentificationTypeMapper.java;624829078/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroDeliverableMapper.java;2514561767/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroErrorMapper.java;3054407833/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroLocationMapper.java;1774629267/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroModifierMapper.java;2083959230/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroObligationHeaderMapper.java;3089554510/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroOfferMapper.java;45142452/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroOosMapper.java;4023835701/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroUnitListMapper.java;131030651/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/MetroWarningMapper.java;3303463553/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ModifierMapper.java;1906753380/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/ObligationHeaderMapper.java;1938726082/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/OfferMapper.java;1424172418/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/OosMapper.java;3285427034/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/PWAConstants.java;1108645615/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/UnitListMapper.java;2511962552/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/WarningMapper.java;214044770/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/integration/mapping/WorkingMapper.java;3737778385/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/AppliesToKey.java;433693810/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/ContactKey.java;160436814/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/DelivModifierKey.java;2766156974/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/DeliverableKey.java;851834655/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/Key.java;891546877/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/KeyTest.java;1673150222/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/LocationKey.java;4224529378/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/ModifierKey.java;2289993335/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/OOSKey.java;530288882/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/ObligationHeaderKey.java;4193903976/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/keys/ServiceKey.java;765454185/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractBySNTransactionComposition.java;856072391/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractBySnReply.java;685407686/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractErrorsProcessing.java;1245848812/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractOrchestration.java;4154536444/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractScenario.java;871617508/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractScenarioTest.java;2194126476/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractTransaction.java;281171427/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/ContractTransactionComposition.java;179159270/1;/entitlement-service/service/src/main/java/com/hp/es/service/contractEntitlement/orchestration/GenericContractTransactionComposition.java;4144179595/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_xO5i5trTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_xO5i59rTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_xO5i6NrTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_xO5i6drTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_xO5i6trTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_xO5i69rTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_xO5i7NrTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_xO5i7drTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_xO5i7trTEeWv0eZvzLc0yA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_xMUwANrTEeWv0eZvzLc0yA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_xMUwAdrTEeWv0eZvzLc0yA" name="hp">
        <packagedElement xmi:type="uml:Package" xmi:id="_xMUwAtrTEeWv0eZvzLc0yA" name="es">
          <packagedElement xmi:type="uml:Package" xmi:id="_xMUwA9rTEeWv0eZvzLc0yA" name="service">
            <packagedElement xmi:type="uml:Class" xmi:id="_xVUUCtrTEeWv0eZvzLc0yA" name="ProductNumberValidator"/>
            <packagedElement xmi:type="uml:Package" xmi:id="_xMUwCdrTEeWv0eZvzLc0yA" name="util">
              <packagedElement xmi:type="uml:Class" xmi:id="_xU75dNrTEeWv0eZvzLc0yA" name="ErrorFactory"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_xM_eY9rTEeWv0eZvzLc0yA" name="exception">
                <packagedElement xmi:type="uml:Class" xmi:id="_xVy1FtrTEeWv0eZvzLc0yA" name="MappingException"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xM_eZNrTEeWv0eZvzLc0yA" name="xml">
                <packagedElement xmi:type="uml:Class" xmi:id="_xVy1HNrTEeWv0eZvzLc0yA" name="MarshalHelper"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAJdrTEeWv0eZvzLc0yA" name="DateHelper"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAJ9rTEeWv0eZvzLc0yA" name="ESLog"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAKdrTEeWv0eZvzLc0yA" name="XMLIdGenerator"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaakNrTEeWv0eZvzLc0yA" name="Configuration"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVghPNrTEeWv0eZvzLc0yA" name="OracleHelper"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWFI9trTEeWv0eZvzLc0yA" name="MappingUtils"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xMUwDdrTEeWv0eZvzLc0yA" name="contractEntitlement">
              <packagedElement xmi:type="uml:Class" xmi:id="_xO5i4NrTEeWv0eZvzLc0yA" name="EsCheckDateRange">
                <ownedComment xmi:id="_xaXzENrTEeWv0eZvzLc0yA">
                  <body>This class verifies that entilement check date is in a range of&#xD;
-90 days/+1day around current date.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_xYwCcNrTEeWv0eZvzLc0yA" name="MIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xYwCcdrTEeWv0eZvzLc0yA" name="MAX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-ENrTEeWv0eZvzLc0yA" name="verifyDate" specification="_xW8EkNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-EdrTEeWv0eZvzLc0yA" name="date" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>if (date!=null) {&#xD;
         long dateInMillis = date.toDate().getTime();&#xD;
         if (dateInMillis &lt; System.currentTimeMillis()-MIN ||&#xD;
             dateInMillis > System.currentTimeMillis()+MAX) {&#xD;
             throw ErrorFactory.getSifException(&#xD;
                 ErrorFactory.id201_PARAMETER_HAS_INVALID_DATA,&#xD;
                 &quot;EntitlementCheckDate&quot;,&#xD;
                 &quot;The configured range for EntitlementCheckDate is &quot; +&#xD;
                 &quot;-&quot; + ((MIN/(24L * 60L * 60L * 1000L))-1) + &quot; day(s)/&quot; +&#xD;
                 &quot;+&quot; +  (MAX/(24L * 60L * 60L * 1000L)) +&#xD;
                 &quot; day(s) around the current date&quot;);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-EtrTEeWv0eZvzLc0yA" name="_initializer1" specification="_xO5i79rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>long min = 0;&#xD;
     long max = 0;&#xD;
&#xD;
     try {&#xD;
         DynConfigFactory configFactory = DynConfigFactory.getDynInstance();&#xD;
         ReadOnlyProperties prop =&#xD;
             configFactory.getConfig(&#xD;
                 EsConstants.ES_PROPERTIES_FILENAME);&#xD;
         Integer tmp = prop.getIntegerProperty(&quot;es.checkDate.min&quot;);&#xD;
         if (tmp != null) {&#xD;
             min = tmp.longValue() + 1;   // Note the '+1'&#xD;
         }&#xD;
         tmp = prop.getIntegerProperty(&quot;es.checkDate.max&quot;);&#xD;
         if (tmp != null) {&#xD;
             max = tmp.longValue();&#xD;
         }&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     // default min: 91 days in milliseconds (Note: not 90 days)&#xD;
     // default max:  1 day in milliseconds&#xD;
     // Note: Don't remove the 'L' behind the numbers!&#xD;
     MIN = (min==0L ? 91L : min) * 24L * 60L * 60L * 1000L;&#xD;
     MAX = (max==0L ?  1L : max) * 24L * 60L * 60L * 1000L;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xO5i79rTEeWv0eZvzLc0yA" name="_initializer1" isStatic="true" method="_xZm-EtrTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO5i8NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO5i8drTEeWv0eZvzLc0yA" key="init"/>
                  </eAnnotations>
                </ownedOperation>
                <ownedOperation xmi:id="_xW8EkNrTEeWv0eZvzLc0yA" name="verifyDate" isStatic="true" method="_xZm-ENrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xW8EkdrTEeWv0eZvzLc0yA" name="date" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xMa2pNrTEeWv0eZvzLc0yA" name="db">
                <packagedElement xmi:type="uml:Class" xmi:id="_xPeKptrTEeWv0eZvzLc0yA" name="AppliesToResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzTdrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for applies-to.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVaapNrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFRdrTEeWv0eZvzLc0yA" name="AppliesToResultSetReader" specification="_xXOYmNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFRtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFR9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFSNrTEeWv0eZvzLc0yA" type="_xPeKptrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFSdrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXOYntrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFStrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFS9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;SAT_SOURCE_OBLIGATION_ID&quot;);&#xD;
     String item               = rs.getString(&quot;SAT_SVC_ITEM&quot;);&#xD;
     String oosKey             = rs.getString(&quot;SAT_OOS_KEY&quot;);&#xD;
&#xD;
     AppliesToKey key = new AppliesToKey(sourceObligationId, item, oosKey);&#xD;
&#xD;
     AppliesTo a = new AppliesTo();&#xD;
&#xD;
     String type = rs.getString(&quot;AGG_SVC_STATUS&quot;);&#xD;
     try {&#xD;
         a.setStatus(StatusType.valueOf(type));&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
         ESLog.error(&quot;AppliesTo->StatusType='&quot; + type&#xD;
                 + &quot;' is not supported. (ObligationHeaderID='&quot;&#xD;
                 + sourceObligationId + &quot;')&quot;);&#xD;
         // skip that AppliesTo&#xD;
         return;&#xD;
     }&#xD;
&#xD;
&#xD;
     a.setEndDate(convertDate(rs.getDate(&quot;SAT_AGG_END_DATE&quot;)));&#xD;
     a.setOOSKey(oosKey);&#xD;
&#xD;
     // Group the following 4 attributes into &quot;ProfitCenter&quot;. If at least&#xD;
     // one element is available, the ProfitCenter is returned.&#xD;
     String entity     = rs.getString(&quot;SAT_PROFIT_CENTER_ENTITY&quot;);&#xD;
     String subentity  = rs.getString(&quot;SAT_PROFIT_CENTER_SUBENTITY&quot;);&#xD;
     String department = rs.getString(&quot;SAT_PROFIT_CENTER_DEPARTMENT&quot;);&#xD;
     String workforce  = rs.getString(&quot;SAT_PROFIT_CENTER_WORKFORCE&quot;);&#xD;
     if (entity!=null || subentity!=null || department!=null || workforce!=null) {&#xD;
         ProfitCenter p = new ProfitCenter();&#xD;
         p.setDepartment(department);&#xD;
         p.setEntity(entity);&#xD;
         p.setSubEntity(subentity);&#xD;
         p.setWorkforce(workforce);&#xD;
         a.setProfitCenter(p);&#xD;
     }&#xD;
&#xD;
     a.setStartDate(convertDate(rs.getDate(&quot;SAT_AGG_START_DATE&quot;)));&#xD;
&#xD;
     Boolean tmpBoolean = convertBoolean(rs.getString(&quot;AGG_ACTIVE_SVC&quot;));&#xD;
     if (tmpBoolean!=null) {&#xD;
         a.setActiveAppliesTo(tmpBoolean.booleanValue());&#xD;
     }&#xD;
     else {&#xD;
         ESLog.error(&quot;AGG_ACTIVE_SVC was null but it is mandatory&quot;);&#xD;
         a.setActiveAppliesTo(false);&#xD;
     }&#xD;
&#xD;
     a.setDeliveryBlock(rs.getString(&quot;SAT_AGG_DELIVERY_BLOCK&quot;));&#xD;
&#xD;
     ctx.addAppliesTo(key, a);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXOYmNrTEeWv0eZvzLc0yA" name="AppliesToResultSetReader" method="_xZtFRdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXOYm9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXOYnNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXOYmdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYmtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYndrTEeWv0eZvzLc0yA" type="_xPeKptrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXOYntrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZtFSdrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXOYn9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYoNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPeKp9rTEeWv0eZvzLc0yA" name="ContactCommunicationResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzTtrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all contact-communications&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the Contacts are available in the context,&#xD;
i.e. the ContactResultSetReader must be called before!&lt;p>&#xD;
Theoretically, we could have multiple email adresses, phone numbers, fax&#xD;
numbers per contact. In the XML file we have just one field for each element.&#xD;
Therefore, in cases were we have multiple entries for the these fields, we&#xD;
fill the elements &quot;randomly&quot;.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVghMNrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFTNrTEeWv0eZvzLc0yA" name="ContactCommunicationResultSetReader" specification="_xXOYodrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFTdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFTtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFT9rTEeWv0eZvzLc0yA" type="_xPeKp9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFUNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXOYp9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFUdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFUtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourcePersonId = rs.getString(&quot;CNTC_SOURCE_PERSON_ID&quot;);&#xD;
&#xD;
     ContactKey key = new ContactKey(sourcePersonId);&#xD;
&#xD;
     ContactComplexType c = ctx.getContact(key);&#xD;
     if (c!=null) {&#xD;
         String protocolType = rs.getString(&quot;CNTC_PROTOCOL_TYPE&quot;);&#xD;
         if (&quot;Email&quot;.equalsIgnoreCase(protocolType)) {&#xD;
             String email = rs.getString(&quot;CNTC_EMAIL_ADDRESS&quot;);&#xD;
             if (email!=null) {&#xD;
                 // check if null in order to avoid that a previous value&#xD;
                 // is overwritten in case we have multiple email adresses&#xD;
                 //  in the database&#xD;
                 c.setEmailAddress(rs.getString(&quot;CNTC_EMAIL_ADDRESS&quot;));&#xD;
             }&#xD;
         }&#xD;
         else {&#xD;
             String no = convertPhoneNumber(&#xD;
                             rs.getString(&quot;CNTC_PHONE_COUNTRY_CODE&quot;),&#xD;
                             rs.getString(&quot;CNTC_PHONE_CITY_CODE&quot;),&#xD;
                             rs.getString(&quot;CNTC_PHONE_NUMBER&quot;),&#xD;
                             rs.getString(&quot;CNTC_PHONE_EXTENSION&quot;));&#xD;
             if (no!=null) {&#xD;
                 // check if null in order to avoid that a previous value&#xD;
                 // is overwritten in case we have multiple phone or fax&#xD;
                 // numbers in the database&#xD;
                 if (&quot;Phone&quot;.equalsIgnoreCase(protocolType)) {&#xD;
                     c.setPhoneNumber(no);&#xD;
                 }&#xD;
                 else if (&quot;Fax&quot;.equalsIgnoreCase(protocolType)) {&#xD;
                     c.setFaxNumber(no);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFU9rTEeWv0eZvzLc0yA" name="convertPhoneNumber" specification="_xPeKqNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFVNrTEeWv0eZvzLc0yA" name="countryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZtFVdrTEeWv0eZvzLc0yA" name="cityCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZtFVtrTEeWv0eZvzLc0yA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZtFV9rTEeWv0eZvzLc0yA" name="extention">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZtFWNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>StringBuffer buf = new StringBuffer();&#xD;
     if (countryCode!=null) {&#xD;
         buf.append(countryCode);&#xD;
     }&#xD;
     if (cityCode!=null) {&#xD;
         buf.append(cityCode);&#xD;
     }&#xD;
     if (number!=null) {&#xD;
         buf.append(number);&#xD;
     }&#xD;
     if (extention!=null) {&#xD;
         buf.append(extention);&#xD;
     }&#xD;
     return buf.toString();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xPeKqNrTEeWv0eZvzLc0yA" name="convertPhoneNumber" visibility="private" method="_xZtFU9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPeKqdrTEeWv0eZvzLc0yA" name="countryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xPeKqtrTEeWv0eZvzLc0yA" name="cityCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xPeKq9rTEeWv0eZvzLc0yA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xPeKrNrTEeWv0eZvzLc0yA" name="extention">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xPeKrdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXOYodrTEeWv0eZvzLc0yA" name="ContactCommunicationResultSetReader" method="_xZtFTNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXOYpNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXOYpdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXOYotrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYo9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYptrTEeWv0eZvzLc0yA" type="_xPeKp9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXOYp9rTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZtFUNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXOYqNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYqdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPeKrtrTEeWv0eZvzLc0yA" name="ContactsResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzT9rTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all addresses.&#xD;
&lt;b>Note:&lt;/b> The email address, phone number and fax number will be set by&#xD;
the ContactCommunicationResultSetReader class.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVghMdrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFWdrTEeWv0eZvzLc0yA" name="ContactsResultSetReader" specification="_xXOYqtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFWtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFW9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFXNrTEeWv0eZvzLc0yA" type="_xPeKrtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFXdrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXOYsNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFXtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFX9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourcePersonId = rs.getString(&quot;CNT_SOURCE_PERSON_ID&quot;);&#xD;
&#xD;
     ContactKey key = new ContactKey(sourcePersonId);&#xD;
&#xD;
     ContactComplexType c = new ContactComplexType();&#xD;
     // c.setEmailAddress();  -> ContactCommunicationResultSetReader&#xD;
     // c.setFaxNumber();     -> ContactCommunicationResultSetReader&#xD;
     c.setFullName(rs.getString(&quot;CNT_FULL_NAME&quot;));&#xD;
     // c.setPhoneNumber();   -> ContactCommunicationResultSetReader&#xD;
     c.setSourcePersonID(sourcePersonId);&#xD;
&#xD;
     ctx.addContact(key, c);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXOYqtrTEeWv0eZvzLc0yA" name="ContactsResultSetReader" method="_xZtFWdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXOYrdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXOYrtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXOYq9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYrNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYr9rTEeWv0eZvzLc0yA" type="_xPeKrtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXOYsNrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZtFXdrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXOYsdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYstrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPkRQNrTEeWv0eZvzLc0yA" name="ContractContactResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzUNrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all contract-person relations.&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the Contracts are available in the context,&#xD;
i.e. the ObligationHeaderResultSetReader must be called before! The contacts&#xD;
are not needed before because we just insert the customer IDs.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVghMtrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFYNrTEeWv0eZvzLc0yA" name="ContractContactResultSetReader" specification="_xXOYs9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFYdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFYtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFY9rTEeWv0eZvzLc0yA" type="_xPkRQNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFZNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXOYudrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFZdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFZtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;OHCR_SOURCE_OBLIGATION_ID&quot;);&#xD;
&#xD;
     ObligationHeaderKey key = new ObligationHeaderKey(sourceObligationId);&#xD;
&#xD;
     ContractComplexType c = ctx.getContract(key);&#xD;
     if (c!=null) {&#xD;
         String sourcePersonId = rs.getString(&quot;OHCR_SOURCE_PERSON_ID&quot;);&#xD;
         String role             = rs.getString(&quot;OHCR_ROLE&quot;);&#xD;
         if (&quot;SystemMgr&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSystemMgrPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;SWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSWShipToPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;HWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setHWShipToPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;Admin&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setHPAdminPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;Orderer&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setOrdererPersonID(sourcePersonId);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXOYs9rTEeWv0eZvzLc0yA" name="ContractContactResultSetReader" method="_xZtFYNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXOYttrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXOYt9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXOYtNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYtdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYuNrTEeWv0eZvzLc0yA" type="_xPkRQNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXOYudrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZtFZNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXOYutrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYu9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPkRQdrTEeWv0eZvzLc0yA" name="ContractLocationResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzUdrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all contract-address relations.&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the Contracts are available in the context,&#xD;
i.e. the ObligationHeaderResultSetReader must be called before! The addresses&#xD;
are not needed before because we just insert the customer IDs.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVghM9rTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xY8PyNrTEeWv0eZvzLc0yA" name="oHeadLocMap" type="_xVCAG9rTEeWv0eZvzLc0yA" isReadOnly="true" association="_xaqHJNrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8PydrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFZ9rTEeWv0eZvzLc0yA" name="ContractLocationResultSetReader" specification="_xXOYvNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZtFaNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFadrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZtFatrTEeWv0eZvzLc0yA" type="_xPkRQdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
     oHeadLocMap = new HashMap();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLUNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXUfENrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLUdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLUtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;OHAR_SOURCE_OBLIGATION_ID&quot;);&#xD;
&#xD;
     ObligationHeaderKey key = new ObligationHeaderKey(sourceObligationId);&#xD;
&#xD;
     ContractComplexType c = ctx.getContract(key);&#xD;
     if (c != null) {&#xD;
         String sourceCustomerId = rs.getString(&quot;OHAR_SOURCE_CUSTOMER_ID&quot;);&#xD;
         String role = rs.getString(&quot;OHAR_ROLE&quot;);&#xD;
         if (&quot;SoldTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSoldToCustomerID(sourceCustomerId);&#xD;
             // For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
       	  	ObligHeaderLocation oHeadLoc = new ObligHeaderLocation();&#xD;
       	  	oHeadLoc.setSourceObligationId(sourceObligationId.trim());&#xD;
       	  	oHeadLoc.setSourceCustomerId(sourceCustomerId.trim());&#xD;
       	  	oHeadLoc.setObligHeaderRole(role.trim());&#xD;
       	  	if(!oHeadLocMap.containsKey(sourceObligationId.trim())){&#xD;
	          	    oHeadLocMap.put(sourceObligationId.trim(),oHeadLoc);	          	  		&#xD;
       	  	}&#xD;
         }&#xD;
         else if (&quot;SWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSWShipToCustomerID(sourceCustomerId);&#xD;
         }&#xD;
         else if (&quot;ProductShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setProductShipToCustomerID(sourceCustomerId);&#xD;
         }&#xD;
         else if (&quot;PSP&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setPSPCustomerID(sourceCustomerId);&#xD;
         }&#xD;
         else if (&quot;OrderingParty&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setOrderingPartyCustomerID(sourceCustomerId);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXOYvNrTEeWv0eZvzLc0yA" name="ContractLocationResultSetReader" method="_xZtFZ9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXOYv9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXOYwNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXOYvdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYvtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXOYwdrTEeWv0eZvzLc0yA" type="_xPkRQdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfENrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLUNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXUfEdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfEtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPkRQtrTEeWv0eZvzLc0yA" name="DbContractEntitlementManager">
                  <ownedComment xmi:id="_xaXzUtrTEeWv0eZvzLc0yA">
                    <body>This class handles the access to the database for all requests&#xD;
related to contract entitlement.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_xY8PytrTEeWv0eZvzLc0yA" name="CONTRACT_FILTERING_PORTFOLIO_PROPERTY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8Py9rTEeWv0eZvzLc0yA" value="&quot;es.contractservice.ODS.filtering&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8PzdrTEeWv0eZvzLc0yA" name="DEFAULT_CONTRACT_FILTERING_PORTFOLIO_PROPERTY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8PztrTEeWv0eZvzLc0yA" value="&quot;G&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8P0NrTEeWv0eZvzLc0yA" name="_portfolioFiltering" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8P0drTEeWv0eZvzLc0yA" value="DEFAULT_CONTRACT_FILTERING_PORTFOLIO_PROPERTY"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8P09rTEeWv0eZvzLc0yA" name="oHeadLocMap" type="_xVCAG9rTEeWv0eZvzLc0yA" isReadOnly="true" association="_xaqHJ9rTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8P1NrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8P1drTEeWv0eZvzLc0yA" name="GET_CONTRACT_ENTITLEMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8P1trTEeWv0eZvzLc0yA" value="&quot;{call es.get_contract_entitlement(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,&quot; +&#xD;&#xA;                                          &quot;?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,&quot; +&#xD;&#xA;                                          &quot;?,?,?,?,?,?)}&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8P2NrTEeWv0eZvzLc0yA" name="GET_ASSOCIATED_CONTRACTS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8P2drTEeWv0eZvzLc0yA" value="&quot;{call es.get_associated_contracts(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xY8P29rTEeWv0eZvzLc0yA" name="GET_PRINT_ADVANTAGE_ENTITLEMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8P3NrTEeWv0eZvzLc0yA" value="&quot;{call es.get_pa_entitlement_6(?,?,?,?,?,?,?,?,?)}&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLU9rTEeWv0eZvzLc0yA" name="getContractEntitlement" specification="_xXUfE9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLVNrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLVdrTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLVtrTEeWv0eZvzLc0yA" name="identifierType" type="_xVaamNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLV9rTEeWv0eZvzLc0yA" name="dataEntrySite">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLWNrTEeWv0eZvzLc0yA" name="productId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLWdrTEeWv0eZvzLc0yA" name="serialNumber">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLWtrTEeWv0eZvzLc0yA" name="sourceCustomerId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLW9rTEeWv0eZvzLc0yA" name="redAccessId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLXNrTEeWv0eZvzLc0yA" name="redGroupSerialNo">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLXdrTEeWv0eZvzLc0yA" name="mnContractSourceDoc">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLXtrTEeWv0eZvzLc0yA" name="shipToCountryCodeId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLX9rTEeWv0eZvzLc0yA" name="customerDefinedId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLYNrTEeWv0eZvzLc0yA" name="entitlementCheckDate" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLYdrTEeWv0eZvzLc0yA" name="activeContractsOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLYtrTEeWv0eZvzLc0yA" name="activeServicesOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLY9rTEeWv0eZvzLc0yA" name="standaloneOffersOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLZNrTEeWv0eZvzLc0yA" name="detailLevel" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLZdrTEeWv0eZvzLc0yA" name="filter_oos_by_country">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLZtrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLZ9rTEeWv0eZvzLc0yA" name="isPSGUnitSearch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLaNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Connection connection = null;&#xD;
     CallableStatement statement = null;&#xD;
     int errorCode = 0;&#xD;
&#xD;
     ResultSet ohrs = null;&#xD;
     ResultSet srs= null;&#xD;
     ResultSet smrs= null;&#xD;
     ResultSet drs= null;&#xD;
     ResultSet dmrs= null;&#xD;
     ResultSet atrs= null;&#xD;
     ResultSet oosrs= null;&#xD;
     ResultSet snrs = null;&#xD;
     ResultSet lrs = null;&#xD;
     ResultSet clrs = null;&#xD;
     ResultSet ooslrs = null;&#xD;
     ResultSet crs = null;&#xD;
     ResultSet ccrs = null;&#xD;
     ResultSet ooscrs = null;&#xD;
     ResultSet ccommrs = null;&#xD;
     ResultSet sptrs = null;&#xD;
     java.sql.Date checkDate = null;&#xD;
     MetricsEntry stmtExec = null;&#xD;
     MetricsEntry getRs = null;&#xD;
     try {&#xD;
         connection = DbConnectionManager.getInstance().getReadonlyConnection();&#xD;
&#xD;
         connection.setAutoCommit(false);&#xD;
&#xD;
         statement = connection.prepareCall(GET_CONTRACT_ENTITLEMENT);&#xD;
&#xD;
         // convert the checkDate to java.sql.Date&#xD;
         if (entitlementCheckDate!=null) {&#xD;
             checkDate = new java.sql.Date(entitlementCheckDate.toDate().getTime());&#xD;
         }&#xD;
&#xD;
         statement.setString( 1, identifier);&#xD;
         statement.setString( 2, (identifierType==null ? null : identifierType.toString()));&#xD;
         statement.setString( 3, dataEntrySite);&#xD;
         statement.setString( 4, productId);&#xD;
         statement.setString( 5, serialNumber);&#xD;
         statement.setString( 6, sourceCustomerId);&#xD;
         statement.setString( 7, redAccessId);&#xD;
         statement.setString( 8, redGroupSerialNo);  // RedGroupSerialNo&#xD;
         statement.setString( 9, mnContractSourceDoc);&#xD;
         statement.setString(10, shipToCountryCodeId);&#xD;
         statement.setString(11, customerDefinedId);&#xD;
         statement.setDate  (12, checkDate);&#xD;
         statement.setString(13, activeContractsOnly  ? &quot;Y&quot; : &quot;N&quot; );&#xD;
         statement.setString(14, activeServicesOnly   ? &quot;Y&quot; : &quot;N&quot;);&#xD;
         statement.setString(15, standaloneOffersOnly ? &quot;Y&quot; : &quot;N&quot;);&#xD;
         statement.setString(16, detailLevel==null ? null : detailLevel.toDbString() );&#xD;
         statement.setString(17, filter_oos_by_country ? &quot;Y&quot; : &quot;N&quot;);&#xD;
         statement.setString(18, isPSGUnitSearch? &quot;Y&quot; : &quot;N&quot;);&#xD;
         //This is not a parameter but a field as this must be use by all calls.&#xD;
         statement.setString(19,_portfolioFiltering );&#xD;
         statement.registerOutParameter(20, OracleTypes.INTEGER);&#xD;
         for (int i=21; i&lt;=36; i++) {&#xD;
             statement.registerOutParameter(i, OracleTypes.CURSOR);&#xD;
         }&#xD;
         if(mh != null)&#xD;
         	stmtExec = mh.startEntry(&quot;getContEnt_SqlExec&quot;);&#xD;
         &#xD;
         statement.execute();&#xD;
         &#xD;
         &#xD;
         if(stmtExec!=null) {&#xD;
         	stmtExec.actionDone();&#xD;
         	stmtExec = null;&#xD;
         }&#xD;
&#xD;
         // any error occured?&#xD;
         errorCode = statement.getInt(20);&#xD;
&#xD;
         // Now read all returned cursors and store the data in the context.&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: ohrs&quot;);&#xD;
         ohrs =      (ResultSet)statement.getObject(21);&#xD;
         &#xD;
         &#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: srs&quot;);&#xD;
         srs =       (ResultSet)statement.getObject(22);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: smrs&quot;);&#xD;
         smrs =      (ResultSet)statement.getObject(23);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: drs&quot;);&#xD;
         drs =       (ResultSet)statement.getObject(24);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: dmrs&quot;);&#xD;
         dmrs =      (ResultSet)statement.getObject(25);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: atrs&quot;);&#xD;
         atrs =      (ResultSet)statement.getObject(26);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: oosrs&quot;);&#xD;
         oosrs =     (ResultSet)statement.getObject(27);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: snrs&quot;);&#xD;
         snrs =      (ResultSet)statement.getObject(28);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: lrs&quot;);&#xD;
         lrs =       (ResultSet)statement.getObject(29);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: clrs&quot;);&#xD;
         clrs =      (ResultSet)statement.getObject(30);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: ooslrs&quot;);&#xD;
         ooslrs =    (ResultSet)statement.getObject(31);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: crs&quot;);&#xD;
         crs =       (ResultSet)statement.getObject(32);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: ccrs&quot;);&#xD;
         ccrs =      (ResultSet)statement.getObject(33);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: ooscrs&quot;);&#xD;
         ooscrs =    (ResultSet)statement.getObject(34);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: ccommrs&quot;);&#xD;
         ccommrs =   (ResultSet)statement.getObject(35);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getContEnt_GetRS: sptrs&quot;);&#xD;
         sptrs =     (ResultSet)statement.getObject(36);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
&#xD;
         //================================================================&#xD;
         ObligationHeaderResultSetReader ohrsr =&#xD;
                     new ObligationHeaderResultSetReader(context, ohrs);&#xD;
         ohrsr.run(mh);&#xD;
         //================================================================&#xD;
         ServiceResultSetReader srsr =&#xD;
                     new ServiceResultSetReader(context, srs);&#xD;
         srsr.run(mh);&#xD;
         //================================================================&#xD;
         SvcModifierResultSetReader smrsr =&#xD;
                     new SvcModifierResultSetReader(context, smrs);&#xD;
         smrsr.run(mh);&#xD;
         //================================================================&#xD;
         DeliverableResultSetReader drsr =&#xD;
                     new DeliverableResultSetReader(context, drs);&#xD;
         drsr.run(mh);&#xD;
         //================================================================&#xD;
         DlvModifierResultSetReader dmrsr =&#xD;
                     new DlvModifierResultSetReader(context, dmrs);&#xD;
         dmrsr.run(mh);&#xD;
         //================================================================&#xD;
         AppliesToResultSetReader atrsr =&#xD;
                     new AppliesToResultSetReader(context, atrs);&#xD;
         atrsr.run(mh);&#xD;
         //================================================================&#xD;
         OOSResultSetReader oosrsr =&#xD;
                     new OOSResultSetReader(context, oosrs);&#xD;
         oosrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: OOSResultSetReader has to be finished before the&#xD;
         // SerialNumberResultSetReader is called.&#xD;
         SerialNumberResultSetReader snrsr =&#xD;
                     new SerialNumberResultSetReader(context, snrs);&#xD;
         snrsr.run(mh);&#xD;
         //================================================================&#xD;
         LocationResultSetReader lrsr =&#xD;
                     new LocationResultSetReader(context, lrs);&#xD;
         lrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: ObligationHeaderResultSetReader has to be finished before&#xD;
         // the ContractLocationResultSetReader is called.&#xD;
         ContractLocationResultSetReader clrsr =&#xD;
                     new ContractLocationResultSetReader(context, clrs);&#xD;
         clrsr.run(mh);&#xD;
&#xD;
         // For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
         setOHeadLocMap(clrsr.getOHeadLocMap());&#xD;
         &#xD;
         &#xD;
         //================================================================&#xD;
         // Note: OOSResultSetReader has to be finished before&#xD;
         // the OOSLocationResultSetReader is called.&#xD;
         OOSLocationResultSetReader ooslrsr =&#xD;
                     new OOSLocationResultSetReader(context, ooslrs);&#xD;
         ooslrsr.run(mh);&#xD;
         //================================================================&#xD;
         ContactsResultSetReader crsr =&#xD;
                     new ContactsResultSetReader(context, crs);&#xD;
         crsr.run(mh);&#xD;
         //================================================================&#xD;
         ContractContactResultSetReader ccrsr =&#xD;
                     new ContractContactResultSetReader(context, ccrs);&#xD;
         ccrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: OOSResultSetReader has to be finished before&#xD;
         // the OOSContactResultSetReader is called.&#xD;
         OOSContactResultSetReader ooscrsr =&#xD;
                     new OOSContactResultSetReader(context, ooscrs);&#xD;
         ooscrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: ContactsResultSetReader has to be finished before&#xD;
         // the ContactCommunicationResultSetReader is called.&#xD;
         ContactCommunicationResultSetReader ccommrsr =&#xD;
                     new ContactCommunicationResultSetReader(context, ccommrs);&#xD;
         ccommrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: ObligationHeaderResultSetReader has to be finished before&#xD;
         // the ServiceProductTypeResultSetReader is called.&#xD;
         ServiceProductTypeResultSetReader sptrsr =&#xD;
                     new ServiceProductTypeResultSetReader(context, sptrs);&#xD;
         sptrsr.run(mh);&#xD;
     }&#xD;
     catch (SQLException e) {&#xD;
         String nl = System.getProperty(&quot;line.separator&quot;);&#xD;
         StringBuffer buf = new StringBuffer();&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifier=&quot;);&#xD;
         buf.append(identifier);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifierType=&quot;);&#xD;
         buf.append((identifierType==null ? null : identifierType.toString()));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;dataEntrySite=&quot;);&#xD;
         buf.append(dataEntrySite);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;productId=&quot;);&#xD;
         buf.append(productId);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;serialNumber=&quot;);&#xD;
         buf.append(serialNumber);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;sourceCustomerId=&quot;);&#xD;
         buf.append(sourceCustomerId);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;redAccessId=&quot;);&#xD;
         buf.append(redAccessId);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;redGroupSerialNo=&quot;);&#xD;
         buf.append(redGroupSerialNo);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;mnContractSourceDoc=&quot;);&#xD;
         buf.append(mnContractSourceDoc);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;shipToCountryCodeId=&quot;);&#xD;
         buf.append(shipToCountryCodeId);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;customerDefinedId=&quot;);&#xD;
         buf.append(customerDefinedId);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;checkDate=&quot;);&#xD;
         buf.append(checkDate);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;activeContractsOnly=&quot;);&#xD;
         buf.append((activeContractsOnly ? &quot;Y&quot; : &quot;N&quot; ));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;activeServicesOnly=&quot;);&#xD;
         buf.append((activeServicesOnly  ? &quot;Y&quot; : &quot;N&quot;));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;detailLevel=&quot;);&#xD;
         buf.append((detailLevel==null ? null : detailLevel.toDbString()));&#xD;
&#xD;
         throwException(e, &quot;DbContractEntitlementManager.getContractEntitlement&quot;,&#xD;
                         buf.toString());&#xD;
     }&#xD;
     finally {&#xD;
         //MetricsEntry allClose = mh.startEntry(&quot;getContEnt_CloseAll&quot;);&#xD;
  		try { ohrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { srs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { smrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { drs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { dmrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { atrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { oosrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { snrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { lrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { clrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { ooslrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { crs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { ccrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { ooscrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { ccommrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { sptrs.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { statement.close(); }  catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { connection.commit(); }  catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
         try { connection.close(); } catch (Exception e) {ESLog.debug(&quot;error in finally&quot;,e);}&#xD;
        // allClose.actionDone();&#xD;
&#xD;
     }&#xD;
&#xD;
     // check for &quot;NO DATA FOUND&quot;&#xD;
     if (errorCode==0 &amp;&amp; context.getContracts().isEmpty()) {&#xD;
         errorCode = ErrorFactory.id300_NO_DATA_FOUND;&#xD;
     }&#xD;
&#xD;
     return errorCode;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLadrTEeWv0eZvzLc0yA" name="getAssociatedContracts" specification="_xXUfKdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLatrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLa9rTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLbNrTEeWv0eZvzLc0yA" name="identifierType" type="_xVghPtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLbdrTEeWv0eZvzLc0yA" name="contactList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLbtrTEeWv0eZvzLc0yA" name="shipToCountryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLb9rTEeWv0eZvzLc0yA" name="activeContractsOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLcNrTEeWv0eZvzLc0yA" name="chunkSize">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLcdrTEeWv0eZvzLc0yA" name="chunkPosition">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLctrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLc9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Connection connection = null;&#xD;
     CallableStatement statement = null;&#xD;
     int errorCode = 0;&#xD;
     int currentChunkSize = 0;&#xD;
     int totalResultSize = 0;&#xD;
&#xD;
     ResultSet ohrs    = null;&#xD;
     ResultSet clrs    = null;&#xD;
     ResultSet ccrs    = null;&#xD;
     ResultSet sptrs   = null;&#xD;
     MetricsEntry stmtExec = null;&#xD;
     MetricsEntry getRs = null;&#xD;
&#xD;
     try {&#xD;
         connection = DbConnectionManager.getInstance().getReadonlyConnection();&#xD;
         connection.setAutoCommit(false);&#xD;
         statement = connection.prepareCall(GET_ASSOCIATED_CONTRACTS);&#xD;
&#xD;
         statement.setString( 1, identifier);&#xD;
         statement.setString( 2, (identifierType==null ? null : identifierType.toString()));&#xD;
         statement.setString( 3, contactList);&#xD;
         statement.setString( 4, shipToCountryCode);&#xD;
         statement.setString( 5, activeContractsOnly ? &quot;Y&quot; : &quot;N&quot; );&#xD;
         statement.setInt   ( 6, chunkSize);&#xD;
         statement.setInt   ( 7, chunkPosition);&#xD;
         statement.registerOutParameter( 8, OracleTypes.INTEGER);&#xD;
         statement.registerOutParameter( 9, OracleTypes.INTEGER);&#xD;
         statement.registerOutParameter(10, OracleTypes.INTEGER);&#xD;
         for (int i=11; i&lt;=14; i++) {&#xD;
             statement.registerOutParameter(i, OracleTypes.CURSOR);&#xD;
         }&#xD;
&#xD;
         if(mh != null)&#xD;
         	stmtExec =  mh.startEntry(&quot;getAssCon_SqlExec&quot;);&#xD;
         statement.execute();&#xD;
         if(stmtExec!=null) {&#xD;
         	stmtExec.actionDone();&#xD;
         	stmtExec = null;&#xD;
         }&#xD;
&#xD;
         // any error occured?&#xD;
         errorCode = statement.getInt(8);&#xD;
&#xD;
         totalResultSize = statement.getInt(9);&#xD;
         context.setTotalResultSize(totalResultSize);&#xD;
&#xD;
         currentChunkSize = statement.getInt(10);&#xD;
         context.setCurrentChunkSize(currentChunkSize);&#xD;
&#xD;
         // Now read all returned cursors and store the data in the context.&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getAssCon_GetRS: ohrs&quot;);&#xD;
        &#xD;
         &#xD;
         ohrs    = (ResultSet)statement.getObject(11);&#xD;
         &#xD;
         &#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getAssCon_GetRS: clrs&quot;);&#xD;
                  &#xD;
         clrs    = (ResultSet)statement.getObject(13);&#xD;
          if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getAssCon_GetRS: ccrs&quot;);&#xD;
         &#xD;
         ccrs    = (ResultSet)statement.getObject(14);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
         &#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getAssCon_GetRS: sptrs&quot;);&#xD;
         &#xD;
         sptrs   = (ResultSet)statement.getObject(12);&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
&#xD;
&#xD;
         //================================================================&#xD;
         ObligationHeaderResultSetReader ohrsr =&#xD;
                     new ObligationHeaderResultSetReader(context,ohrs);&#xD;
         ohrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: ObligationHeaderResultSetReader has to be finished before&#xD;
         // the ServiceProductTypeResultSetReader is called.&#xD;
         ServiceProductTypeResultSetReader sptrsr =&#xD;
                     new ServiceProductTypeResultSetReader(context,sptrs);&#xD;
         sptrsr.run(mh);&#xD;
         //================================================================&#xD;
         // Note: ObligationHeaderResultSetReader has to be finished before&#xD;
         // the ContractLocationResultSetReader is called.&#xD;
         ContractLocationResultSetReader clrsr =&#xD;
                     new ContractLocationResultSetReader(context,clrs);&#xD;
         clrsr.run(mh);&#xD;
         &#xD;
         // For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
         setOHeadLocMap(clrsr.getOHeadLocMap());&#xD;
         &#xD;
         //================================================================&#xD;
         ContractContactResultSetReader ccrsr =&#xD;
                     new ContractContactResultSetReader(context,ccrs);&#xD;
         ccrsr.run(mh);&#xD;
     } catch (SQLException e) {&#xD;
         String nl = System.getProperty(&quot;line.separator&quot;);&#xD;
         StringBuffer buf = new StringBuffer();&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifier=&quot;);&#xD;
         buf.append(identifier);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifierType=&quot;);&#xD;
         buf.append((identifierType==null ? null : identifierType.toString()));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;contactList=&quot;);&#xD;
         buf.append(contactList);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;shipToCountryCode=&quot;);&#xD;
         buf.append(shipToCountryCode);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;activeContractsOnly=&quot;);&#xD;
         buf.append((activeContractsOnly ? &quot;Y&quot; : &quot;N&quot;));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;chunkSize=&quot;);&#xD;
         buf.append(chunkSize);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;chunkPosition=&quot;);&#xD;
         buf.append(chunkPosition);&#xD;
&#xD;
&#xD;
         throwException(e, &quot;DbContractEntitlementManager.getAssociatedContracts&quot;,&#xD;
                        buf.toString());&#xD;
     } finally {&#xD;
         try { ohrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { clrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { ccrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { sptrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { statement.close(); }  catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { connection.commit(); }  catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { connection.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
&#xD;
         &#xD;
         &#xD;
         if(stmtExec!=null) {&#xD;
         	stmtExec.actionDone();&#xD;
         	stmtExec = null;&#xD;
         }&#xD;
         if(getRs!=null) {&#xD;
         	getRs.actionDone();&#xD;
         	getRs = null;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // check for &quot;NO DATA FOUND&quot;&#xD;
     if (errorCode==0 &amp;&amp; context.getContracts().isEmpty()) {&#xD;
         errorCode = ErrorFactory.id300_NO_DATA_FOUND;&#xD;
     }&#xD;
     return errorCode;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLdNrTEeWv0eZvzLc0yA" name="getPrintAdvantageEntitlement" specification="_xXUfNNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLddrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLdtrTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLd9rTEeWv0eZvzLc0yA" name="identifierType" type="_xVaamNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLeNrTEeWv0eZvzLc0yA" name="isoCountryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLedrTEeWv0eZvzLc0yA" name="outputDetails" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLetrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLe9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Connection connection = null;&#xD;
     CallableStatement statement = null;&#xD;
     int errorCode = 0;&#xD;
&#xD;
     ResultSet ohrs = null;&#xD;
     ResultSet srs = null;&#xD;
     ResultSet atrs = null;&#xD;
     ResultSet oosrs = null;&#xD;
     ResultSet strs = null;&#xD;
&#xD;
     try {&#xD;
         connection = DbConnectionManager.getInstance().getReadonlyConnection();&#xD;
&#xD;
         connection.setAutoCommit(false);&#xD;
&#xD;
         statement = connection.prepareCall(GET_PRINT_ADVANTAGE_ENTITLEMENT);&#xD;
&#xD;
         statement.setString( 1, identifier);&#xD;
         statement.setString( 2, (identifierType==null ? null : identifierType.toString()));&#xD;
         statement.setString( 3, isoCountryCode);&#xD;
&#xD;
         statement.registerOutParameter(4, OracleTypes.INTEGER);&#xD;
         for (int i=5; i&lt;=9; i++) {&#xD;
              statement.registerOutParameter(i, OracleTypes.CURSOR);&#xD;
         }&#xD;
         MetricsEntry stmtExec = null;&#xD;
         if(mh != null) &#xD;
         	stmtExec = mh.startEntry(&quot;getPAEnt_SqlExec&quot;);&#xD;
         statement.execute();&#xD;
         if(mh != null&amp;&amp; stmtExec!= null) &#xD;
         	stmtExec.actionDone();&#xD;
&#xD;
         // any error occured?&#xD;
         errorCode = statement.getInt(4);&#xD;
&#xD;
         // Now read all returned cursors and store the data in the context.&#xD;
         MetricsEntry getRs = null;&#xD;
         if(mh != null) &#xD;
         	getRs = mh.startEntry(&quot;getPAEnt_GetRS: ohrs&quot;);&#xD;
         ohrs =      (ResultSet)statement.getObject(5);&#xD;
         if(mh != null&amp;&amp; getRs!= null) &#xD;
         	getRs.actionDone();&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getPAEnt_GetRS: srs&quot;);&#xD;
         srs =       (ResultSet)statement.getObject(6);&#xD;
         if(mh != null&amp;&amp; getRs!= null) &#xD;
         	getRs.actionDone();&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getPAEnt_GetRS: atrs&quot;);&#xD;
         atrs =      (ResultSet)statement.getObject(7);&#xD;
         if(mh != null&amp;&amp; getRs!= null) &#xD;
         	getRs.actionDone();&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getPAEnt_GetRS: oosrs&quot;);&#xD;
         oosrs =     (ResultSet)statement.getObject(8);&#xD;
         if(mh != null&amp;&amp; getRs!= null) &#xD;
         	getRs.actionDone();&#xD;
         if(mh != null)&#xD;
         	getRs = mh.startEntry(&quot;getPAEnt_GetRS: strs&quot;);&#xD;
         strs =      (ResultSet)statement.getObject(9);&#xD;
         &#xD;
         if(mh != null&amp;&amp; getRs!= null) &#xD;
         	getRs.actionDone();&#xD;
&#xD;
&#xD;
         //================================================================&#xD;
         ObligationHeaderResultSetReader ohrsr =&#xD;
                   new ObligationHeaderResultSetReader(context, ohrs);&#xD;
         ohrsr.run(mh);&#xD;
         //================================================================&#xD;
         ServiceResultSetReader srsr =&#xD;
                   new ServiceResultSetReader(context, srs);&#xD;
         srsr.run(mh);&#xD;
         //================================================================&#xD;
         AppliesToResultSetReader atrsr =&#xD;
                   new AppliesToResultSetReader(context, atrs);&#xD;
         atrsr.run(mh);&#xD;
         //================================================================&#xD;
         OOSResultSetReader oosrsr =&#xD;
                   new OOSResultSetReader(context, oosrs);&#xD;
         oosrsr.run(mh);&#xD;
         //================================================================&#xD;
         ServiceProductTypeResultSetReader strsr=&#xD;
                   new ServiceProductTypeResultSetReader(context, strs);&#xD;
         strsr.run(mh);&#xD;
&#xD;
     }&#xD;
     catch (SQLException e) {&#xD;
         String nl = System.getProperty(&quot;line.separator&quot;);&#xD;
         StringBuffer buf = new StringBuffer();&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifier=&quot;);&#xD;
         buf.append(identifier);&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;identifierType=&quot;);&#xD;
         buf.append((identifierType==null ? null : identifierType.toString()));&#xD;
         buf.append(nl);&#xD;
         buf.append(&quot;isoCountryCode=&quot;);&#xD;
         buf.append(isoCountryCode);&#xD;
&#xD;
&#xD;
         throwException(e, &quot;DbContractEntitlementManager.getPrintAdvantageEntitlement&quot;,&#xD;
                        buf.toString());&#xD;
     }&#xD;
     finally {&#xD;
        // MetricsEntry allClose = mh.startEntry(&quot;getPAEnt_CloseAll&quot;);&#xD;
         try { ohrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { srs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { atrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { oosrs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { strs.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { statement.close(); }  catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { connection.commit(); }  catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         try { connection.close(); } catch (Exception e) {&#xD;
         	ESLog.debug(&quot;error in finalize&quot;,e);&#xD;
         }&#xD;
         //allClose.actionDone();&#xD;
&#xD;
     }&#xD;
&#xD;
     // check for &quot;NO DATA FOUND&quot;&#xD;
     if (errorCode==0 &amp;&amp; context.getContracts().isEmpty()) {&#xD;
         errorCode = ErrorFactory.id300_NO_DATA_FOUND;&#xD;
     }&#xD;
     return errorCode;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLfNrTEeWv0eZvzLc0yA" name="getNewInstance" specification="_xPkRSNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLfdrTEeWv0eZvzLc0yA" type="_xPkRQtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return  new DbContractEntitlementManager();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLftrTEeWv0eZvzLc0yA" name="throwException" specification="_xXUfPNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLf9rTEeWv0eZvzLc0yA" name="e" type="_xVaantrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLgNrTEeWv0eZvzLc0yA" name="methodName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzLgdrTEeWv0eZvzLc0yA" name="paramList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (OracleHelper.isDatabaseDown(e.getErrorCode())) {&#xD;
         throw new DatabaseDownException(e);&#xD;
     }&#xD;
     String message = e.getMessage();&#xD;
     &#xD;
     if (message != null &amp;&amp; (message.indexOf(&quot;ORA-06512&quot;) != -1 || message.indexOf(&quot;ORA-06502&quot;) != -1 || message.indexOf(&quot;ORA-04063&quot;) != -1 || message.indexOf(&quot;ORA-01013&quot;) != -1) ) {&#xD;
         ESLog.info(&quot;DB exception (&quot; + methodName + &quot;): One of the parameter is too long: &quot; + paramList, e);&#xD;
         throw ErrorFactory.getSifException(&#xD;
                 ErrorFactory.id201_PARAMETER_HAS_INVALID_DATA,&#xD;
                 &quot;One of the parameters are too long.&quot;);&#xD;
     }&#xD;
&#xD;
     ESLog.error(&quot;Unknown DB exception (&quot; + methodName&#xD;
             + &quot;): The procedure was called with following parameter:&quot;&#xD;
             + paramList, e);&#xD;
     DataAccessException exception = new DataAccessException(e);&#xD;
     exception.setErrorCode(e.getErrorCode());&#xD;
     throw exception;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLgtrTEeWv0eZvzLc0yA" name="setOHeadLocMap" specification="_xXUfQNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLg9rTEeWv0eZvzLc0yA" name="headLocMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>oHeadLocMap = headLocMap;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLhNrTEeWv0eZvzLc0yA" name="destroy" specification="_xPkRSdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>if(oHeadLocMap != null) {&#xD;
			oHeadLocMap.clear();&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xPkRQ9rTEeWv0eZvzLc0yA" name="DbContractEntitlementManager" visibility="private">
                    <eAnnotations xmi:id="_xPkRRNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xPkRRdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xPkRR9rTEeWv0eZvzLc0yA" type="_xPkRQtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPkRSNrTEeWv0eZvzLc0yA" name="getNewInstance" isStatic="true" method="_xZzLfNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzVtrTEeWv0eZvzLc0yA">
                      <body>@return the DbSystemHandleManager object (singleton).</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVghQtrTEeWv0eZvzLc0yA" type="_xPkRQtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPkRSdrTEeWv0eZvzLc0yA" name="destroy" method="_xZzLhNrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xXUfE9rTEeWv0eZvzLc0yA" name="getContractEntitlement" method="_xZzLU9rTEeWv0eZvzLc0yA" raisedException="_xVUUBtrTEeWv0eZvzLc0yA _xVUUBNrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzU9rTEeWv0eZvzLc0yA">
                      <body>Call the database procedure get_contract_entitlement() and read all&#xD;
     * returned cursors. All results are stored in the EsReplyContext.&#xD;
     * @param context used to store all found results&#xD;
     * @param identifier contract identifier&#xD;
     * @param identifierType the type of contract identifier&#xD;
     * @param dataEntrySite Data Entry Site for blue contracts&#xD;
     * @param productId the product number&#xD;
     * @param serialNumber the serial number&#xD;
     * @param sourceCustomerId the identifier that uniquely identifies the&#xD;
     *                  customer address&#xD;
     * @param redAccessId the identifier for red contracts&#xD;
     * @param checkDate ???&#xD;
     * @return error ID returned from database&#xD;
     * @return error ID</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXUfFNrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfFdrTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfFtrTEeWv0eZvzLc0yA" name="identifierType" type="_xVaamNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfF9rTEeWv0eZvzLc0yA" name="dataEntrySite">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfGNrTEeWv0eZvzLc0yA" name="productId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfGdrTEeWv0eZvzLc0yA" name="serialNumber">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfGtrTEeWv0eZvzLc0yA" name="sourceCustomerId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfG9rTEeWv0eZvzLc0yA" name="redAccessId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfHNrTEeWv0eZvzLc0yA" name="redGroupSerialNo">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfHdrTEeWv0eZvzLc0yA" name="mnContractSourceDoc">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfHtrTEeWv0eZvzLc0yA" name="shipToCountryCodeId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfH9rTEeWv0eZvzLc0yA" name="customerDefinedId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfINrTEeWv0eZvzLc0yA" name="entitlementCheckDate" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfIdrTEeWv0eZvzLc0yA" name="activeContractsOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfItrTEeWv0eZvzLc0yA" name="activeServicesOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfI9rTEeWv0eZvzLc0yA" name="standaloneOffersOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfJNrTEeWv0eZvzLc0yA" name="detailLevel" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfJdrTEeWv0eZvzLc0yA" name="filter_oos_by_country">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfJtrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfJ9rTEeWv0eZvzLc0yA" name="isPSGUnitSearch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfKNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfKdrTEeWv0eZvzLc0yA" name="getAssociatedContracts" method="_xZzLadrTEeWv0eZvzLc0yA" raisedException="_xVUUBtrTEeWv0eZvzLc0yA _xVUUBNrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzVNrTEeWv0eZvzLc0yA">
                      <body>Call the database procedure get_contract_entitlement() and read all&#xD;
     * returned cursors. All results are stored in the EsReplyContext.&#xD;
     * @param context used to store all found results&#xD;
     * @param identifier contract identifier&#xD;
     * @param identifierType the type of contract identifier&#xD;
     * @param contactList List of SourcePersonIds to filter the result&#xD;
     * @param shipToCountryCode&#xD;
     * @param activeContractsOnly&#xD;
     * @param chunkSize the maximum amount of obligation_headers&#xD;
     *                  that should be returned&#xD;
     * @param chunkPosition number of obligation_headers&#xD;
     * @return error ID</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXUfKtrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfK9rTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfLNrTEeWv0eZvzLc0yA" name="identifierType" type="_xVghPtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfLdrTEeWv0eZvzLc0yA" name="contactList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfLtrTEeWv0eZvzLc0yA" name="shipToCountryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfL9rTEeWv0eZvzLc0yA" name="activeContractsOnly">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfMNrTEeWv0eZvzLc0yA" name="chunkSize">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfMdrTEeWv0eZvzLc0yA" name="chunkPosition">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfMtrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfM9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfNNrTEeWv0eZvzLc0yA" name="getPrintAdvantageEntitlement" method="_xZzLdNrTEeWv0eZvzLc0yA" raisedException="_xVUUBtrTEeWv0eZvzLc0yA _xVUUBNrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzVdrTEeWv0eZvzLc0yA">
                      <body>Call the database procedure get_pa_entitlement() and read all&#xD;
     * returned cursors. All results are stored in the EsReplyContext.&#xD;
     * @param replyContext&#xD;
     * @param identifier&#xD;
     * @param identifierType&#xD;
     * @param productShipToSourceCustomerid&#xD;
     * @param outputDetails&#xD;
     * @return error ID</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXUfNdrTEeWv0eZvzLc0yA" name="context" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfNtrTEeWv0eZvzLc0yA" name="identifier">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfN9rTEeWv0eZvzLc0yA" name="identifierType" type="_xVaamNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfONrTEeWv0eZvzLc0yA" name="isoCountryCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfOdrTEeWv0eZvzLc0yA" name="outputDetails" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfOtrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfO9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfPNrTEeWv0eZvzLc0yA" name="throwException" visibility="private" method="_xZzLftrTEeWv0eZvzLc0yA" raisedException="_xVUUBtrTEeWv0eZvzLc0yA _xVUUBNrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzV9rTEeWv0eZvzLc0yA">
                      <body>Map the SQLException to a DatabaseDownException or DataAccessException&#xD;
     * and throw the new exception.&#xD;
     * @param e&#xD;
     * @param methodName&#xD;
     * @param paramList&#xD;
     * @throws DatabaseDownException&#xD;
     * @throws DataAccessException&#xD;
     * @throws SifException</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXUfPdrTEeWv0eZvzLc0yA" name="e" type="_xVaantrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfPtrTEeWv0eZvzLc0yA" name="methodName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXUfP9rTEeWv0eZvzLc0yA" name="paramList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfQNrTEeWv0eZvzLc0yA" name="setOHeadLocMap" visibility="private" method="_xZzLgtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXUfQdrTEeWv0eZvzLc0yA" name="headLocMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPqX4NrTEeWv0eZvzLc0yA" name="DeliverableResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzWNrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for deliverables.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn0NrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLhdrTEeWv0eZvzLc0yA" name="DeliverableResultSetReader" specification="_xXUfQtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLhtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLh9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLiNrTEeWv0eZvzLc0yA" type="_xPqX4NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLidrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXUfSNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLitrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLi9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;DLV_SOURCE_OBLIGATION_ID&quot;);&#xD;
     String item               = rs.getString(&quot;DLV_SVC_ITEM&quot;);&#xD;
     String name               = rs.getString(&quot;DLV_NAME&quot;);&#xD;
     String redDlvCode         = rs.getString(&quot;DLV_CODE&quot;);&#xD;
&#xD;
     DeliverableKey key = new DeliverableKey(sourceObligationId, item, name, redDlvCode);&#xD;
&#xD;
     Deliverable d = new Deliverable();&#xD;
     int qty = rs.getInt(&quot;DLV_RED_DLV_UNITS_AVAILABLE&quot;);&#xD;
     if ( !rs.wasNull()) {&#xD;
         d.setAvailableQuantity(qty);&#xD;
     }&#xD;
     d.setDelivCode(redDlvCode);&#xD;
     d.setDelivName(name);&#xD;
     d.setDelivValue(rs.getString(&quot;DLV_VALUE&quot;));&#xD;
     Boolean tmp = convertBoolean(rs.getString(&quot;DLV_AGG_INCIDENT_BASED&quot;));&#xD;
     d.setIncidentBasedDeliverable((tmp==null) ? false : tmp.booleanValue());&#xD;
&#xD;
     ctx.addDeliverable(key, d);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXUfQtrTEeWv0eZvzLc0yA" name="DeliverableResultSetReader" method="_xZzLhdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXUfRdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXUfRtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXUfQ9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfRNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfR9rTEeWv0eZvzLc0yA" type="_xPqX4NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfSNrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLidrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXUfSdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfStrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPqX4drTEeWv0eZvzLc0yA" name="DlvModifierResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzWdrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for modifiers.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn0drTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLjNrTEeWv0eZvzLc0yA" name="DlvModifierResultSetReader" specification="_xXUfS9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLjdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLjtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLj9rTEeWv0eZvzLc0yA" type="_xPqX4drTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLkNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXUfUdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLkdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLktrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;DMOD_SOURCE_OBLIGATION_ID&quot;);&#xD;
     String item               = rs.getString(&quot;DMOD_SVC_ITEM&quot;);&#xD;
     String name               = rs.getString(&quot;DMOD_DLV_NAME&quot;);&#xD;
     String redDlvCode         = rs.getString(&quot;DMOD_DLV_CODE&quot;);&#xD;
     String modName            = rs.getString(&quot;DMOD_NAME&quot;);&#xD;
     String redModCode         = &quot;&quot;;&#xD;
&#xD;
     DelivModifierKey key = new DelivModifierKey(sourceObligationId, item,&#xD;
                                                 name, redDlvCode,&#xD;
                                                 modName, redModCode );&#xD;
&#xD;
     ModifierComplexType m = new ModifierComplexType();&#xD;
     m.setModDesc(rs.getString(&quot;DMOD_DESC&quot;));&#xD;
     m.setModName(modName);&#xD;
     m.setModValue(rs.getString(&quot;DMOD_VALUE&quot;));&#xD;
     m.setRedModValue2(rs.getString(&quot;DMOD_RED_VALUE2&quot;));&#xD;
&#xD;
     ctx.addDelivModifier(key, m);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXUfS9rTEeWv0eZvzLc0yA" name="DlvModifierResultSetReader" method="_xZzLjNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXUfTtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXUfT9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXUfTNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfTdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfUNrTEeWv0eZvzLc0yA" type="_xPqX4drTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfUdrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLkNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXUfUtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfU9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPqX4trTEeWv0eZvzLc0yA" name="LocationResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzWtrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all addresses</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn0trTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLk9rTEeWv0eZvzLc0yA" name="LocationResultSetReader" specification="_xXUfVNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLlNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLldrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLltrTEeWv0eZvzLc0yA" type="_xPqX4trTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLl9rTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXUfWtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLmNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLmdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceCustomerId = rs.getString(&quot;ADR_SOURCE_CUSTOMER_ID&quot;);&#xD;
&#xD;
     LocationKey key = new LocationKey(sourceCustomerId);&#xD;
&#xD;
     LocationComplexType l = new LocationComplexType();&#xD;
     l.setCity(rs.getString(&quot;ADR_CITY&quot;));&#xD;
     l.setFmtAddrLine1(rs.getString(&quot;ADR_FMT_ADDRESS_LINE_1&quot;));&#xD;
     l.setFmtAddrLine2(rs.getString(&quot;ADR_FMT_ADDRESS_LINE_2&quot;));&#xD;
     l.setFmtAddrLine3(rs.getString(&quot;ADR_FMT_ADDRESS_LINE_3&quot;));&#xD;
     l.setFmtAddrLine4(rs.getString(&quot;ADR_FMT_ADDRESS_LINE_4&quot;));&#xD;
     l.setFmtAddrLine5(rs.getString(&quot;ADR_FMT_ADDRESS_LINE_5&quot;));&#xD;
     l.setGeographicArea(rs.getString(&quot;ADR_GEOGRAPHIC_AREA&quot;));&#xD;
     l.setIsoCountryCd(rs.getString(&quot;ADR_ISO_COUNTRY_CODE&quot;));&#xD;
     l.setPostalCode(rs.getString(&quot;ADR_POSTAL_CODE&quot;));&#xD;
     l.setSiteBusinessName1(rs.getString(&quot;ADR_SITE_BUSINESS_NAME_1&quot;));&#xD;
     l.setSiteBusinessName2(rs.getString(&quot;ADR_SITE_BUSINESS_NAME_2&quot;));&#xD;
     l.setSiteBusinessName3(rs.getString(&quot;ADR_SITE_BUSINESS_NAME_3&quot;));&#xD;
     l.setSiteBusinessName4(rs.getString(&quot;ADR_SITE_BUSINESS_NAME_4&quot;));&#xD;
     l.setSourceCustomerID(sourceCustomerId);&#xD;
     l.setStreetAddr1(rs.getString(&quot;ADR_STREET_1&quot;));&#xD;
     l.setStreetAddr2(rs.getString(&quot;ADR_STREET_2&quot;));&#xD;
     l.setPSPID(rs.getString(&quot;ADR_EXTERNAL_PSP_ID&quot;));&#xD;
&#xD;
     ctx.addLocation(key, l);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXUfVNrTEeWv0eZvzLc0yA" name="LocationResultSetReader" method="_xZzLk9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXUfV9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXUfWNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXUfVdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfVtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfWdrTEeWv0eZvzLc0yA" type="_xPqX4trTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXUfWtrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLl9rTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXUfW9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXUfXNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPqX49rTEeWv0eZvzLc0yA" name="OOSContactResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzW9rTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all OOS-contact relations.&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the OOSes are available in the context,&#xD;
i.e. the OOSResultSetReader must be called before! The addresses&#xD;
are not needed before because we just insert the customer IDs.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn09rTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLmtrTEeWv0eZvzLc0yA" name="OOSContactResultSetReader" specification="_xXalsNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLm9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLnNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLndrTEeWv0eZvzLc0yA" type="_xPqX49rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLntrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXalttrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLn9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLoNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String oosKey = rs.getString(&quot;OCR_OOS_KEY&quot;);&#xD;
&#xD;
     OOSKey key = new OOSKey(oosKey);&#xD;
&#xD;
     OOSComplexType c = ctx.getOOS(key);&#xD;
     if (c!=null) {&#xD;
         String sourcePersonId = rs.getString(&quot;OCR_SOURCE_PERSON_ID&quot;);&#xD;
         String role           = rs.getString(&quot;OCR_ROLE&quot;);&#xD;
         if (&quot;SWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSWShipToPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;HWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setHWShipToPersonID(sourcePersonId);&#xD;
         }&#xD;
         else if (&quot;SystemMgr&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSystemMgrPersonID(sourcePersonId);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXalsNrTEeWv0eZvzLc0yA" name="OOSContactResultSetReader" method="_xZzLmtrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXals9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXaltNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXalsdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalstrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXaltdrTEeWv0eZvzLc0yA" type="_xPqX49rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXalttrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLntrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXalt9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXaluNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPqX5NrTEeWv0eZvzLc0yA" name="OOSLocationResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzXNrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for all OOS-address relations.&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the OOSes are available in the context,&#xD;
i.e. the OOSResultSetReader must be called before! The addresses&#xD;
are not needed before because we just insert the customer IDs.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn1NrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLodrTEeWv0eZvzLc0yA" name="OOSLocationResultSetReader" specification="_xXaludrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLotrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLo9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLpNrTEeWv0eZvzLc0yA" type="_xPqX5NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLpdrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXalv9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLptrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLp9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String oosKey = rs.getString(&quot;OAR_OOS_KEY&quot;);&#xD;
&#xD;
     OOSKey key = new OOSKey(oosKey);&#xD;
&#xD;
     OOSComplexType c = ctx.getOOS(key);&#xD;
     if (c!=null) {&#xD;
         String sourceCustomerId = rs.getString(&quot;OAR_SOURCE_CUSTOMER_ID&quot;);&#xD;
         String role             = rs.getString(&quot;OAR_ROLE&quot;);&#xD;
         if (&quot;SWShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setSWShipToCustomerID(sourceCustomerId);&#xD;
         }&#xD;
         else if (&quot;ProductShipTo&quot;.equalsIgnoreCase(role)) {&#xD;
             c.setProductShipToCustomerID(sourceCustomerId);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXaludrTEeWv0eZvzLc0yA" name="OOSLocationResultSetReader" method="_xZzLodrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXalvNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXalvdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXalutrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalu9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalvtrTEeWv0eZvzLc0yA" type="_xPqX5NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXalv9rTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLpdrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXalwNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalwdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPwegNrTEeWv0eZvzLc0yA" name="OOSResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzXdrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for OOSes</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn1drTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLqNrTEeWv0eZvzLc0yA" name="OOSResultSetReader" specification="_xXalwtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLqdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLqtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLq9rTEeWv0eZvzLc0yA" type="_xPwegNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLrNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXalyNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLrdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLrtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String oosKey = rs.getString(&quot;OOS_KEY&quot;);&#xD;
&#xD;
     OOSKey key = new OOSKey(oosKey);&#xD;
&#xD;
     OOSComplexType o = new OOSComplexType();&#xD;
&#xD;
     o.setCostCenter(rs.getString(&quot;OOS_COST_CENTER&quot;));&#xD;
     o.setOOSGroupID(rs.getString(&quot;OOS_GROUP_ID&quot;));&#xD;
     // o.setHWShipToPersonID();&#xD;
     o.setOOSKey(oosKey);&#xD;
     o.setOOSType(rs.getString(&quot;OOS_TYPE&quot;));&#xD;
     // o.setPart();  -> Warranty only&#xD;
&#xD;
     ProductComplexType p = new ProductComplexType();&#xD;
     // p.setEndOfSupportLife();  -> reserved for future&#xD;
     p.setProductDescription(rs.getString(&quot;OOS_PRODUCT_DESC&quot;));&#xD;
     p.setProductID(rs.getString(&quot;OOS_PRODUCT_ID&quot;));&#xD;
&#xD;
     // setting the product Id and aggregated product Id in hash table.&#xD;
&#xD;
     String pd =  rs.getString(&quot;OOS_PRODUCT_ID&quot;);&#xD;
     String apd =  rs.getString(&quot;OOS_AGG_PRODUCT_ID&quot;);&#xD;
&#xD;
     ctx.setAggProductId(pd,apd);&#xD;
&#xD;
     p.setProductLineCode(rs.getString(&quot;OOS_PRODUCT_LINE&quot;));&#xD;
     // p.setProductLineDescription();  -> Warranty&#xD;
     o.setProduct(p);&#xD;
&#xD;
     // o.setProductShipToCustomerID();&#xD;
     // o.setProgramDeal(); -> Warranty only&#xD;
     o.setRedAccessID(rs.getString(&quot;OOS_RED_ACCESS_ID&quot;));&#xD;
     o.setRedGroupSerialNo(rs.getString(&quot;OOS_RED_GROUP_SERIAL_NO&quot;));&#xD;
     o.setRedSubKCode(rs.getString(&quot;OOS_RED_SUB_K_CODE&quot;));&#xD;
     // o.setSalesOrderNumber();  -> Warranty only&#xD;
     // o.setSerialNumber();  -> SerialNumberResultSetReader&#xD;
     // o.setShipToCountry(); -> Warranty only&#xD;
     // o.setShipToCustomerNumber(); -> Warranty only&#xD;
     // o.setSWShipToCustomerID(); -> OOSContactResultSetReader&#xD;
     // o.setSWShipToPersonID();   -> OOSContactResultSetReader&#xD;
     // o.setSystemMgrPersonID();  -> OOSContactResultSetReader&#xD;
     o.setCustomerDefinedID(rs.getString(&quot;OOS_CUSTOMER_DEFINED_ID&quot;));&#xD;
     int qty = rs.getInt(&quot;OOS_TARGET_QTY&quot;);&#xD;
     if ( !rs.wasNull()) {&#xD;
         o.setTargetQuantity(qty);&#xD;
     }&#xD;
&#xD;
     ctx.addOOS(key, o);&#xD;
&#xD;
     //The following two lines are for PoP. The column is from table &quot;object_of_service&quot;&#xD;
     java.sql.Date d = rs.getDate(&quot;OOS_WARRANTY_START_DATE&quot;);&#xD;
     if (d != null)&#xD;
         ctx.addOosWarrantyStartDate(key, d);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXalwtrTEeWv0eZvzLc0yA" name="OOSResultSetReader" method="_xZzLqNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXalxdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXalxtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXalw9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalxNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalx9rTEeWv0eZvzLc0yA" type="_xPwegNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXalyNrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLrNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXalydrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalytrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPwegdrTEeWv0eZvzLc0yA" name="ObligationHeaderResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzXtrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for obligation headers.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVmn2NrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLr9rTEeWv0eZvzLc0yA" name="ObligationHeaderResultSetReader" specification="_xXaly9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLsNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLsdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLstrTEeWv0eZvzLc0yA" type="_xPwegdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLs9rTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXal0drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLtNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLtdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>Boolean tmpBoolean = null;&#xD;
&#xD;
     String sourceObligationId = rs.getString(&quot;OHDR_SOURCE_OBLIGATION_ID&quot;);&#xD;
     ObligationHeaderKey key = new ObligationHeaderKey(sourceObligationId);&#xD;
&#xD;
     // ====================================================================&#xD;
     ContractComplexType c = new ContractComplexType();&#xD;
     // c.setActiveContractEntitlement(); -> derived from ???&#xD;
     c.setAMPID(rs.getString(&quot;OHDR_AMP_ID&quot;));&#xD;
     // Note: The following two elements uses the OHDR_AGG_xxx columns:&#xD;
     c.setBlueSupportLevelForSGID(rs.getString(&quot;OHDR_AGG_SUPP_LEVEL_FOR_SGID&quot;));&#xD;
     c.setBlueSupportLevelForSGIDSource(rs.getString(&quot;OHDR_AGG_SUPP_LEVEL_SOURCE&quot;));&#xD;
&#xD;
     // c.setCCRN(); -> derived from ObligationHeader&#xD;
     c.setCdoPublishDate(formatTimestamp(rs.getTimestamp(&quot;CDO_LAST_PUBLISHED_DATE&quot;)));&#xD;
     c.setCustomerSegment(rs.getString(&quot;OHDR_CUSTOMER_SEGMENT&quot;));&#xD;
     c.setCustServiceAgreement(rs.getString(&quot;OHDR_CSSA_NUMBER&quot;));&#xD;
     c.setDataEntrySite(rs.getString(&quot;OHDR_AGG_BLUE_DATA_ENTRY_SITE&quot;));&#xD;
     c.setOOSGroupID(rs.getString(&quot;OHDR_AGG_BLUE_FUNC_LOC&quot;));&#xD;
&#xD;
     // c.setHeaderEndDate(rs.getString(&quot;&quot;));  -> is derived from obligation header&#xD;
     // c.setHeaderStartDate(rs.getString(&quot;&quot;));  -> is derived from obligation header&#xD;
&#xD;
     c.setProductShipToCountryCode(rs.getString(&quot;OHDR_AGG_SHIP_TO_COUNTRY_CODE&quot;));&#xD;
     // c.setHWShipToCustomerID(rs.getString(&quot;&quot;)); -> will be set later&#xD;
     // c.setHWShipToPersonID(rs.getString(&quot;&quot;));  -> will be set later&#xD;
&#xD;
     tmpBoolean = convertBoolean(rs.getString(&quot;OHDR_AGG_MISSION_CRITICAL&quot;));&#xD;
     if (tmpBoolean!=null) {&#xD;
       c.setMissionCritical(tmpBoolean.booleanValue());&#xD;
     }&#xD;
&#xD;
     // c.setOOSGroupID(rs.getString(&quot;&quot;)); -> derived from OOS&#xD;
&#xD;
     tmpBoolean = convertBoolean(rs.getString(&quot;OHDR_AGG_PENALTY&quot;));&#xD;
     if (tmpBoolean!=null) {&#xD;
       c.setPenalty(tmpBoolean.booleanValue());&#xD;
     }&#xD;
&#xD;
     tmpBoolean = convertBoolean(rs.getString(&quot;OHDR_AGG_SPECIAL_HANDLING&quot;));&#xD;
     if (tmpBoolean!=null) {&#xD;
       c.setSpecialHandling(tmpBoolean.booleanValue());&#xD;
     }&#xD;
&#xD;
     c.setPortfolioFlag(rs.getString(&quot;OHDR_PORTFOLIO&quot;));&#xD;
     c.setRCXDescription(rs.getString(&quot;OHDR_AGG_RCX_DESCRIPTION&quot;));&#xD;
     c.setRCXResponsibleEngineer(rs.getString(&quot;OHDR_AGG_RCX_RESP_ENGINEER&quot;));&#xD;
     c.setRCXServiceLevel(rs.getString(&quot;OHDR_AGG_RCX_SVC_LEVEL&quot;));&#xD;
     c.setRedContractID(rs.getString(&quot;OHDR_RED_CONTRACT_ID&quot;));&#xD;
     // c.setSoldToCustomerID(rs.getString(&quot;&quot;)); -> will be set later&#xD;
     c.setSupportGroupID(rs.getString(&quot;OHDR_SUPPORT_GROUP_ID&quot;));&#xD;
     c.setSvcAgreementID(rs.getString(&quot;OHDR_SVC_AGREEMENT_ID&quot;));&#xD;
     // c.setSvcProductType(rs.getString(&quot;&quot;)); -> derived from Offer&#xD;
     // c.setSWShipToCustomerID(rs.getString(&quot;&quot;)); -> will be set later&#xD;
     // c.setSWShipToPersonID(rs.getString(&quot;&quot;)); -> will be set later&#xD;
&#xD;
     c.setSysModel(rs.getString(&quot;OHDR_AGG_BLUE_SYS_MODEL&quot;));&#xD;
&#xD;
     // c.setSystemMgrPersonID(rs.getString(&quot;&quot;)); -> will be set later&#xD;
&#xD;
     c.setSysType(rs.getString(&quot;OHDR_AGG_BLUE_SYS_TYPE&quot;));&#xD;
&#xD;
     // change for OHDR_HP_CARE_PACK_SERIAL_NO --- 6.0&#xD;
     c.setHPCarePackSerialNumber(rs.getString(&quot;OHDR_HP_CARE_PACK_SERIAL_NO&quot;));&#xD;
&#xD;
     // ====================================================================&#xD;
     ObligationHeader o = new ObligationHeader();&#xD;
     o.setCCRN(rs.getString(&quot;OHDR_CCRN&quot;));&#xD;
&#xD;
     // column name needs to be updated...&#xD;
     String contractStatusType = rs.getString(&quot;AGG_CONTRACT_STATUS&quot;);&#xD;
     try {&#xD;
         ContractStatusType type = ContractStatusType.valueOf(contractStatusType);&#xD;
         o.setContractStatus(type);&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
         ESLog.info(&quot;ContractStatusType='&quot; + contractStatusType&#xD;
                 + &quot;' is not supported. (ObligationHeaderID='&quot;&#xD;
                 + sourceObligationId + &quot;')&quot;);&#xD;
     }&#xD;
&#xD;
     o.setCustPurchaseOrder(rs.getString(&quot;OHDR_CUST_PURCHASE_ORDER&quot;));&#xD;
     o.setDeliveryBlock(rs.getString(&quot;OHDR_DELIVERY_BLOCK&quot;));&#xD;
     o.setHeaderEndDate(convertDate(rs.getDate(&quot;OHDR_END_DATE&quot;)));&#xD;
     o.setHeaderStartDate(convertDate(rs.getDate(&quot;OHDR_START_DATE&quot;)));&#xD;
     o.setObligationType(rs.getString(&quot;OHDR_OBLIGATION_TYPE&quot;));&#xD;
     o.setOriginatingOrder(rs.getString(&quot;OHDR_ORIGINATING_ORDER&quot;));&#xD;
     o.setChannelProfile(rs.getString(&quot;OHDR_CHANNEL_PROFILE&quot;));&#xD;
     o.setChannelRelationship(rs.getString(&quot;OHDR_CHANNEL_RELATIONSHIP&quot;));&#xD;
     o.setSourceObligationID(sourceObligationId);&#xD;
&#xD;
     tmpBoolean = convertBoolean(rs.getString(&quot;AGG_ACTIVE_CONTRACT&quot;));&#xD;
     if (tmpBoolean!=null) {&#xD;
         o.setActiveObligation(tmpBoolean.booleanValue());&#xD;
     }&#xD;
     else {&#xD;
         ESLog.info(&quot;AGG_ACTIVE_CONTRACT was null but it is mandatory&quot;);&#xD;
         o.setActiveObligation(false);&#xD;
     }&#xD;
&#xD;
     // ====================================================================&#xD;
     ctx.addObligationHeader(key, o);&#xD;
     ctx.addContract(key, c);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXaly9rTEeWv0eZvzLc0yA" name="ObligationHeaderResultSetReader" method="_xZzLr9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXalztrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXalz9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXalzNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXalzdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal0NrTEeWv0eZvzLc0yA" type="_xPwegdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal0drTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzLs9rTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXal0trTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal09rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xPwegtrTEeWv0eZvzLc0yA" name="OutputDetails">
                  <ownedComment xmi:id="_xaXzX9rTEeWv0eZvzLc0yA">
                    <body>This class encapsulates the output details information, i.e. which elements&#xD;
should be part of the reply. The class also guarantees that some of the&#xD;
higher-level elements will be implicitly included in the response even if&#xD;
they have not been explicitly requested, e.g. if includeModifiers is set to&#xD;
true then also includeOffer is automatically true.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_xZCWUNrTEeWv0eZvzLc0yA" name="C_DETAIL_CONTRACT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWUdrTEeWv0eZvzLc0yA" value="&quot;CONTRACT&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWU9rTEeWv0eZvzLc0yA" name="C_DETAIL_OOS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWVNrTEeWv0eZvzLc0yA" value="&quot;OOS&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWVtrTEeWv0eZvzLc0yA" name="C_DETAIL_ADDRESS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWV9rTEeWv0eZvzLc0yA" value="&quot;ADDRESS&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWWdrTEeWv0eZvzLc0yA" name="C_DETAIL_CONTACT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWWtrTEeWv0eZvzLc0yA" value="&quot;CONTACT&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWXNrTEeWv0eZvzLc0yA" name="C_DETAIL_OFFER" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWXdrTEeWv0eZvzLc0yA" value="&quot;OFFER&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWX9rTEeWv0eZvzLc0yA" name="C_DETAIL_DLV" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWYNrTEeWv0eZvzLc0yA" value="&quot;DELIVERABLE&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWYtrTEeWv0eZvzLc0yA" name="C_DETAIL_MOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWY9rTEeWv0eZvzLc0yA" value="&quot;MODIFIER&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWZdrTEeWv0eZvzLc0yA" name="C_DETAIL_UNIQUE_OFFER" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWZtrTEeWv0eZvzLc0yA" value="&quot;UNIQUEO&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWaNrTEeWv0eZvzLc0yA" name="C_DETAIL_UNIQUE_DLV" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWadrTEeWv0eZvzLc0yA" value="&quot;UNIQUED&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWa9rTEeWv0eZvzLc0yA" name="includeAddresses">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWbNrTEeWv0eZvzLc0yA" name="includeContacts">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWbdrTEeWv0eZvzLc0yA" name="includeOffers" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWb9rTEeWv0eZvzLc0yA" name="includeDeliverables" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWcdrTEeWv0eZvzLc0yA" name="includeModifiers">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWctrTEeWv0eZvzLc0yA" name="includeWarranty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWc9rTEeWv0eZvzLc0yA" name="includeContracts" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWddrTEeWv0eZvzLc0yA" name="includeServiceNotes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWdtrTEeWv0eZvzLc0yA" name="includeOOSes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWd9rTEeWv0eZvzLc0yA" name="includeWorkings">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWeNrTEeWv0eZvzLc0yA" name="includeUniqueOffers" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWetrTEeWv0eZvzLc0yA" name="includeUniqueDeliverables">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLttrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xPweg9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLt9rTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>includeAddresses = false;&#xD;
     includeContacts = false;&#xD;
     includeOffers = false;&#xD;
     includeDeliverables = false;&#xD;
     includeModifiers = false;&#xD;
     includeWarranty = false;&#xD;
     includeContracts = false;&#xD;
     includeServiceNotes = false;&#xD;
     includeOOSes = false;&#xD;
     includeWorkings = false;&#xD;
     includeUniqueOffers = false;&#xD;
     includeUniqueDeliverables = false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLuNrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal1NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLudrTEeWv0eZvzLc0yA" name="request" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLutrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this((EntitlementByXXRequestComplexType)request);&#xD;
     includeOOSes = request.getIncludeOOSes();&#xD;
     includeUniqueDeliverables = request.getIncludeUniqueDeliverables();&#xD;
     includeUniqueOffers = request.getIncludeUniqueOffers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLu9rTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal2drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLvNrTEeWv0eZvzLc0yA" name="request" type="_xVUT9trTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLvdrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this();&#xD;
     includeContracts = true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLvtrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal3trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLv9rTEeWv0eZvzLc0yA" name="request" type="_xVaaltrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLwNrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this();&#xD;
     includeContracts = true;&#xD;
     includeOffers = true;&#xD;
     includeOOSes = true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLwdrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal49rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLwtrTEeWv0eZvzLc0yA" name="request" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLw9rTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this((ContractRequestComplexType)request);&#xD;
     includeOOSes = request.getIncludeOOSes();&#xD;
     includeUniqueDeliverables = request.getIncludeUniqueDeliverables();&#xD;
     includeUniqueOffers = request.getIncludeUniqueOffers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLxNrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal6NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLxdrTEeWv0eZvzLc0yA" name="request" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLxtrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this((EntitlementByXXRequestComplexType)request);&#xD;
     includeOOSes = true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLx9rTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal7drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLyNrTEeWv0eZvzLc0yA" name="request" type="_xVmn2drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLydrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this();&#xD;
     includeContracts = true;&#xD;
     includeAddresses = request.getIncludeAddresses();&#xD;
     includeContacts = request.getIncludeContacts();&#xD;
     includeDeliverables = request.getIncludeDeliverables();&#xD;
     includeModifiers = request.getIncludeModifiers();&#xD;
     includeOffers = request.getIncludeOffers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLytrTEeWv0eZvzLc0yA" name="OutputDetails" specification="_xXal8trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLy9rTEeWv0eZvzLc0yA" name="request" type="_xVsucdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzLzNrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this((ContractRequestComplexType)request);&#xD;
     includeContracts = request.getIncludeContracts();&#xD;
     includeServiceNotes = request.getIncludeServiceNotes();&#xD;
     includeWarranty = request.getIncludeWarranty();&#xD;
     includeWorkings = request.getIncludeWorkings();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLzdrTEeWv0eZvzLc0yA" name="setIncludeOffers" specification="_xPweh9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzLztrTEeWv0eZvzLc0yA" name="newIncludeOffers">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>includeOffers = newIncludeOffers;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzLz9rTEeWv0eZvzLc0yA" name="isIncludeOffers" specification="_xPweidrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL0NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return includeOffers ||&#xD;
            isIncludeDeliverables() ||&#xD;
            isIncludeModifiers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL0drTEeWv0eZvzLc0yA" name="setIncludeDeliverables" specification="_xPwei9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL0trTEeWv0eZvzLc0yA" name="newIncludeDeliverables">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>includeDeliverables = newIncludeDeliverables;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL09rTEeWv0eZvzLc0yA" name="isIncludeDeliverables" specification="_xPwejdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL1NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return includeDeliverables ||&#xD;
            isIncludeModifiers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL1drTEeWv0eZvzLc0yA" name="setIncludeContracts" specification="_xPwej9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL1trTEeWv0eZvzLc0yA" name="newIncludeContracts">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>includeContracts = newIncludeContracts;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL19rTEeWv0eZvzLc0yA" name="isIncludeContracts" specification="_xPwekdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL2NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return includeContracts ||&#xD;
            isIncludeUniqueOffers() ||&#xD;
            isIncludeOffers();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL2drTEeWv0eZvzLc0yA" name="setIncludeUniqueOffers" specification="_xPwek9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL2trTEeWv0eZvzLc0yA" name="newIncludeUniqueOffers">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>includeUniqueOffers = newIncludeUniqueOffers;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL29rTEeWv0eZvzLc0yA" name="isIncludeUniqueOffers" specification="_xPweldrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL3NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return includeUniqueOffers ||&#xD;
            isIncludeUniqueDeliverables();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL3drTEeWv0eZvzLc0yA" name="toDbString" specification="_xPwel9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL3trTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>StringBuffer buf = new StringBuffer();&#xD;
     if (this.isIncludeContracts()) {&#xD;
         buf.append(C_DETAIL_CONTRACT);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeOOSes()) {&#xD;
         buf.append(C_DETAIL_OOS);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeAddresses()) {&#xD;
         buf.append(C_DETAIL_ADDRESS);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeContacts()) {&#xD;
         buf.append(C_DETAIL_CONTACT);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeOffers()) {&#xD;
         buf.append(C_DETAIL_OFFER);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeDeliverables()) {&#xD;
         buf.append(C_DETAIL_DLV);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeModifiers()) {&#xD;
         buf.append(C_DETAIL_MOD);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeUniqueDeliverables()) {&#xD;
         buf.append(C_DETAIL_UNIQUE_DLV);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     if (this.isIncludeUniqueOffers()) {&#xD;
         buf.append(C_DETAIL_UNIQUE_OFFER);&#xD;
         buf.append('|');&#xD;
     }&#xD;
     return buf.toString();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xPweg9rTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLttrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xPwehNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xPwehdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzYNrTEeWv0eZvzLc0yA">
                      <body>Default initialization. Set all include flags to false.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xPwehtrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPweh9rTEeWv0eZvzLc0yA" name="setIncludeOffers" method="_xZzLzdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPweiNrTEeWv0eZvzLc0yA" name="newIncludeOffers">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPweidrTEeWv0eZvzLc0yA" name="isIncludeOffers" method="_xZzLz9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPweitrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwei9rTEeWv0eZvzLc0yA" name="setIncludeDeliverables" method="_xZzL0drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPwejNrTEeWv0eZvzLc0yA" name="newIncludeDeliverables">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwejdrTEeWv0eZvzLc0yA" name="isIncludeDeliverables" method="_xZzL09rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPwejtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwej9rTEeWv0eZvzLc0yA" name="setIncludeContracts" method="_xZzL1drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPwekNrTEeWv0eZvzLc0yA" name="newIncludeContracts">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwekdrTEeWv0eZvzLc0yA" name="isIncludeContracts" method="_xZzL19rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPwektrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwek9rTEeWv0eZvzLc0yA" name="setIncludeUniqueOffers" method="_xZzL2drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPwelNrTEeWv0eZvzLc0yA" name="newIncludeUniqueOffers">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPweldrTEeWv0eZvzLc0yA" name="isIncludeUniqueOffers" method="_xZzL29rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xPweltrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xPwel9rTEeWv0eZvzLc0yA" name="toDbString" method="_xZzL3drTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzaNrTEeWv0eZvzLc0yA">
                      <body>This method format all include flags. The string&#xD;
     * will be passed to the DB procedures.&#xD;
     * @return String containing constants for the database</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xPwemNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal1NrTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLuNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal1trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal19rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzYdrTEeWv0eZvzLc0yA">
                      <body>Fill all flags based on the given EntitlementByPnRequest&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal1drTEeWv0eZvzLc0yA" name="request" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal2NrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal2drTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLu9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal29rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal3NrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzYtrTEeWv0eZvzLc0yA">
                      <body>The constructor for the AssociatedContractsRequest doesn't read&#xD;
     * any values from the request. The detail level for this Operation&#xD;
     * won't be passed to the DB procedure. The OutputDetails object&#xD;
     * will be used to concat the DB result only (in the EsReplyContext).&#xD;
     * @param request this parameter is only used to get the right constructor.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal2trTEeWv0eZvzLc0yA" name="request" type="_xVUT9trTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal3drTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal3trTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLvtrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal4NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal4drTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzY9rTEeWv0eZvzLc0yA">
                      <body>The PrintAdvatageRequest doesn't have any include flags.&#xD;
     * The OutputDetails object will be used to concat the DB&#xD;
     * result only (in the EsReplyContext).&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal39rTEeWv0eZvzLc0yA" name="request" type="_xVaaltrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal4trTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal49rTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLwdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal5drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal5trTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzZNrTEeWv0eZvzLc0yA">
                      <body>Fill all flags based on the given ContractRequest&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal5NrTEeWv0eZvzLc0yA" name="request" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal59rTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal6NrTEeWv0eZvzLc0yA" name="OutputDetails" method="_xZzLxNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal6trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal69rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzZdrTEeWv0eZvzLc0yA">
                      <body>Fill all flags based on the given EntitlementBySnRequest&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal6drTEeWv0eZvzLc0yA" name="request" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal7NrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal7drTEeWv0eZvzLc0yA" name="OutputDetails" visibility="private" method="_xZzLx9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal79rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal8NrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzZtrTEeWv0eZvzLc0yA">
                      <body>Fill all flags based on the given ContractRequestComplexType&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal7trTEeWv0eZvzLc0yA" name="request" type="_xVmn2drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal8drTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal8trTEeWv0eZvzLc0yA" name="OutputDetails" visibility="private" method="_xZzLytrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXal9NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXal9drTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzZ9rTEeWv0eZvzLc0yA">
                      <body>Fill all flags based on the given EntitlementByXXRequestComplexType&#xD;
     * @param request</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXal89rTEeWv0eZvzLc0yA" name="request" type="_xVsucdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal9trTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP2lINrTEeWv0eZvzLc0yA" name="OutputDetailsTest">
                  <ownedComment xmi:id="_xaXzadrTEeWv0eZvzLc0yA">
                    <body>Test if the include flags are set correctly based on the flags set in the&#xD;
request. This class also tests if the higher level elements are implicitely&#xD;
included, e.g. if IncludeDeliverables is true, then automatically includeOffer&#xD;
must be true.</body>
                  </ownedComment>
                  <generalization xmi:id="_xXgsVtrTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL39rTEeWv0eZvzLc0yA" name="OutputDetailsTest" specification="_xP2lIdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL4NrTEeWv0eZvzLc0yA" name="inName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzL4drTEeWv0eZvzLc0yA" type="_xP2lINrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(inName);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL4trTEeWv0eZvzLc0yA" name="suite" specification="_xP2lJtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL49rTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>// discover test*() methods via reflection:&#xD;
     return new TestSuite(OutputDetailsTest.class);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL5NrTEeWv0eZvzLc0yA" name="testEntitlementByPnRequest" specification="_xP2lJ9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EntitlementByPnRequest r;&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
     r.setIncludeAddresses(true);&#xD;
     Assert.assertTrue(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
     r.setIncludeContacts(true);&#xD;
     Assert.assertTrue(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     r.setIncludeContracts(true);&#xD;
     Assert.assertTrue(&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     r.setIncludeDeliverables(true);&#xD;
     Assert.assertTrue(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     r.setIncludeModifiers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     r.setIncludeOffers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
     r.setIncludeOOSes(true);&#xD;
     Assert.assertTrue(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
     r.setIncludeServiceNotes(true);&#xD;
     Assert.assertTrue(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
     r.setIncludeUniqueDeliverables(true);&#xD;
     Assert.assertTrue(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
     r.setIncludeUniqueOffers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
     r.setIncludeWarranty(true);&#xD;
     Assert.assertTrue(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
     r.setIncludeWorkings(true);&#xD;
     Assert.assertTrue(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL5drTEeWv0eZvzLc0yA" name="testAssociatedContractsRequest" specification="_xP2lKNrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>AssociatedContractsRequest r = new AssociatedContractsRequest();&#xD;
     OutputDetails od = new OutputDetails(r);&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, od.isIncludeAddresses());&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, od.isIncludeContacts());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, od.isIncludeContracts());&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, od.isIncludeDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, od.isIncludeModifiers());&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, od.isIncludeOffers());&#xD;
     Assert.assertFalse(&quot;isIncludeOOSes wrong&quot;, od.isIncludeOOSes());&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, od.isIncludeServiceNotes());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, od.isIncludeUniqueDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, od.isIncludeUniqueOffers());&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, od.isIncludeWarranty());&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, od.isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL5trTEeWv0eZvzLc0yA" name="testPrintAdvantageRequest" specification="_xP2lKdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>PrintAdvantageRequest r = new PrintAdvantageRequest();&#xD;
     OutputDetails od = new OutputDetails(r);&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, od.isIncludeAddresses());&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, od.isIncludeContacts());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, od.isIncludeContracts());&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, od.isIncludeDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, od.isIncludeModifiers());&#xD;
     Assert.assertTrue (&quot;isIncludeOffers wrong&quot;, od.isIncludeOffers());&#xD;
     Assert.assertTrue (&quot;isIncludeOOSes wrong&quot;, od.isIncludeOOSes());&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, od.isIncludeServiceNotes());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, od.isIncludeUniqueDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, od.isIncludeUniqueOffers());&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, od.isIncludeWarranty());&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, od.isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL59rTEeWv0eZvzLc0yA" name="testEntitlementBySnRequest" specification="_xP2lKtrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EntitlementBySnRequest r;&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
     r.setIncludeAddresses(true);&#xD;
     Assert.assertTrue(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
     r.setIncludeContacts(true);&#xD;
     Assert.assertTrue(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     r.setIncludeContracts(true);&#xD;
     Assert.assertTrue(&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     r.setIncludeDeliverables(true);&#xD;
     Assert.assertTrue(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     r.setIncludeModifiers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     r.setIncludeOffers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
&#xD;
     // OOSes are always included&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertTrue (&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
     r.setIncludeServiceNotes(true);&#xD;
     Assert.assertTrue(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
     r.setIncludeWarranty(true);&#xD;
     Assert.assertTrue(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
&#xD;
     r = new EntitlementBySnRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
     r.setIncludeWorkings(true);&#xD;
     Assert.assertTrue(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL6NrTEeWv0eZvzLc0yA" name="testContractRequest" specification="_xP2lK9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>ContractRequest r;&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
     r.setIncludeAddresses(true);&#xD;
     Assert.assertTrue(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
     r.setIncludeContacts(true);&#xD;
     Assert.assertTrue(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
&#xD;
     // alwasy true&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     r.setIncludeDeliverables(true);&#xD;
     Assert.assertTrue(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     r.setIncludeModifiers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     r.setIncludeOffers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
     r.setIncludeOOSes(true);&#xD;
     Assert.assertTrue(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
     r.setIncludeUniqueDeliverables(true);&#xD;
     Assert.assertTrue(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
     r.setIncludeUniqueOffers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
&#xD;
     r = new ContractRequest();&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL6drTEeWv0eZvzLc0yA" name="testImplicitInclusionOfHigherLevelElements" specification="_xP2lLNrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EntitlementByPnRequest r;&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     r.setIncludeModifiers(true);&#xD;
     Assert.assertTrue(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     Assert.assertTrue(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     Assert.assertTrue(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     Assert.assertTrue(&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     // all others remain false&#xD;
     assertFalseElements(r);&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     r.setIncludeDeliverables(true);&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     Assert.assertTrue (&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     Assert.assertTrue (&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     // all others remain false&#xD;
     assertFalseElements(r);&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     r.setIncludeOffers(true);&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     Assert.assertTrue (&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     // all others remain false&#xD;
     assertFalseElements(r);&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     r.setIncludeContracts(true);&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     // all others remain false&#xD;
     assertFalseElements(r);&#xD;
&#xD;
     r = new EntitlementByPnRequest();&#xD;
     r.setIncludeUniqueDeliverables(true);&#xD;
     Assert.assertFalse(&quot;isIncludeModifiers wrong&quot;, getOD(r).isIncludeModifiers());&#xD;
     Assert.assertFalse(&quot;isIncludeDeliverables wrong&quot;, getOD(r).isIncludeDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeOffers wrong&quot;, getOD(r).isIncludeOffers());&#xD;
     Assert.assertTrue (&quot;isIncludeContracts wrong&quot;, getOD(r).isIncludeContracts());&#xD;
     Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
     Assert.assertFalse(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
     Assert.assertTrue (&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
     Assert.assertTrue (&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL6trTEeWv0eZvzLc0yA" name="assertFalseElements" specification="_xXal-NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL69rTEeWv0eZvzLc0yA" name="r" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>Assert.assertFalse(&quot;isIncludeAddresses wrong&quot;, getOD(r).isIncludeAddresses());&#xD;
     Assert.assertFalse(&quot;isIncludeContacts wrong&quot;, getOD(r).isIncludeContacts());&#xD;
     Assert.assertFalse(&quot;isIncludeOOSes wrong&quot;, getOD(r).isIncludeOOSes());&#xD;
     Assert.assertFalse(&quot;isIncludeServiceNotes wrong&quot;, getOD(r).isIncludeServiceNotes());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueDeliverables wrong&quot;, getOD(r).isIncludeUniqueDeliverables());&#xD;
     Assert.assertFalse(&quot;isIncludeUniqueOffers wrong&quot;, getOD(r).isIncludeUniqueOffers());&#xD;
     Assert.assertFalse(&quot;isIncludeWarranty wrong&quot;, getOD(r).isIncludeWarranty());&#xD;
     Assert.assertFalse(&quot;isIncludeWorkings wrong&quot;, getOD(r).isIncludeWorkings());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL7NrTEeWv0eZvzLc0yA" name="getOD" specification="_xXal-trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL7drTEeWv0eZvzLc0yA" name="r" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL7trTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new OutputDetails(r);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL79rTEeWv0eZvzLc0yA" name="getOD" specification="_xXgsUNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL8NrTEeWv0eZvzLc0yA" name="r" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL8drTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new OutputDetails(r);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL8trTEeWv0eZvzLc0yA" name="getOD" specification="_xXgsU9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL89rTEeWv0eZvzLc0yA" name="r" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL9NrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new OutputDetails(r);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xP2lIdrTEeWv0eZvzLc0yA" name="OutputDetailsTest" method="_xZzL39rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xP2lI9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xP2lJNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xP2lItrTEeWv0eZvzLc0yA" name="inName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xP2lJdrTEeWv0eZvzLc0yA" type="_xP2lINrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xP2lJtrTEeWv0eZvzLc0yA" name="suite" isStatic="true" method="_xZzL4trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXal99rTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xP2lJ9rTEeWv0eZvzLc0yA" name="testEntitlementByPnRequest" method="_xZzL5NrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lKNrTEeWv0eZvzLc0yA" name="testAssociatedContractsRequest" method="_xZzL5drTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lKdrTEeWv0eZvzLc0yA" name="testPrintAdvantageRequest" method="_xZzL5trTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lKtrTEeWv0eZvzLc0yA" name="testEntitlementBySnRequest" method="_xZzL59rTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lK9rTEeWv0eZvzLc0yA" name="testContractRequest" method="_xZzL6NrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lLNrTEeWv0eZvzLc0yA" name="testImplicitInclusionOfHigherLevelElements" method="_xZzL6drTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP2lLdrTEeWv0eZvzLc0yA" name="main" isStatic="true">
                    <ownedParameter xmi:id="_xP2lLtrTEeWv0eZvzLc0yA" name="args">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xP2lMNrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal-NrTEeWv0eZvzLc0yA" name="assertFalseElements" visibility="private" method="_xZzL6trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXal-drTEeWv0eZvzLc0yA" name="r" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXal-trTEeWv0eZvzLc0yA" name="getOD" visibility="private" method="_xZzL7NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXal-9rTEeWv0eZvzLc0yA" name="r" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXal_NrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsUNrTEeWv0eZvzLc0yA" name="getOD" visibility="private" method="_xZzL79rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsUdrTEeWv0eZvzLc0yA" name="r" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsUtrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsU9rTEeWv0eZvzLc0yA" name="getOD" visibility="private" method="_xZzL8trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsVNrTEeWv0eZvzLc0yA" name="r" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsVdrTEeWv0eZvzLc0yA" type="_xPwegtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP2lMtrTEeWv0eZvzLc0yA" name="ResultSetReader" visibility="package" isAbstract="true">
                  <ownedComment xmi:id="_xaXzatrTEeWv0eZvzLc0yA">
                    <body>Base class for all classes that read from a result set and store the results&#xD;
in the context.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_xZCWe9rTEeWv0eZvzLc0yA" name="context" visibility="private" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHKtrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZCWfdrTEeWv0eZvzLc0yA" name="resultSet" visibility="private" type="_xVaanNrTEeWv0eZvzLc0yA" association="_xaqHLdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL9drTEeWv0eZvzLc0yA" name="ResultSetReader" specification="_xXgsWtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL9trTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL99rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL-NrTEeWv0eZvzLc0yA" type="_xP2lMtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this.context = ctx;&#xD;
     this.resultSet = rs;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL-drTEeWv0eZvzLc0yA" name="run" specification="_xXgsYNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL-trTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>MetricsEntry me = null;&#xD;
 	if (mh != null)&#xD;
     	me = mh.startEntry(&quot;&quot;);&#xD;
     int count = 0;&#xD;
     try {&#xD;
         if (resultSet!=null) {&#xD;
             while (resultSet.next()) {&#xD;
                 parseNextRow(context, resultSet);&#xD;
                 count++;&#xD;
             }&#xD;
         }&#xD;
     } finally {&#xD;
     	if(me != null) {&#xD;
     		me.setActionName(this.getClass().getName() + &quot;_read_rs (&quot; + count + &quot;)&quot;);&#xD;
         	me.actionDone();&#xD;
     	}&#xD;
     }&#xD;
&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL-9rTEeWv0eZvzLc0yA" name="formatTimestamp" specification="_xVsud9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL_NrTEeWv0eZvzLc0yA" name="time" type="_xVsuddrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzL_drTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (time==null) {&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     java.util.Date date = new java.util.Date(time.getTime());&#xD;
&#xD;
     java.text.SimpleDateFormat df = getTimestampFormatter();&#xD;
     return df.format(date);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzL_trTEeWv0eZvzLc0yA" name="getTimestampFormatter" specification="_xP2lM9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzL_9rTEeWv0eZvzLc0yA" type="_xVsuetrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new java.text.SimpleDateFormat(EsConstants.DB_SIMPLE_DATE_FORMAT);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMANrTEeWv0eZvzLc0yA" name="convertDate" specification="_xVsufdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMAdrTEeWv0eZvzLc0yA" name="time" type="_xVsuddrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMAtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>if (time==null) {&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     return new Date(new java.util.Date(time.getTime()));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMA9rTEeWv0eZvzLc0yA" name="convertDate" specification="_xVsugNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMBNrTEeWv0eZvzLc0yA" name="time" type="_xVIGydrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMBdrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>if (time==null) {&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     return new Date(new java.util.Date(time.getTime()));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMBtrTEeWv0eZvzLc0yA" name="convertBoolean" specification="_xP2lNNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMB9rTEeWv0eZvzLc0yA" name="flag">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZzMCNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (flag!=null) {&#xD;
         if (flag.equalsIgnoreCase(&quot;Y&quot;)) {&#xD;
             return Boolean.TRUE;&#xD;
         }&#xD;
&#xD;
         if (flag.equalsIgnoreCase(&quot;N&quot;)) {&#xD;
             return Boolean.FALSE;&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xP2lM9rTEeWv0eZvzLc0yA" name="getTimestampFormatter" visibility="protected" isStatic="true" method="_xZzL_trTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzbdrTEeWv0eZvzLc0yA">
                      <body>Helper method to get a unique configured date formatter&#xD;
     *&#xD;
     * @return java.text.SimpleDateFormat</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVsufNrTEeWv0eZvzLc0yA" type="_xVsuetrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xP2lNNrTEeWv0eZvzLc0yA" name="convertBoolean" visibility="protected" method="_xZzMBtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzcNrTEeWv0eZvzLc0yA">
                      <body>Helper method used to convert the Strings &quot;Y&quot; and &quot;N&quot; to true and false&#xD;
     * @return Boolean.TRUE if the flag is &quot;Y&quot; or &quot;y&quot;;&#xD;
     *         Boolean.FALSE if the flag is &quot;N&quot; or &quot;n&quot;;&#xD;
     *         else return null</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xP2lNdrTEeWv0eZvzLc0yA" name="flag">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xP2lNtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xVsud9rTEeWv0eZvzLc0yA" name="formatTimestamp" visibility="protected" method="_xZzL-9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzbNrTEeWv0eZvzLc0yA">
                      <body>Helper method used to convert the data types</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVsueNrTEeWv0eZvzLc0yA" name="time" type="_xVsuddrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xVsuedrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xVsufdrTEeWv0eZvzLc0yA" name="convertDate" visibility="protected" method="_xZzMANrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzbtrTEeWv0eZvzLc0yA">
                      <body>Helper method used to convert the data types</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVsuftrTEeWv0eZvzLc0yA" name="time" type="_xVsuddrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xVsuf9rTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xVsugNrTEeWv0eZvzLc0yA" name="convertDate" visibility="protected" method="_xZzMA9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzb9rTEeWv0eZvzLc0yA">
                      <body>Helper method used to convert the data types</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVsugdrTEeWv0eZvzLc0yA" name="time" type="_xVIGydrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xVsugtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsV9rTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" isAbstract="true" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXza9rTEeWv0eZvzLc0yA">
                      <body>Read one row from the result set and store the result in the context</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXgsWNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsWdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsWtrTEeWv0eZvzLc0yA" name="ResultSetReader" visibility="protected" method="_xZzL9drTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXgsXdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXgsXtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXgsW9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsXNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsX9rTEeWv0eZvzLc0yA" type="_xP2lMtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsYNrTEeWv0eZvzLc0yA" name="run" isLeaf="true" method="_xZzL-drTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsYdrTEeWv0eZvzLc0yA" name="mh" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP2lN9rTEeWv0eZvzLc0yA" name="SerialNumberResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzcdrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for serial numbers of the OOSes.&lt;br>&#xD;
&lt;b>Note:&lt;/b> This class requires that the OOSes are available in the context,&#xD;
i.e. the OOSResultSetReader must be called before!</body>
                  </ownedComment>
                  <generalization xmi:id="_xVsug9rTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMCdrTEeWv0eZvzLc0yA" name="SerialNumberResultSetReader" specification="_xXgsY9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMCtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMC9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMDNrTEeWv0eZvzLc0yA" type="_xP2lN9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMDdrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXgsadrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMDtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMD9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String oosKey = rs.getString(&quot;SNC_OOS_KEY&quot;);&#xD;
&#xD;
     OOSKey key = new OOSKey(oosKey);&#xD;
&#xD;
     OOSComplexType o = ctx.getOOS(key);&#xD;
     if (o!=null) {&#xD;
         String serialNo = rs.getString(&quot;SNC_SERIAL_NUMBER&quot;);&#xD;
         if (serialNo!=null) {&#xD;
             o.addSerialNumber(serialNo);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXgsY9rTEeWv0eZvzLc0yA" name="SerialNumberResultSetReader" method="_xZzMCdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXgsZtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXgsZ9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXgsZNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsZdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsaNrTEeWv0eZvzLc0yA" type="_xP2lN9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsadrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzMDdrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsatrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsa9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rwNrTEeWv0eZvzLc0yA" name="ServiceProductTypeResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzctrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for service product types and adds&#xD;
the service product type to the contract. It ensures that only unique&#xD;
service product types are added.&#xD;
&lt;b>Note:&lt;/b> This class requires that the contracts are available in the context,&#xD;
i.e. the ObligationHeaderResultSetReader must be called before!</body>
                  </ownedComment>
                  <generalization xmi:id="_xVsuhNrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMENrTEeWv0eZvzLc0yA" name="ServiceProductTypeResultSetReader" specification="_xXgsbNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMEdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMEtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzME9rTEeWv0eZvzLc0yA" type="_xP8rwNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZzMFNrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXgsctrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZzMFdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZzMFtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;SVC_SOURCE_OBLIGATION_ID&quot;);&#xD;
     ObligationHeaderKey key = new ObligationHeaderKey(sourceObligationId);&#xD;
&#xD;
     // The same contract can be returned for different keys, i.e.&#xD;
     // if the database returns the same service product type for&#xD;
     // different source obligation IDs, we would duplicate the&#xD;
     // service product type. Therefore, the method checks if the&#xD;
     // service product type already exists.&#xD;
     ContractComplexType c = ctx.getUniqueContract(key);&#xD;
     if (c!=null) {&#xD;
         String type = rs.getString(&quot;SVC_PRODUCT_TYPE&quot;);&#xD;
         if (type!=null) {&#xD;
             // the following simple algorithm should not be a&#xD;
             // performance issue because there are just 6&#xD;
             // different service product types&#xD;
             Enumeration enumeration = c.enumerateSvcProductType();&#xD;
             while (enumeration.hasMoreElements()) {&#xD;
                 if (type.equals(enumeration.nextElement())) {&#xD;
                     // if already exists then don't add a duplicate&#xD;
                     // entry&#xD;
                     return;&#xD;
                 }&#xD;
             }&#xD;
             c.addSvcProductType(type);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXgsbNrTEeWv0eZvzLc0yA" name="ServiceProductTypeResultSetReader" method="_xZzMENrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXgsb9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXgscNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXgsbdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsbtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgscdrTEeWv0eZvzLc0yA" type="_xP8rwNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsctrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZzMFNrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsc9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsdNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rwdrTEeWv0eZvzLc0yA" name="ServiceResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzc9rTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for offers and service items.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVy1ENrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5R8NrTEeWv0eZvzLc0yA" name="ServiceResultSetReader" specification="_xXgsddrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5R8drTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R8trTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R89rTEeWv0eZvzLc0yA" type="_xP8rwdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5R9NrTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXgse9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5R9drTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R9trTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;SVC_SOURCE_OBLIGATION_ID&quot;);&#xD;
     String item               = rs.getString(&quot;SVC_ITEM&quot;);&#xD;
&#xD;
     ServiceKey key = new ServiceKey(sourceObligationId, item);&#xD;
&#xD;
     OfferComplexType o = new OfferComplexType();&#xD;
&#xD;
     // Note: serviceQty is the SVC_AGG_QUANTITY, not the&#xD;
     // SVC_QUANTITY which comes via CDO.&#xD;
     int serviceQty = rs.getInt(&quot;SVC_AGG_QUANTITY&quot;);&#xD;
     if ( !rs.wasNull()) {&#xD;
         o.setServiceQuantity(serviceQty);&#xD;
         int consumptionQty = rs.getInt(&quot;SVC_CONSUMPTION_QTY&quot;);&#xD;
         if ( !rs.wasNull()) {&#xD;
             // The available quantity is calculated based on the service&#xD;
             // quantity and the consumption quantity. If one of these&#xD;
             // quantities is null, the available quantity cannot be&#xD;
             // calculated.&#xD;
             o.setAvailableQuantity(serviceQty-consumptionQty);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // o.setFromMonth(); -> Warranty only&#xD;
     // o.setToMonth(); -> Warranty only&#xD;
&#xD;
     Boolean tmp = convertBoolean(rs.getString(&quot;SVC_AGG_INCIDENT_BASED&quot;));&#xD;
     o.setIncidentBasedOffer((tmp==null) ? false : tmp.booleanValue());&#xD;
&#xD;
     o.setOfferCode(rs.getString(&quot;SVC_PRODUCT_ID&quot;));&#xD;
     o.setOfferDescription(rs.getString(&quot;SVC_DESCRIPTION&quot;));&#xD;
&#xD;
     tmp = convertBoolean(rs.getString(&quot;SVC_AGG_STANDALONE_OFFER&quot;));&#xD;
     o.setStandAloneOffer((tmp==null) ? false : tmp.booleanValue());&#xD;
&#xD;
     o.setSvcProductLine(rs.getString(&quot;SVC_PRODUCT_LINE&quot;));&#xD;
     o.setSvcProductType(rs.getString(&quot;SVC_PRODUCT_TYPE&quot;));&#xD;
&#xD;
     ServiceItem i = new ServiceItem();&#xD;
     i.setAssociatedPkgItem(rs.getString(&quot;SVC_ASSOCIATED_PKG&quot;));&#xD;
     i.setItem(item);&#xD;
&#xD;
     ctx.addOffer(key, o);&#xD;
     ctx.addServiceItem(key, i);&#xD;
&#xD;
     //The following two lines are for PoP. The column is from table &quot;service&quot;&#xD;
     String serviceStartDateEligibility = rs.getString(&quot;SVC_WTY_START_DATE_ELIGIBILITY&quot;);&#xD;
     if (serviceStartDateEligibility != null) {&#xD;
         ctx.addSvcWtyStartDateEligibility(key, serviceStartDateEligibility);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXgsddrTEeWv0eZvzLc0yA" name="ServiceResultSetReader" method="_xZ5R8NrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXgseNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXgsedrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXgsdtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsd9rTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsetrTEeWv0eZvzLc0yA" type="_xP8rwdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgse9rTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZ5R9NrTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsfNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsfdrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rwtrTEeWv0eZvzLc0yA" name="SvcModifierResultSetReader" visibility="package">
                  <ownedComment xmi:id="_xaXzdNrTEeWv0eZvzLc0yA">
                    <body>This class reads the result set for modifiers.</body>
                  </ownedComment>
                  <generalization xmi:id="_xVy1EdrTEeWv0eZvzLc0yA" general="_xP2lMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5R99rTEeWv0eZvzLc0yA" name="SvcModifierResultSetReader" specification="_xXgsftrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5R-NrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R-drTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R-trTEeWv0eZvzLc0yA" type="_xP8rwtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(ctx, rs);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5R-9rTEeWv0eZvzLc0yA" name="parseNextRow" specification="_xXgshNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5R_NrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5R_drTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>String sourceObligationId = rs.getString(&quot;SMOD_SOURCE_OBLIGATION_ID&quot;);&#xD;
     String item               = rs.getString(&quot;SMOD_SVC_ITEM&quot;);&#xD;
     String name               = rs.getString(&quot;SMOD_NAME&quot;);&#xD;
&#xD;
     ModifierKey key = new ModifierKey(sourceObligationId, item, name);&#xD;
&#xD;
     ModifierComplexType m = new ModifierComplexType();&#xD;
     m.setModDesc(rs.getString(&quot;SMOD_DESC&quot;));&#xD;
     m.setModName(name);&#xD;
     m.setModValue(rs.getString(&quot;SMOD_VALUE&quot;));&#xD;
     m.setRedModValue2(rs.getString(&quot;SMOD_RED_VALUE2&quot;));&#xD;
&#xD;
     ctx.addModifier(key, m);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xXgsftrTEeWv0eZvzLc0yA" name="SvcModifierResultSetReader" method="_xZ5R99rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xXgsgdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xXgsgtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xXgsf9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsgNrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsg9rTEeWv0eZvzLc0yA" type="_xP8rwtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgshNrTEeWv0eZvzLc0yA" name="parseNextRow" visibility="protected" method="_xZ5R-9rTEeWv0eZvzLc0yA" raisedException="_xVaantrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgshdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgshtrTEeWv0eZvzLc0yA" name="rs" type="_xVaanNrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xaqHJNrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHJdrTEeWv0eZvzLc0yA _xY8PyNrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xaqHJdrTEeWv0eZvzLc0yA" name="" type="_xPkRQdrTEeWv0eZvzLc0yA" association="_xaqHJNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xaqHJ9rTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHKNrTEeWv0eZvzLc0yA _xY8P09rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xaqHKNrTEeWv0eZvzLc0yA" name="" type="_xPkRQtrTEeWv0eZvzLc0yA" association="_xaqHJ9rTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xaqHKtrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHK9rTEeWv0eZvzLc0yA _xZCWe9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xaqHK9rTEeWv0eZvzLc0yA" name="" type="_xP2lMtrTEeWv0eZvzLc0yA" association="_xaqHKtrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xaqHLdrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHLtrTEeWv0eZvzLc0yA _xZCWfdrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xaqHLtrTEeWv0eZvzLc0yA" name="" type="_xP2lMtrTEeWv0eZvzLc0yA" association="_xaqHLdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xMa2pdrTEeWv0eZvzLc0yA" name="keys">
                <packagedElement xmi:type="uml:Class" xmi:id="_xRBp19rTEeWv0eZvzLc0yA" name="AppliesToKey">
                  <generalization xmi:id="_xWXc39rTEeWv0eZvzLc0yA" general="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqRNrTEeWv0eZvzLc0yA" name="oosKey" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfhdrTEeWv0eZvzLc0yA" name="AppliesToKey" specification="_xWXc2drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfhtrTEeWv0eZvzLc0yA" name="key" type="_xRBp19rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfh9rTEeWv0eZvzLc0yA" type="_xRBp19rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID(), key.getItem(), key.getOOSKey());&#xD;
     hashCode = key.hashCode();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfiNrTEeWv0eZvzLc0yA" name="AppliesToKey" specification="_xRBp2NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfidrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfitrTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfi9rTEeWv0eZvzLc0yA" name="newOOSKey">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfjNrTEeWv0eZvzLc0yA" type="_xRBp19rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(newSourceObligationID, newItem);&#xD;
     oosKey = newOOSKey;&#xD;
     calculateHashCode(newOOSKey);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfjdrTEeWv0eZvzLc0yA" name="toString" specification="_xRBp39rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfjtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (selfAsString == null){&#xD;
       StringBuffer buf = new StringBuffer();&#xD;
       buf.append(getSourceObligationID());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getItem());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(oosKey);&#xD;
       selfAsString = buf.toString();&#xD;
     }&#xD;
     return selfAsString;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfj9rTEeWv0eZvzLc0yA" name="getOOSKey" specification="_xRBp4drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfkNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return oosKey;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfkdrTEeWv0eZvzLc0yA" name="equals" specification="_xYRhb9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfktrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfk9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         AppliesToKey other = (AppliesToKey)o;&#xD;
         return (equalStrings(this.getItem(), other.getItem()) &amp;&amp;&#xD;
                 equalStrings(this.getOOSKey(), other.getOOSKey()) &amp;&amp;&#xD;
                 equalStrings(this.getSourceObligationID(), other.getSourceObligationID()));&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFflNrTEeWv0eZvzLc0yA" name="createParent" specification="_xRBp49rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfldrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new ServiceKey(this);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRBp2NrTEeWv0eZvzLc0yA" name="AppliesToKey" method="_xaFfiNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRBp3NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRBp3drTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzlNrTEeWv0eZvzLc0yA">
                      <body>@roseuid 3E84528C01E9</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRBp2drTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp2trTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp29rTEeWv0eZvzLc0yA" name="newOOSKey">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp3trTEeWv0eZvzLc0yA" type="_xRBp19rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp39rTEeWv0eZvzLc0yA" name="toString" method="_xaFfjdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzldrTEeWv0eZvzLc0yA">
                      <body>@return String&#xD;
     * @roseuid 3E8453850223</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRBp4NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp4drTEeWv0eZvzLc0yA" name="getOOSKey" method="_xaFfj9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzltrTEeWv0eZvzLc0yA">
                      <body>@return java.lang.String&#xD;
     * @roseuid 3E845385025F</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRBp4trTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp49rTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaFflNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzmNrTEeWv0eZvzLc0yA">
                      <body>Create the Key that identifies the parent object</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWXc3trTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWXc2drTEeWv0eZvzLc0yA" name="AppliesToKey" method="_xaFfhdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWXc29rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWXc3NrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzk9rTEeWv0eZvzLc0yA">
                      <body>Create an key and initialize it with the source data&#xD;
     * @param key&#xD;
     * @roseuid 3E845385018D</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWXc2trTEeWv0eZvzLc0yA" name="key" type="_xRBp19rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWXc3drTEeWv0eZvzLc0yA" type="_xRBp19rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhb9rTEeWv0eZvzLc0yA" name="equals" method="_xaFfkdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzl9rTEeWv0eZvzLc0yA">
                      <body>@param o&#xD;
     * @return String</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYRhcNrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhcdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRBp5NrTEeWv0eZvzLc0yA" name="ContactKey">
                  <generalization xmi:id="_xWXc5trTEeWv0eZvzLc0yA" general="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqRtrTEeWv0eZvzLc0yA" name="sourcePersonID" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfltrTEeWv0eZvzLc0yA" name="ContactKey" specification="_xWXc4NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfl9rTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfmNrTEeWv0eZvzLc0yA" type="_xRBp5NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourcePersonID());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfmdrTEeWv0eZvzLc0yA" name="ContactKey" specification="_xRBp5drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfmtrTEeWv0eZvzLc0yA" name="newSourcePersonID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfm9rTEeWv0eZvzLc0yA" type="_xRBp5NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>sourcePersonID = newSourcePersonID;&#xD;
     calculateHashCode(newSourcePersonID);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfnNrTEeWv0eZvzLc0yA" name="toString" specification="_xRBp6trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfndrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return sourcePersonID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfntrTEeWv0eZvzLc0yA" name="createParent" specification="_xRBp7NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfn9rTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRBp5drTEeWv0eZvzLc0yA" name="ContactKey" method="_xaFfmdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRBp59rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRBp6NrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRBp5trTEeWv0eZvzLc0yA" name="newSourcePersonID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp6drTEeWv0eZvzLc0yA" type="_xRBp5NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp6trTEeWv0eZvzLc0yA" name="toString" method="_xaFfnNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRBp69rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp7NrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaFfntrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWXc5drTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWXc4NrTEeWv0eZvzLc0yA" name="ContactKey" method="_xaFfltrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWXc4trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWXc49rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWXc4drTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWXc5NrTEeWv0eZvzLc0yA" type="_xRBp5NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRBp7drTEeWv0eZvzLc0yA" name="DelivModifierKey">
                  <generalization xmi:id="_xWdjcNrTEeWv0eZvzLc0yA" general="_xRBp-9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqR9rTEeWv0eZvzLc0yA" name="modName" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZUqSNrTEeWv0eZvzLc0yA" name="redModCode" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfoNrTEeWv0eZvzLc0yA" name="DelivModifierKey" specification="_xWXc59rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfodrTEeWv0eZvzLc0yA" name="key" type="_xRBp7drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfotrTEeWv0eZvzLc0yA" type="_xRBp7drTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID(), key.getItem(),&#xD;
          key.getDlvName(), key.getRedDlvCode(),&#xD;
          key.getModName(), key.getRedModCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfo9rTEeWv0eZvzLc0yA" name="DelivModifierKey" specification="_xRBp7trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfpNrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfpdrTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfptrTEeWv0eZvzLc0yA" name="newDlvName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfp9rTEeWv0eZvzLc0yA" name="newRedDlvCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfqNrTEeWv0eZvzLc0yA" name="newModName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfqdrTEeWv0eZvzLc0yA" name="newRedModCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfqtrTEeWv0eZvzLc0yA" type="_xRBp7drTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(newSourceObligationID, newItem, newDlvName, newRedDlvCode);&#xD;
     modName = newModName;&#xD;
     redModCode = newRedModCode;&#xD;
     calculateHashCode(newModName);&#xD;
     calculateHashCode(newRedModCode);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfq9rTEeWv0eZvzLc0yA" name="toString" specification="_xRBp-NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfrNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (selfAsString == null){&#xD;
       StringBuffer buf = new StringBuffer();&#xD;
       buf.append(getSourceObligationID());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getItem());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getDlvName());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getRedDlvCode());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getModName());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getRedModCode());&#xD;
       selfAsString = buf.toString();&#xD;
     }&#xD;
     return selfAsString;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfrdrTEeWv0eZvzLc0yA" name="equals" specification="_xYRhctrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfrtrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfr9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         DelivModifierKey other = (DelivModifierKey)o;&#xD;
         return (equalStrings(this.getItem(), other.getItem()) &amp;&amp;&#xD;
                 equalStrings(this.getSourceObligationID(), other.getSourceObligationID()) &amp;&amp;&#xD;
                 equalStrings(this.getDlvName(), other.getDlvName()) &amp;&amp;&#xD;
                 equalStrings(this.getRedDlvCode(), other.getRedDlvCode()) &amp;&amp;&#xD;
                 equalStrings(this.getModName(), other.getModName()) &amp;&amp;&#xD;
                 equalStrings(this.getRedModCode(), other.getRedModCode())&#xD;
                 );&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfsNrTEeWv0eZvzLc0yA" name="createParent" specification="_xRBp-trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfsdrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new DeliverableKey(this);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRBp7trTEeWv0eZvzLc0yA" name="DelivModifierKey" method="_xaFfo9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRBp9drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRBp9trTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRBp79rTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp8NrTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp8drTEeWv0eZvzLc0yA" name="newDlvName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp8trTEeWv0eZvzLc0yA" name="newRedDlvCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp89rTEeWv0eZvzLc0yA" name="newModName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp9NrTEeWv0eZvzLc0yA" name="newRedModCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRBp99rTEeWv0eZvzLc0yA" type="_xRBp7drTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp-NrTEeWv0eZvzLc0yA" name="toString" method="_xaFfq9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRBp-drTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRBp-trTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaFfsNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWXc7NrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWXc59rTEeWv0eZvzLc0yA" name="DelivModifierKey" method="_xaFfoNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWXc6drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWXc6trTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWXc6NrTEeWv0eZvzLc0yA" name="key" type="_xRBp7drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWXc69rTEeWv0eZvzLc0yA" type="_xRBp7drTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhctrTEeWv0eZvzLc0yA" name="equals" method="_xaFfrdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYRhc9rTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhdNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRBp-9rTEeWv0eZvzLc0yA" name="DeliverableKey">
                  <generalization xmi:id="_xWdjd9rTEeWv0eZvzLc0yA" general="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqSdrTEeWv0eZvzLc0yA" name="dlvName" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZUqStrTEeWv0eZvzLc0yA" name="redDlvCode" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfstrTEeWv0eZvzLc0yA" name="DeliverableKey" specification="_xWdjcdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfs9rTEeWv0eZvzLc0yA" name="key" type="_xRBp-9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFftNrTEeWv0eZvzLc0yA" type="_xRBp-9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID(), key.getItem(),&#xD;
          key.getDlvName(), key.getRedDlvCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFftdrTEeWv0eZvzLc0yA" name="DeliverableKey" specification="_xRHwcNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfttrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFft9rTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfuNrTEeWv0eZvzLc0yA" name="newDlvName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfudrTEeWv0eZvzLc0yA" name="newRedDlvCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfutrTEeWv0eZvzLc0yA" type="_xRBp-9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(newSourceObligationID, newItem);&#xD;
     dlvName = newDlvName;&#xD;
     redDlvCode = newRedDlvCode;&#xD;
     calculateHashCode(newDlvName);&#xD;
     calculateHashCode(newRedDlvCode);&#xD;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfu9rTEeWv0eZvzLc0yA" name="toString" specification="_xRHweNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfvNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (selfAsString == null){&#xD;
       StringBuffer buf = new StringBuffer();&#xD;
       buf.append(getSourceObligationID());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getItem());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getDlvName());&#xD;
       buf.append(KEY_DELIMITTER);&#xD;
       buf.append(getRedDlvCode());&#xD;
       selfAsString = buf.toString();&#xD;
     }&#xD;
     return selfAsString;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfvdrTEeWv0eZvzLc0yA" name="equals" specification="_xYRhddrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfvtrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfv9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         DeliverableKey other = (DeliverableKey)o;&#xD;
         return (equalStrings(this.getItem(), other.getItem()) &amp;&amp;&#xD;
                 equalStrings(this.getSourceObligationID(), other.getSourceObligationID()) &amp;&amp;&#xD;
                 equalStrings(this.getDlvName(), other.getDlvName()) &amp;&amp;&#xD;
                 equalStrings(this.getRedDlvCode(), other.getRedDlvCode())&#xD;
                 );&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfwNrTEeWv0eZvzLc0yA" name="createParent" specification="_xRHwetrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfwdrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new ServiceKey(this);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRHwcNrTEeWv0eZvzLc0yA" name="DeliverableKey" method="_xaFftdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRHwddrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRHwdtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRHwcdrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwctrTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwc9rTEeWv0eZvzLc0yA" name="newDlvName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwdNrTEeWv0eZvzLc0yA" name="newRedDlvCode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwd9rTEeWv0eZvzLc0yA" type="_xRBp-9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHweNrTEeWv0eZvzLc0yA" name="toString" method="_xaFfu9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRHwedrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwetrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaFfwNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWdjdtrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjcdrTEeWv0eZvzLc0yA" name="DeliverableKey" method="_xaFfstrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjc9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdjdNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdjctrTEeWv0eZvzLc0yA" name="key" type="_xRBp-9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjddrTEeWv0eZvzLc0yA" type="_xRBp-9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhddrTEeWv0eZvzLc0yA" name="equals" method="_xaFfvdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYRhdtrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhd9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRHwe9rTEeWv0eZvzLc0yA" name="Key" isAbstract="true">
                  <ownedAttribute xmi:id="_xZUqS9rTEeWv0eZvzLc0yA" name="hashCode" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZUqTdrTEeWv0eZvzLc0yA" name="selfAsString" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqTtrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZUqUNrTEeWv0eZvzLc0yA" name="parent" visibility="private" type="_xRHwe9rTEeWv0eZvzLc0yA" association="_xbChj9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqUtrTEeWv0eZvzLc0yA" name="KEY_DELIMITTER" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqU9rTEeWv0eZvzLc0yA" value="&quot;|&quot;"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:id="_xYRhetrTEeWv0eZvzLc0yA" client="_xRHwe9rTEeWv0eZvzLc0yA" supplier="_xYRheNrTEeWv0eZvzLc0yA" contract="_xYRheNrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfwtrTEeWv0eZvzLc0yA" name="Key" specification="_xRHwfNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfw9rTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>hashCode = 0;&#xD;
     parent = null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfxNrTEeWv0eZvzLc0yA" name="equals" specification="_xYRhe9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfxdrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFfxtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         if (this.getClass().equals(o.getClass())) {&#xD;
             return equalStrings(this.toString(), o.toString());&#xD;
         }&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfx9rTEeWv0eZvzLc0yA" name="equalStrings" specification="_xRHwgNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfyNrTEeWv0eZvzLc0yA" name="s1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfydrTEeWv0eZvzLc0yA" name="s2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFfytrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (s1==null) {&#xD;
         return s2==null;&#xD;
     }&#xD;
&#xD;
     if (s2==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     return s1.equals(s2);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfy9rTEeWv0eZvzLc0yA" name="calculateHashCode" specification="_xRHwhNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfzNrTEeWv0eZvzLc0yA" name="s">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>long newHashCode = hashCode;&#xD;
     if (s!=null) {&#xD;
         newHashCode += s.hashCode();&#xD;
     }&#xD;
     hashCode = (int)newHashCode;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfzdrTEeWv0eZvzLc0yA" name="hashCode" specification="_xRHwh9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFfztrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (hashCode==0) {&#xD;
         hashCode = this.toString().hashCode();&#xD;
     }&#xD;
     return hashCode;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfz9rTEeWv0eZvzLc0yA" name="getParent" specification="_xRHwjNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf0NrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>if (parent==null) {&#xD;
         parent = createParent();&#xD;
     }&#xD;
     return parent;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf0drTEeWv0eZvzLc0yA" name="compareTo" specification="_xYRhftrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf0trTEeWv0eZvzLc0yA" name="arg" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFf09rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String selfString=toString();&#xD;
     if (selfString != null){&#xD;
         // need to reverse ordering as CASTOR reverses it again, so it should be fine at the end :)&#xD;
         return -(selfString.compareTo(arg.toString()));&#xD;
     }else {&#xD;
         return 0;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRHwfNrTEeWv0eZvzLc0yA" name="Key" method="_xaFfwtrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRHwfdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRHwftrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzmdrTEeWv0eZvzLc0yA">
                      <body>Create an empty key&#xD;
     * @roseuid 3E830A0A026E</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRHwf9rTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwgNrTEeWv0eZvzLc0yA" name="equalStrings" visibility="protected" method="_xaFfx9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzm9rTEeWv0eZvzLc0yA">
                      <body>Helper method that checks if two strings are equal (including checks for&#xD;
     * null-values).</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRHwgdrTEeWv0eZvzLc0yA" name="s1">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwgtrTEeWv0eZvzLc0yA" name="s2">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwg9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwhNrTEeWv0eZvzLc0yA" name="calculateHashCode" visibility="protected" isLeaf="true" method="_xaFfy9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRHwhdrTEeWv0eZvzLc0yA" name="s">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwh9rTEeWv0eZvzLc0yA" name="hashCode" isLeaf="true" method="_xaFfzdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRHwiNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwitrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" isAbstract="true">
                    <ownedParameter xmi:id="_xWdjeNrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwjNrTEeWv0eZvzLc0yA" name="getParent" method="_xaFfz9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXznNrTEeWv0eZvzLc0yA">
                      <body>@return the parent key for the current key</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWdjedrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhe9rTEeWv0eZvzLc0yA" name="equals" method="_xaFfxNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzmtrTEeWv0eZvzLc0yA">
                      <body>Default implementation. For performance reasons, this method should&#xD;
     * be overwritten by the subclasses.&#xD;
     * @param o&#xD;
     * @return String&#xD;
     * @roseuid 3E82EB7A03D6</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYRhfNrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhfdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhftrTEeWv0eZvzLc0yA" name="compareTo" method="_xaFf0drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYRhf9rTEeWv0eZvzLc0yA" name="arg" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhgNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRHwjdrTEeWv0eZvzLc0yA" name="KeyTest">
                  <ownedComment xmi:id="_xaXzndrTEeWv0eZvzLc0yA">
                    <body>JUnit test case for all Keys in the current package. The tests ensures that&#xD;
&lt;ul>&#xD;
&lt;li>the equals method works correctly&#xD;
&lt;li>the hash codes are correctly calculated&#xD;
&lt;li>the toString method returns the expected results&#xD;
&lt;li>the parent key is correctly returned&#xD;
&lt;/ul></body>
                  </ownedComment>
                  <generalization xmi:id="_xYRhgtrTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf1NrTEeWv0eZvzLc0yA" name="KeyTest" specification="_xRHwjtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf1drTEeWv0eZvzLc0yA" name="inName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFf1trTEeWv0eZvzLc0yA" type="_xRHwjdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(inName);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf19rTEeWv0eZvzLc0yA" name="suite" specification="_xRHwk9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf2NrTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>// discover test*() methods via reflection:&#xD;
     return new TestSuite(KeyTest.class);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf2drTEeWv0eZvzLc0yA" name="main" specification="_xRHwlNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf2trTEeWv0eZvzLc0yA" name="args">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaFf29rTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>//  KeyTest o = new KeyTest(&quot;test&quot;);&#xD;
 //  o.testOperationManager();&#xD;
     junit.textui.TestRunner.run(suite());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf3NrTEeWv0eZvzLc0yA" name="testContactKey" specification="_xRHwl9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>ContactKey key1 = new ContactKey(&quot;1&quot;);&#xD;
     ContactKey key2 = new ContactKey(&quot;1&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     assertTrue(&quot;parentKey for ContactKey must be null&quot;,&#xD;
                key1.getParent()==null);&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1&quot;.equals(key1.toString()));&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new ContactKey(&quot;2&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
&#xD;
     key2 = new ContactKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf3drTEeWv0eZvzLc0yA" name="testDeliverableKey" specification="_xRHwmNrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>DeliverableKey key1 = new DeliverableKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;);&#xD;
     DeliverableKey key2 = new DeliverableKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     ServiceKey parent = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
     assertTrue(&quot;parentKey for DeliverableKey is wrong&quot;,&#xD;
                parent.equals(key1.getParent()));&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1|2|3|4&quot;.equals(key1.toString()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new DeliverableKey(&quot;x&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DeliverableKey(&quot;1&quot;, &quot;x&quot;, &quot;3&quot;, &quot;4&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'item' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DeliverableKey(&quot;1&quot;, &quot;2&quot;, &quot;x&quot;, &quot;4&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'dlvName' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DeliverableKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'redDlvCode' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new DeliverableKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf3trTEeWv0eZvzLc0yA" name="testDelivModifierKey" specification="_xRHwmdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>DelivModifierKey key1 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
     DelivModifierKey key2 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     DeliverableKey parent = new DeliverableKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;);&#xD;
     assertTrue(&quot;parentKey for DelivModifierKey is wrong&quot;,&#xD;
                parent.equals(key1.getParent()));&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1|2|3|4|5|6&quot;.equals(key1.toString()));&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;x&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;1&quot;, &quot;x&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'item' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;x&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'dlvName' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;x&quot;, &quot;5&quot;, &quot;6&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'redDlvCode' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;x&quot;, &quot;6&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'modName' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new DelivModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'redModCode' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
&#xD;
     key2 = new DelivModifierKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf39rTEeWv0eZvzLc0yA" name="testLocationKey" specification="_xRHwmtrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>LocationKey key1 = new LocationKey(&quot;1&quot;);&#xD;
     LocationKey key2 = new LocationKey(&quot;1&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     assertTrue(&quot;parentKey for LocationKey must be null&quot;,&#xD;
                key1.getParent()==null);&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1&quot;.equals(key1.toString()));&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new LocationKey(&quot;2&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceCustomerID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new LocationKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf4NrTEeWv0eZvzLc0yA" name="testModifierKey" specification="_xRHwm9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>ModifierKey key1 = new ModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
     ModifierKey key2 = new ModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     ServiceKey parent = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
     assertTrue(&quot;parentKey for ModifierKey is wrong&quot;,&#xD;
                parent.equals(key1.getParent()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1|2|3&quot;.equals(key1.toString()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new ModifierKey(&quot;x&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new ModifierKey(&quot;1&quot;, &quot;x&quot;, &quot;3&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'item' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new ModifierKey(&quot;1&quot;, &quot;2&quot;, &quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'name' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
&#xD;
     key2 = new ModifierKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf4drTEeWv0eZvzLc0yA" name="testObligationHeaderKey" specification="_xRHwnNrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>ObligationHeaderKey key1 = new ObligationHeaderKey(&quot;1&quot;);&#xD;
     ObligationHeaderKey key2 = new ObligationHeaderKey(&quot;1&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     assertTrue(&quot;parentKey for ObligationHeaderKey must be null&quot;,&#xD;
                key1.getParent()==null);&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1&quot;.equals(key1.toString()));&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new ObligationHeaderKey(&quot;2&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new ObligationHeaderKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf4trTEeWv0eZvzLc0yA" name="testOOSKey" specification="_xRHwndrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>OOSKey key1 = new OOSKey(&quot;1&quot;);&#xD;
     OOSKey key2 = new OOSKey(&quot;1&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     assertTrue(&quot;parentKey for OOSKey must be null&quot;,&#xD;
                key1.getParent()==null);&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1&quot;.equals(key1.toString()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new OOSKey(&quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'oosKey' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new OOSKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf49rTEeWv0eZvzLc0yA" name="testServiceKey" specification="_xRHwntrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>ServiceKey key1 = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
     ServiceKey key2 = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     ObligationHeaderKey parent = new ObligationHeaderKey(&quot;1&quot;);&#xD;
     assertTrue(&quot;parentKey for ServiceKey is wrong&quot;,&#xD;
                parent.equals(key1.getParent()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1|2&quot;.equals(key1.toString()));&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new ServiceKey(&quot;x&quot;, &quot;2&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new ServiceKey(&quot;1&quot;, &quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'serviceKey' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new ServiceKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf5NrTEeWv0eZvzLc0yA" name="testAppliesToKey" specification="_xRHwn9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>AppliesToKey key1 = new AppliesToKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
     AppliesToKey key2 = new AppliesToKey(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
&#xD;
     ServiceKey parent = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
     assertTrue(&quot;parentKey for ServiceKey is wrong&quot;,&#xD;
                parent.equals(key1.getParent()));&#xD;
&#xD;
     assertTrue(&quot;toString() returns wrong result: '&quot; + key1.toString() + &quot;'&quot;,&#xD;
                &quot;1|2|3&quot;.equals(key1.toString()));&#xD;
&#xD;
&#xD;
     assertTrue(&quot;equals() method returns false for equal keys&quot;,&#xD;
                key1.equals(key2));&#xD;
&#xD;
     key1 = new AppliesToKey(&quot;x&quot;, &quot;2&quot;, &quot;3&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'sourceObligationID' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new AppliesToKey(&quot;1&quot;, &quot;x&quot;, &quot;3&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'serviceKey' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key1 = new AppliesToKey(&quot;1&quot;, &quot;2&quot;, &quot;x&quot;);&#xD;
     assertTrue(&quot;equals() method still returns true when paramter 'serviceKey' has changed&quot;,&#xD;
                ! key1.equals(key2));&#xD;
&#xD;
     key2 = new AppliesToKey(key1);&#xD;
     assertTrue(&quot;new Key(Key) doesn't return an identical key&quot;,&#xD;
                key2.equals(key1));&#xD;
     assertTrue(&quot;The hash codes for the Keys are not identical after constructor Key(Key)&quot;,&#xD;
                key1.hashCode()==key2.hashCode());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRHwjtrTEeWv0eZvzLc0yA" name="KeyTest" method="_xaFf1NrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRHwkNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRHwkdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRHwj9rTEeWv0eZvzLc0yA" name="inName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRHwktrTEeWv0eZvzLc0yA" type="_xRHwjdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwk9rTEeWv0eZvzLc0yA" name="suite" isStatic="true" method="_xaFf19rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYRhgdrTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwlNrTEeWv0eZvzLc0yA" name="main" isStatic="true" method="_xaFf2drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRHwldrTEeWv0eZvzLc0yA" name="args">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xRHwltrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRHwl9rTEeWv0eZvzLc0yA" name="testContactKey" method="_xaFf3NrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwmNrTEeWv0eZvzLc0yA" name="testDeliverableKey" method="_xaFf3drTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwmdrTEeWv0eZvzLc0yA" name="testDelivModifierKey" method="_xaFf3trTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwmtrTEeWv0eZvzLc0yA" name="testLocationKey" method="_xaFf39rTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwm9rTEeWv0eZvzLc0yA" name="testModifierKey" method="_xaFf4NrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwnNrTEeWv0eZvzLc0yA" name="testObligationHeaderKey" method="_xaFf4drTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwndrTEeWv0eZvzLc0yA" name="testOOSKey" method="_xaFf4trTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwntrTEeWv0eZvzLc0yA" name="testServiceKey" method="_xaFf49rTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRHwn9rTEeWv0eZvzLc0yA" name="testAppliesToKey" method="_xaFf5NrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRHwoNrTEeWv0eZvzLc0yA" name="LocationKey">
                  <generalization xmi:id="_xWdjgNrTEeWv0eZvzLc0yA" general="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZUqVNrTEeWv0eZvzLc0yA" name="sourceCustomerID" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf5drTEeWv0eZvzLc0yA" name="LocationKey" specification="_xWdjetrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf5trTEeWv0eZvzLc0yA" name="key" type="_xRHwoNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaFf59rTEeWv0eZvzLc0yA" type="_xRHwoNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceCustomerID());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf6NrTEeWv0eZvzLc0yA" name="LocationKey" specification="_xRN3ENrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf6drTEeWv0eZvzLc0yA" name="newSourceCustomerID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaFf6trTEeWv0eZvzLc0yA" type="_xRHwoNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>sourceCustomerID = newSourceCustomerID;&#xD;
     calculateHashCode(newSourceCustomerID);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf69rTEeWv0eZvzLc0yA" name="toString" specification="_xRN3FdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf7NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return sourceCustomerID;     &#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFf7drTEeWv0eZvzLc0yA" name="createParent" specification="_xRN3F9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaFf7trTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRN3ENrTEeWv0eZvzLc0yA" name="LocationKey" method="_xaFf6NrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRN3EtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRN3E9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRN3EdrTEeWv0eZvzLc0yA" name="newSourceCustomerID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3FNrTEeWv0eZvzLc0yA" type="_xRHwoNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3FdrTEeWv0eZvzLc0yA" name="toString" method="_xaFf69rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRN3FtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3F9rTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaFf7drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWdjf9rTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjetrTEeWv0eZvzLc0yA" name="LocationKey" method="_xaFf5drTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjfNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdjfdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdje9rTEeWv0eZvzLc0yA" name="key" type="_xRHwoNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjftrTEeWv0eZvzLc0yA" type="_xRHwoNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRN3GNrTEeWv0eZvzLc0yA" name="ModifierKey">
                  <generalization xmi:id="_xWdjh9rTEeWv0eZvzLc0yA" general="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw0NrTEeWv0eZvzLc0yA" name="modName" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl0NrTEeWv0eZvzLc0yA" name="ModifierKey" specification="_xWdjgdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl0drTEeWv0eZvzLc0yA" name="key" type="_xRN3GNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLl0trTEeWv0eZvzLc0yA" type="_xRN3GNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID(), key.getItem(), key.getModName());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl09rTEeWv0eZvzLc0yA" name="ModifierKey" specification="_xRN3GdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl1NrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl1drTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl1trTEeWv0eZvzLc0yA" name="newModName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl19rTEeWv0eZvzLc0yA" type="_xRN3GNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(newSourceObligationID, newItem);&#xD;
     modName = newModName;&#xD;
     calculateHashCode(newModName);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl2NrTEeWv0eZvzLc0yA" name="toString" specification="_xRN3INrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl2drTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (selfAsString == null){&#xD;
     StringBuffer buf = new StringBuffer();&#xD;
     buf.append(getSourceObligationID());&#xD;
     buf.append(KEY_DELIMITTER);&#xD;
     buf.append(getItem());&#xD;
     buf.append(KEY_DELIMITTER);&#xD;
     buf.append(modName);&#xD;
     selfAsString = buf.toString();&#xD;
   }&#xD;
   return selfAsString;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl2trTEeWv0eZvzLc0yA" name="equals" specification="_xYRhg9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl29rTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLl3NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         ModifierKey other = (ModifierKey)o;&#xD;
         return (equalStrings(this.getItem(), other.getItem()) &amp;&amp;&#xD;
                 equalStrings(this.getSourceObligationID(), other.getSourceObligationID()) &amp;&amp;&#xD;
                 equalStrings(this.getModName(), other.getModName())&#xD;
                 );&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl3drTEeWv0eZvzLc0yA" name="createParent" specification="_xRN3ItrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl3trTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new ServiceKey(this);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRN3GdrTEeWv0eZvzLc0yA" name="ModifierKey" method="_xaLl09rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRN3HdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRN3HtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRN3GtrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3G9rTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3HNrTEeWv0eZvzLc0yA" name="newModName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3H9rTEeWv0eZvzLc0yA" type="_xRN3GNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3INrTEeWv0eZvzLc0yA" name="toString" method="_xaLl2NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRN3IdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3ItrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaLl3drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWdjhtrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjgdrTEeWv0eZvzLc0yA" name="ModifierKey" method="_xaLl0NrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjg9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdjhNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdjgtrTEeWv0eZvzLc0yA" name="key" type="_xRN3GNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjhdrTEeWv0eZvzLc0yA" type="_xRN3GNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYRhg9rTEeWv0eZvzLc0yA" name="equals" method="_xaLl2trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYRhhNrTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYRhhdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRN3I9rTEeWv0eZvzLc0yA" name="OOSKey">
                  <generalization xmi:id="_xWdjjtrTEeWv0eZvzLc0yA" general="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw0drTEeWv0eZvzLc0yA" name="oosKey" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl39rTEeWv0eZvzLc0yA" name="OOSKey" specification="_xWdjiNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl4NrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLl4drTEeWv0eZvzLc0yA" type="_xRN3I9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getOOSKey());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl4trTEeWv0eZvzLc0yA" name="OOSKey" specification="_xRN3JNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl49rTEeWv0eZvzLc0yA" name="newOOSKey">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl5NrTEeWv0eZvzLc0yA" type="_xRN3I9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>oosKey = newOOSKey;&#xD;
     calculateHashCode(newOOSKey);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl5drTEeWv0eZvzLc0yA" name="toString" specification="_xRN3KdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl5trTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return oosKey;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl59rTEeWv0eZvzLc0yA" name="getOOSKey" specification="_xRN3K9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl6NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return oosKey;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl6drTEeWv0eZvzLc0yA" name="createParent" specification="_xRN3LdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl6trTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRN3JNrTEeWv0eZvzLc0yA" name="OOSKey" method="_xaLl4trTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRN3JtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRN3J9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzn9rTEeWv0eZvzLc0yA">
                      <body>@roseuid 3E82EC51005A</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRN3JdrTEeWv0eZvzLc0yA" name="newOOSKey">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3KNrTEeWv0eZvzLc0yA" type="_xRN3I9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3KdrTEeWv0eZvzLc0yA" name="toString" method="_xaLl5drTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzoNrTEeWv0eZvzLc0yA">
                      <body>@return String&#xD;
     * @roseuid 3E830A0D0178</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRN3KtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3K9rTEeWv0eZvzLc0yA" name="getOOSKey" method="_xaLl59rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzodrTEeWv0eZvzLc0yA">
                      <body>@return java.lang.String&#xD;
     * @roseuid 3E830A0D01DC</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRN3LNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3LdrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaLl6drTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzotrTEeWv0eZvzLc0yA">
                      <body>Create the Key that identifies the parent object</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWdjjdrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjiNrTEeWv0eZvzLc0yA" name="OOSKey" method="_xaLl39rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjitrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdji9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzntrTEeWv0eZvzLc0yA">
                      <body>Create an key and initialize it with the source data&#xD;
     * @param key&#xD;
     * @roseuid 3E830A0D0100</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWdjidrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjjNrTEeWv0eZvzLc0yA" type="_xRN3I9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRN3LtrTEeWv0eZvzLc0yA" name="ObligationHeaderKey">
                  <generalization xmi:id="_xWdjldrTEeWv0eZvzLc0yA" general="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw09rTEeWv0eZvzLc0yA" name="sourceObligationID" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl69rTEeWv0eZvzLc0yA" name="ObligationHeaderKey" specification="_xWdjj9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl7NrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLl7drTEeWv0eZvzLc0yA" type="_xRN3LtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl7trTEeWv0eZvzLc0yA" name="ObligationHeaderKey" specification="_xRN3L9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl79rTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl8NrTEeWv0eZvzLc0yA" type="_xRN3LtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>sourceObligationID = newSourceObligationID;&#xD;
     calculateHashCode(newSourceObligationID);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl8drTEeWv0eZvzLc0yA" name="toString" specification="_xRN3NNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl8trTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return sourceObligationID;     &#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl89rTEeWv0eZvzLc0yA" name="createParent" specification="_xRN3NtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl9NrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRN3L9rTEeWv0eZvzLc0yA" name="ObligationHeaderKey" method="_xaLl7trTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRN3MdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRN3MtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRN3MNrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3M9rTEeWv0eZvzLc0yA" type="_xRN3LtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3NNrTEeWv0eZvzLc0yA" name="toString" method="_xaLl8drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRN3NdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3NtrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaLl89rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWdjlNrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjj9rTEeWv0eZvzLc0yA" name="ObligationHeaderKey" method="_xaLl69rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjkdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdjktrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdjkNrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjk9rTEeWv0eZvzLc0yA" type="_xRN3LtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRN3N9rTEeWv0eZvzLc0yA" name="ServiceKey">
                  <generalization xmi:id="_xWdjnNrTEeWv0eZvzLc0yA" general="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw1NrTEeWv0eZvzLc0yA" name="item" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl9drTEeWv0eZvzLc0yA" name="ServiceKey" specification="_xWdjltrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl9trTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLl99rTEeWv0eZvzLc0yA" type="_xRN3N9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>this(key.getSourceObligationID(), key.getItem());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl-NrTEeWv0eZvzLc0yA" name="ServiceKey" specification="_xRN3ONrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl-drTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl-trTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLl-9rTEeWv0eZvzLc0yA" type="_xRN3N9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(newSourceObligationID);&#xD;
     item = newItem;&#xD;
     calculateHashCode(newItem);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl_NrTEeWv0eZvzLc0yA" name="toString" specification="_xRN3PtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl_drTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (selfAsString == null){&#xD;
     StringBuffer buf = new StringBuffer();&#xD;
     buf.append(getSourceObligationID());&#xD;
     buf.append(KEY_DELIMITTER);&#xD;
     buf.append(item);&#xD;
     selfAsString = buf.toString();&#xD;
   }&#xD;
   return selfAsString;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLl_trTEeWv0eZvzLc0yA" name="equals" specification="_xYXn8NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLl_9rTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmANrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (o==null) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         ServiceKey other = (ServiceKey)o;&#xD;
         return (equalStrings(this.getItem(), other.getItem()) &amp;&amp;&#xD;
                 equalStrings(this.getSourceObligationID(), other.getSourceObligationID())&#xD;
                 );&#xD;
     }&#xD;
     catch (Exception e) {&#xD;
     }&#xD;
&#xD;
     return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmAdrTEeWv0eZvzLc0yA" name="createParent" specification="_xRN3QNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmAtrTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return new ObligationHeaderKey(this);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRN3ONrTEeWv0eZvzLc0yA" name="ServiceKey" method="_xaLl-NrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRN3O9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRN3PNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRN3OdrTEeWv0eZvzLc0yA" name="newSourceObligationID">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3OtrTEeWv0eZvzLc0yA" name="newItem">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRN3PdrTEeWv0eZvzLc0yA" type="_xRN3N9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3PtrTEeWv0eZvzLc0yA" name="toString" method="_xaLl_NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRN3P9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRN3QNrTEeWv0eZvzLc0yA" name="createParent" visibility="protected" method="_xaLmAdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWdjm9rTEeWv0eZvzLc0yA" type="_xRHwe9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xWdjltrTEeWv0eZvzLc0yA" name="ServiceKey" method="_xaLl9drTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xWdjmNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xWdjmdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdjl9rTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xWdjmtrTEeWv0eZvzLc0yA" type="_xRN3N9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXn8NrTEeWv0eZvzLc0yA" name="equals" method="_xaLl_trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXn8drTEeWv0eZvzLc0yA" name="o" type="_xYRhbdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXn8trTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xYRhbdrTEeWv0eZvzLc0yA" name="Object"/>
                <packagedElement xmi:type="uml:Interface" xmi:id="_xYRheNrTEeWv0eZvzLc0yA" name="Comparable"/>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbChj9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbChkNrTEeWv0eZvzLc0yA _xZUqUNrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbChkNrTEeWv0eZvzLc0yA" name="" type="_xRHwe9rTEeWv0eZvzLc0yA" association="_xbChj9rTEeWv0eZvzLc0yA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xMtKgNrTEeWv0eZvzLc0yA" name="orchestration">
                <packagedElement xmi:type="uml:Class" xmi:id="_xRT9sNrTEeWv0eZvzLc0yA" name="ContractBySNTransactionComposition">
                  <ownedComment xmi:id="_xad5sNrTEeWv0eZvzLc0yA">
                    <body>@author anvoi&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xWdjotrTEeWv0eZvzLc0yA" general="_xRsYMNrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw1drTEeWv0eZvzLc0yA" name="_instance" visibility="private" isStatic="true" type="_xRT9sNrTEeWv0eZvzLc0yA" association="_xbChktrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw1trTEeWv0eZvzLc0yA" value="new ContractBySNTransactionComposition()"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmA9rTEeWv0eZvzLc0yA" name="ContractBySNTransactionComposition" specification="_xRT9sdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmBNrTEeWv0eZvzLc0yA" type="_xRT9sNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmBdrTEeWv0eZvzLc0yA" name="getComposedReply" specification="_xYXn89rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmBtrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmB9rTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmCNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply finalReply = null;&#xD;
		/*&#xD;
		 * We have 2 groups of Transaction potentially, CQS and ODS&#xD;
		 * We need to compose one reply from CQS and one for ODS&#xD;
		 */&#xD;
		ESLog.debug(&quot;Composing reply&quot;);&#xD;
		//First we check if we are not in a Unit List case.&#xD;
		//int nbUnitFound = countUnitFound(replies);&#xD;
		if(isNoUnitFound(replies)) {&#xD;
			//We found nothing we have to get an Exception out of the list&#xD;
			ESLog.debug(&quot;Counting units is wrong!&quot;);&#xD;
			throw getExceptionFromList(replies);&#xD;
		}else if(isMultipleUnitFound(replies)) {&#xD;
			// We will have  a Unit List&#xD;
			finalReply = mergeESRepliesInAUnitList(replies,includeWorkings);&#xD;
		}else {			&#xD;
			// We will have a Combined Reply&#xD;
			finalReply = mergeESRepliesInACombinedReply(replies,includeWorkings);			&#xD;
		}&#xD;
		&#xD;
		return finalReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmCdrTEeWv0eZvzLc0yA" name="isMultipleUnitFound" specification="_xYXn99rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmCtrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmC9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>/* Checks whether more than one unit is found based &#xD;
		 * on the standardized product ID &#xD;
		 * Returns TRUE in case more than one standardized products are found&#xD;
		*/&#xD;
		Iterator it = replies.iterator();&#xD;
		Set s =  new HashSet();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction tr = (Transaction)it.next();&#xD;
			if (tr.getMappedReply() != null ) {&#xD;
				if(tr.getMappedReply().getEsReplyChoice().getUnitList() != null ) {						&#xD;
					return true;				&#xD;
				}else {&#xD;
					HashMap standProdMap =((ContractTransaction)tr).getStandardizedProductHashMap();&#xD;
					OOSComplexType oos = tr.getMappedReply().getEsReplyChoice().getCombinedUnitEntitlement().getOOS();&#xD;
					if(oos != null &amp;&amp; oos.getProduct() !=null) {&#xD;
						String productID = oos.getProduct().getProductID();&#xD;
						if(productID!=null)&#xD;
						    s.add(standProdMap.get(productID));&#xD;
					}&#xD;
					&#xD;
					if (s.size()>1) {&#xD;
						return true;&#xD;
					}&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return false;		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmDNrTEeWv0eZvzLc0yA" name="isNoUnitFound" specification="_xYXn-trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmDdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmDtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>// Returns false in case at least one oos was found&#xD;
		if(replies != null){&#xD;
			Iterator it = replies.iterator();&#xD;
			&#xD;
			while(it.hasNext()) {&#xD;
				Transaction tr = (Transaction)it.next();&#xD;
				if(tr==null){&#xD;
					ESLog.debug(&quot;error happen:caught by tr is null at isNoUnitFound!NullPointException&quot;);&#xD;
				}else if (tr.getMappedReply() != null) {&#xD;
					&#xD;
					if(tr.getMappedReply().getEsReplyChoice() == null&#xD;
							|| tr.getMappedReply().getEsReplyChoice().getUnitList() != null || tr.getMappedReply().getEsReplyChoice().getCombinedUnitEntitlement() == null || (tr.getMappedReply().getEsReplyChoice().getCombinedUnitEntitlement() != null &amp;&amp; tr.getMappedReply().getEsReplyChoice().getCombinedUnitEntitlement().getOOS() != null)) {&#xD;
						return false;				&#xD;
					}&#xD;
				} &#xD;
			}&#xD;
		}&#xD;
		return true;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmD9rTEeWv0eZvzLc0yA" name="mergeESRepliesInACombinedReply" specification="_xYXn_drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmENrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmEdrTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmEtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ArrayList listEx = new ArrayList();&#xD;
		EsReply finalReply = null;&#xD;
		//WITS.1483: CQS OOSes are always having a higher priority as ODS OOSes&#xD;
		boolean mappedCqsOos = false;&#xD;
		/* WITS.1468 The workings which document error transactions&#xD;
		 * The workings for the successfully finished transactions were created while mapping*/		&#xD;
		TreeMap errorMaps = new TreeMap();&#xD;
&#xD;
		Iterator it = replies.iterator();&#xD;
&#xD;
		finalReply = new EsReply();&#xD;
		finalReply.setEsReplyChoice(new EsReplyChoice());&#xD;
		finalReply.getEsReplyChoice().setCombinedUnitEntitlement(new CombinedUnitEntitlementComplexType());&#xD;
		while(it.hasNext()) {&#xD;
			Transaction tr = (Transaction)it.next();&#xD;
			if(tr.getMappedErrors() != null &amp;&amp; tr.getMappedErrors().size() != 0) {&#xD;
				if(includeWorking) {&#xD;
					WorkingComplexType working = ContractErrorsProcessing.getInstance().getErrorWorking(tr);&#xD;
					errorMaps.put(working.getWorkingName(), working);&#xD;
				}&#xD;
				listEx.add(ContractErrorsProcessing.getInstance().getHighestPriorityException(tr));&#xD;
			}else {&#xD;
				EsReply reply = tr.getMappedReply();&#xD;
				CombinedUnitEntitlementComplexType cueFinal = finalReply.getEsReplyChoice().getCombinedUnitEntitlement();&#xD;
				CombinedUnitEntitlementComplexType cueTmp   = reply.getEsReplyChoice().getCombinedUnitEntitlement();&#xD;
				&#xD;
				//Contact&#xD;
				if(cueTmp.getContactCount() != 0) {&#xD;
					HashMap mapContacts = new HashMap();&#xD;
					&#xD;
					if(cueFinal.getContactCount() != 0) {&#xD;
						for(int i=0;i &lt; cueFinal.getContactCount(); i++) {&#xD;
							mapContacts.put(cueFinal.getContact(i).getSourcePersonID(),cueFinal.getContact(i));&#xD;
						}&#xD;
					}&#xD;
					for(int i = 0; i&lt; cueTmp.getContactCount(); i++) {&#xD;
						if(!mapContacts.containsKey(cueTmp.getContact(i).getSourcePersonID())) {&#xD;
							cueFinal.addContact(cueTmp.getContact(i));&#xD;
						}else {&#xD;
							&#xD;
							//we replace it the one we have is coming from CQS&#xD;
							if(!tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;)) {&#xD;
								ContactComplexType ctmp = (ContactComplexType) mapContacts.get(cueTmp.getContact(i).getSourcePersonID());&#xD;
								//we need to copy the value&#xD;
								ctmp.setEmailAddress(cueTmp.getContact(i).getEmailAddress());&#xD;
								ctmp.setFaxNumber(cueTmp.getContact(i).getFaxNumber());&#xD;
								ctmp.setFullName(cueTmp.getContact(i).getFullName());&#xD;
								ctmp.setId(cueTmp.getContact(i).getId());&#xD;
								ctmp.setPhoneNumber(cueTmp.getContact(i).getPhoneNumber());&#xD;
								ctmp.setSourcePersonID(cueTmp.getContact(i).getSourcePersonID());&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				//Contract&#xD;
				if(cueTmp.getContractCount() != 0) {&#xD;
					for(int i = 0; i&lt; cueTmp.getContractCount(); i++) {&#xD;
						cueFinal.addContract(cueTmp.getContract(i));&#xD;
					}&#xD;
				}			&#xD;
				&#xD;
				//Location&#xD;
				&#xD;
				if(cueTmp.getLocationCount() != 0) {&#xD;
					&#xD;
					HashMap mapLocations = new HashMap();&#xD;
					&#xD;
					if(cueFinal.getLocationCount() != 0) {&#xD;
						for(int i=0;i &lt; cueFinal.getLocationCount(); i++) {&#xD;
							mapLocations.put(cueFinal.getLocation(i).getSourceCustomerID(),cueFinal.getLocation(i));&#xD;
						}&#xD;
					}				&#xD;
					for(int i = 0; i&lt; cueTmp.getLocationCount(); i++) {&#xD;
						if(!mapLocations.containsKey(cueTmp.getLocation(i).getSourceCustomerID())) {&#xD;
							cueFinal.addLocation(cueTmp.getLocation(i));&#xD;
						}else {&#xD;
							//we replace it the one we have is coming from CQS&#xD;
							if(!tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;)) {&#xD;
								LocationComplexType ctmp = (LocationComplexType) mapLocations.get(cueTmp.getLocation(i).getSourceCustomerID());&#xD;
								ctmp=cueTmp.getLocation(i);&#xD;
								ctmp.setCity(cueTmp.getLocation(i).getCity());&#xD;
								ctmp.setFmtAddrLine1(cueTmp.getLocation(i).getFmtAddrLine1());&#xD;
								ctmp.setFmtAddrLine2(cueTmp.getLocation(i).getFmtAddrLine1());&#xD;
								ctmp.setFmtAddrLine3(cueTmp.getLocation(i).getFmtAddrLine1());&#xD;
								ctmp.setFmtAddrLine4(cueTmp.getLocation(i).getFmtAddrLine1());&#xD;
								ctmp.setFmtAddrLine5(cueTmp.getLocation(i).getFmtAddrLine1());&#xD;
								ctmp.setGeographicArea(cueTmp.getLocation(i).getGeographicArea());&#xD;
								ctmp.setId(cueTmp.getLocation(i).getId());&#xD;
								ctmp.setIsoCountryCd(cueTmp.getLocation(i).getIsoCountryCd());&#xD;
								ctmp.setPostalCode(cueTmp.getLocation(i).getPostalCode());&#xD;
								ctmp.setPSPID(cueTmp.getLocation(i).getPSPID());&#xD;
								ctmp.setSiteBusinessName1(cueTmp.getLocation(i).getSiteBusinessName1());&#xD;
								ctmp.setSiteBusinessName2(cueTmp.getLocation(i).getSiteBusinessName2());&#xD;
								ctmp.setSiteBusinessName3(cueTmp.getLocation(i).getSiteBusinessName3());&#xD;
								ctmp.setSiteBusinessName4(cueTmp.getLocation(i).getSiteBusinessName4());&#xD;
								ctmp.setSourceCustomerID(cueTmp.getLocation(i).getSourceCustomerID());&#xD;
								ctmp.setStreetAddr1(cueTmp.getLocation(i).getStreetAddr1());&#xD;
								ctmp.setStreetAddr2(cueTmp.getLocation(i).getStreetAddr2());&#xD;
								&#xD;
							}							&#xD;
						}&#xD;
					}&#xD;
				}								&#xD;
				//OOS&#xD;
				//WITS.1483: CQS OOSes are always having a higher priority as ODS OOSes&#xD;
				if(cueTmp.getOOS() != null) {					&#xD;
					if(cueFinal.getOOS() != null) {&#xD;
						if (!(tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) &amp;&amp; mappedCqsOos)) {&#xD;
							if( (!tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) &amp;&amp; !mappedCqsOos) ||    //CQS OOses have a higher priority&#xD;
								((( tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) &amp;&amp; !mappedCqsOos)  || //Only ODS OOSes: compare CDOPublishDate&#xD;
								  (!tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) &amp;&amp;  mappedCqsOos)) //Only CQS OOSes: compare CDOPublishDate&#xD;
								  &amp;&amp; !DateHelper.isGreater(getLastestCDOPublishDate(cueFinal), getLastestCDOPublishDate(cueTmp)))) {&#xD;
							//if(!tr.getRegionDisplayName().equals(&quot;ODS&quot;)) {&#xD;
								cueFinal.setOOS(cueTmp.getOOS());&#xD;
								mappedCqsOos = tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) ? false : true; &#xD;
							//}&#xD;
							}							&#xD;
						}&#xD;
					}else {&#xD;
						cueFinal.setOOS(cueTmp.getOOS());&#xD;
						mappedCqsOos = tr.getRegionDisplayName().equalsIgnoreCase(&quot;ODS&quot;) ? false : true;&#xD;
					}&#xD;
				}					&#xD;
&#xD;
				//Workings&#xD;
				if(cueTmp.getWorkingCount() != 0 &amp;&amp; includeWorking) {&#xD;
					for(int i = 0; i&lt; cueTmp.getWorkingCount(); i++) {&#xD;
						WorkingComplexType working = cueTmp.getWorking(i);&#xD;
						errorMaps.put(working.getWorkingName(), working);						&#xD;
						//cueFinal.addWorking(cueTmp.getWorking(i));&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				&#xD;
				//Custiomer identifucation&#xD;
				if(cueTmp.getCustomerIdentification() != null) {&#xD;
					cueFinal.setCustomerIdentification(cueTmp.getCustomerIdentification());&#xD;
					&#xD;
				}&#xD;
				&#xD;
				&#xD;
				&#xD;
				&#xD;
				&#xD;
				&#xD;
			}&#xD;
	 		&#xD;
		}&#xD;
&#xD;
		finalReply.setEsHeader(new EsHeader());&#xD;
		calculateReplyHeaderFields(finalReply);&#xD;
		&#xD;
		//WITS.1468 Now we add the workings to the reply&#xD;
		if(includeWorking){&#xD;
			for (Iterator itWk=errorMaps.values().iterator(); itWk.hasNext();) {&#xD;
				WorkingComplexType sortWorking = (WorkingComplexType)itWk.next();&#xD;
				ESLog.debug(&quot;Error working: &quot; + sortWorking.getWorkingName() + &quot;, &quot; + sortWorking.getWorkingValue());			&#xD;
				finalReply.getEsReplyChoice().getCombinedUnitEntitlement().addWorking(sortWorking);&#xD;
			}&#xD;
		}&#xD;
		//End WITS.1468	&#xD;
&#xD;
		/*&#xD;
		 * If we had an exception we may have to add a warning&#xD;
		 */&#xD;
		if(!listEx.isEmpty()) {&#xD;
			String unavailableRegionList = ContractErrorsProcessing.getInstance().getUnavailableRegionList(replies);&#xD;
			if(unavailableRegionList.trim().length() !=0) {&#xD;
				addSystemNotAvailableWarning(unavailableRegionList, finalReply);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// WITS 1515&#xD;
		// since the oos could have been replaced and/or other appliesTos could&#xD;
		// have been added we need to adjust the appliesTo references to the OOS &#xD;
		// in the final reply&#xD;
		OOSComplexType finalOos = finalReply.getEsReplyChoice().getCombinedUnitEntitlement().getOOS();&#xD;
     ContractComplexType[] contracts = finalReply.getEsReplyChoice().getCombinedUnitEntitlement().getContract();&#xD;
     for (int i = 0; i &lt; contracts.length; i++) {&#xD;
         OfferComplexType[] offers = contracts[i].getOffer();&#xD;
         for (int j = 0; j &lt; offers.length; j++) {&#xD;
             AppliesTo[] appliesTos = offers[j].getAppliesTo();&#xD;
             for (int k = 0; k &lt; appliesTos.length; k++) {&#xD;
                 AppliesTo to = appliesTos[k];&#xD;
                 if (to.getOOSRef() != null) {&#xD;
                     to.setOOSRef(finalOos);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     return finalReply;			&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmE9rTEeWv0eZvzLc0yA" name="getExceptionFromList" specification="_xYXoAdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmFNrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmFdrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return ContractErrorsProcessing.getInstance().getHighestPriorityException(replies);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmFtrTEeWv0eZvzLc0yA" name="mergeESRepliesInAUnitList" specification="_xYXoBNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmF9rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmGNrTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmGdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply finalReply = null;&#xD;
&#xD;
		&#xD;
		Iterator it = replies.iterator();		&#xD;
		TreeSet productSet = new TreeSet();&#xD;
		&#xD;
		finalReply = new EsReply();&#xD;
		finalReply.setEsReplyChoice(new EsReplyChoice());&#xD;
		finalReply.getEsReplyChoice().setUnitList(new UnitListComplexType());&#xD;
		finalReply.setEsHeader(new EsHeader());&#xD;
		Warnings finalWarnings = new Warnings();&#xD;
		/* WITS.1468 No workjing for unit list*/		&#xD;
&#xD;
		&#xD;
		ArrayList listEx = new ArrayList();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction tr = (Transaction)it.next();&#xD;
			if(tr.getMappedErrors() != null &amp;&amp; tr.getMappedErrors().size() != 0) {&#xD;
				listEx.add(ContractErrorsProcessing.getInstance().getHighestPriorityException(tr));&#xD;
			}else {&#xD;
				/*&#xD;
				 * Adding all warning&#xD;
				 */&#xD;
				EsReply reply = tr.getMappedReply();&#xD;
				// add the warnings to the header if we had some&#xD;
				if(tr.getMappedReply().getEsHeader().getWarnings() != null &amp;&amp; tr.getMappedReply().getEsHeader().getWarnings().getEIAError() != null) {&#xD;
					EIAError[] errors = tr.getMappedReply().getEsHeader().getWarnings().getEIAError();&#xD;
					for(int i = 0; i &lt; errors.length; i++) {&#xD;
						finalWarnings.addEIAError(errors[i]);&#xD;
					}&#xD;
				}&#xD;
				if(reply.getEsReplyChoice().getUnitList() != null) {&#xD;
					//we add all the unit&#xD;
					//First product&#xD;
					if(finalReply.getEsReplyChoice().getUnitList().getSerialNumber() == null) {&#xD;
						finalReply.getEsReplyChoice().getUnitList().setSerialNumber(reply.getEsReplyChoice().getUnitList().getSerialNumber());&#xD;
						Enumeration e = reply.getEsReplyChoice().getUnitList().enumerateProduct();&#xD;
						while(e.hasMoreElements()) {&#xD;
							ProductComplexType pct = (ProductComplexType )e.nextElement();&#xD;
							if(!productSet.contains(pct.getProductID())) {&#xD;
								finalReply.getEsReplyChoice().getUnitList().addProduct(pct);&#xD;
							}&#xD;
						}&#xD;
&#xD;
					}else {&#xD;
						for(int i= 0; i &lt; reply.getEsReplyChoice().getUnitList().getProductCount(); i++) {&#xD;
							ProductComplexType pct = reply.getEsReplyChoice().getUnitList().getProduct(i);&#xD;
							if(!productSet.contains(pct.getProductID())) {&#xD;
								finalReply.getEsReplyChoice().getUnitList().addProduct(pct);&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					&#xD;
				}else {&#xD;
					/*&#xD;
					 * this is where the NPE is&#xD;
					 */&#xD;
					if(finalReply.getEsReplyChoice().getUnitList().getSerialNumber() == null) {&#xD;
						finalReply.getEsReplyChoice().getUnitList().setSerialNumber(reply.getEsReplyChoice().getCombinedUnitEntitlement().getOOS().getSerialNumber(0));&#xD;
						finalReply.getEsReplyChoice().getUnitList().addProduct(reply.getEsReplyChoice().getCombinedUnitEntitlement().getOOS().getProduct());&#xD;
					}else {&#xD;
						if(reply.getEsReplyChoice().getCombinedUnitEntitlement().getOOS() != null)&#xD;
							finalReply.getEsReplyChoice().getUnitList().addProduct(reply.getEsReplyChoice().getCombinedUnitEntitlement().getOOS().getProduct());&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		// at the end we add the warnings which we had&#xD;
		if(finalWarnings.getEIAErrorCount() > 0) {&#xD;
			finalReply.getEsHeader().setWarnings(finalWarnings);&#xD;
		} else {&#xD;
			finalReply.getEsHeader().setWarnings(null);&#xD;
		}&#xD;
		calculateReplyHeaderFields(finalReply);&#xD;
		&#xD;
&#xD;
		&#xD;
		//End WITS.1468	&#xD;
		&#xD;
		/*&#xD;
		 * If we had an exception we may have to add a warning&#xD;
		 */&#xD;
		if(!listEx.isEmpty()) {&#xD;
			//we may have to generate war&#xD;
			String unavailableRegionList = ContractErrorsProcessing.getInstance().getUnavailableRegionList(replies);&#xD;
			if(unavailableRegionList.trim().length() !=0) {&#xD;
				addSystemNotAvailableWarning(unavailableRegionList, finalReply);&#xD;
			}&#xD;
		}&#xD;
		return finalReply;&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmGtrTEeWv0eZvzLc0yA" name="calculateReplyHeaderFields" specification="_xYXoCNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmG9rTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>org.exolab.castor.types.Date overallContractStartDate = null;&#xD;
     org.exolab.castor.types.Date overallContractEndDate = null;&#xD;
&#xD;
     boolean isActiveContractEntitlement = false;&#xD;
		// used to calculate the max header end date&#xD;
     boolean firstContract = true;&#xD;
&#xD;
     if(finalReply.getEsReplyChoice().getCombinedUnitEntitlement() != null) {&#xD;
     	ContractComplexType[] contracts= finalReply.getEsReplyChoice().getCombinedUnitEntitlement().getContract();&#xD;
     	&#xD;
         org.exolab.castor.types.Date startDate = null;&#xD;
         org.exolab.castor.types.Date endDate = null;&#xD;
         &#xD;
         // iterate over all contracts that already have an offer assigned&#xD;
         for (int i = 0; i &lt; contracts.length; i++) {&#xD;
             ContractComplexType c = (ContractComplexType)contracts[i];&#xD;
&#xD;
             Enumeration obligationHeaderEnum = c.enumerateObligationHeader();&#xD;
             if (obligationHeaderEnum != null) {&#xD;
                 boolean firstObligation = true;&#xD;
                 while (obligationHeaderEnum.hasMoreElements()) {&#xD;
                     ObligationHeader oh = (ObligationHeader) obligationHeaderEnum.nextElement();&#xD;
                     // min start date&#xD;
                     startDate = DateHelper.minDate(startDate, oh.getHeaderStartDate());&#xD;
&#xD;
                     // max end date&#xD;
                     // (will be null if at least one header end date is null)&#xD;
                     if (firstObligation) {&#xD;
                         endDate = oh.getHeaderEndDate();&#xD;
                         firstObligation = false;&#xD;
                     } else {&#xD;
                         endDate = DateHelper.maxDate(endDate, oh.getHeaderEndDate());&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
             // global &quot;active entitlement flag&quot; for all contracts:&#xD;
             // Shows whether any of the underlying contracts is active&#xD;
             isActiveContractEntitlement = isActiveContractEntitlement || c.getActiveContractEntitlement();&#xD;
&#xD;
             // overallContractStartDate/overallContractEndDate&#xD;
             overallContractStartDate = DateHelper.minDate(overallContractStartDate, startDate);&#xD;
             if (firstContract) {&#xD;
                 overallContractEndDate = endDate;&#xD;
                 firstContract = false;&#xD;
             }&#xD;
             else {&#xD;
                 overallContractEndDate = DateHelper.maxDate(overallContractEndDate, endDate);&#xD;
             }&#xD;
         }&#xD;
     	&#xD;
     }&#xD;
     // set flags and dates for combined test case&#xD;
     if(finalReply.getEsReplyChoice().getCombinedUnitEntitlement() != null) {&#xD;
	        finalReply.getEsReplyChoice().getCombinedUnitEntitlement().setActiveContractEntitlement(isActiveContractEntitlement);&#xD;
			finalReply.getEsReplyChoice().getCombinedUnitEntitlement().setOverallContractStartDate(overallContractStartDate);&#xD;
			finalReply.getEsReplyChoice().getCombinedUnitEntitlement().setOverallContractEndDate(overallContractEndDate);&#xD;
			//We set the overall warranty to false&#xD;
			finalReply.getEsReplyChoice().getCombinedUnitEntitlement().setActiveWarrantyEntitlement(false);&#xD;
     }&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmHNrTEeWv0eZvzLc0yA" name="getLastestCDOPublishDate" specification="_xYXoCtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmHdrTEeWv0eZvzLc0yA" name="contract" type="_xV47uNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmHtrTEeWv0eZvzLc0yA" type="_xVCAF9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>Date d= null;&#xD;
		if(contract != null) {&#xD;
			for(int i = 0; i&lt; contract.getContractCount(); i++) {&#xD;
				Date dateTmp = DateHelper.cdoDateToJavaDate(contract.getContract(i).getCdoPublishDate());&#xD;
				if(d == null) {&#xD;
					d=dateTmp;&#xD;
				}else {&#xD;
					if(dateTmp.after(d)) {&#xD;
						d = dateTmp;&#xD;
					}&#xD;
					&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return d;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmH9rTEeWv0eZvzLc0yA" name="getInstance" specification="_xRT9tdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmINrTEeWv0eZvzLc0yA" type="_xRsYMNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _instance;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRT9sdrTEeWv0eZvzLc0yA" name="ContractBySNTransactionComposition" method="_xaLmA9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRT9strTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRT9s9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad5sdrTEeWv0eZvzLc0yA">
                      <body>*</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRT9tNrTEeWv0eZvzLc0yA" type="_xRT9sNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRT9tdrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaLmH9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRT9ttrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRT9t9rTEeWv0eZvzLc0yA" key="synchronized"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xWdjodrTEeWv0eZvzLc0yA" type="_xRsYMNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXn89rTEeWv0eZvzLc0yA" name="getComposedReply" method="_xaLmBdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXn9NrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXn9drTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYXn9trTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXn99rTEeWv0eZvzLc0yA" name="isMultipleUnitFound" visibility="private" method="_xaLmCdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXn-NrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXn-drTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXn-trTEeWv0eZvzLc0yA" name="isNoUnitFound" visibility="private" method="_xaLmDNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXn-9rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXn_NrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXn_drTEeWv0eZvzLc0yA" name="mergeESRepliesInACombinedReply" visibility="private" method="_xaLmD9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXn_trTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXn_9rTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYXoANrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoAdrTEeWv0eZvzLc0yA" name="getExceptionFromList" visibility="private" method="_xaLmE9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoAtrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoA9rTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoBNrTEeWv0eZvzLc0yA" name="mergeESRepliesInAUnitList" visibility="private" method="_xaLmFtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoBdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoBtrTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYXoB9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoCNrTEeWv0eZvzLc0yA" name="calculateReplyHeaderFields" visibility="protected" method="_xaLmGtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoCdrTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoCtrTEeWv0eZvzLc0yA" name="getLastestCDOPublishDate" visibility="private" method="_xaLmHNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoC9rTEeWv0eZvzLc0yA" name="contract" type="_xV47uNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoDNrTEeWv0eZvzLc0yA" type="_xVCAF9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRT9udrTEeWv0eZvzLc0yA" name="ContractBySnReply">
                  <ownedComment xmi:id="_xad5strTEeWv0eZvzLc0yA">
                    <body>@author juhank</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_xZaw2NrTEeWv0eZvzLc0yA" name="_esReply" visibility="private" type="_xVUT_NrTEeWv0eZvzLc0yA" association="_xbChldrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw2drTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw29rTEeWv0eZvzLc0yA" name="_mappedProductList" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xbChmNrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw3NrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw3trTEeWv0eZvzLc0yA" name="_ctx" visibility="private" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xbIoEdrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw39rTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmIdrTEeWv0eZvzLc0yA" name="ContractBySnReply" specification="_xYXoDdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmItrTEeWv0eZvzLc0yA" name="esReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmI9rTEeWv0eZvzLc0yA" name="mappedProductList" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmJNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmJdrTEeWv0eZvzLc0yA" type="_xRT9udrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>_esReply = esReply;&#xD;
		_mappedProductList = mappedProductList;&#xD;
		_ctx= ctx;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmJtrTEeWv0eZvzLc0yA" name="getEsReply" specification="_xRT9utrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmJ9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _esReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmKNrTEeWv0eZvzLc0yA" name="getMappedProductList" specification="_xRT9u9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmKdrTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _mappedProductList;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmKtrTEeWv0eZvzLc0yA" name="getEsReplyContext" specification="_xRT9vNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmK9rTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _ctx;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRT9utrTEeWv0eZvzLc0yA" name="getEsReply" method="_xaLmJtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoFNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRT9u9rTEeWv0eZvzLc0yA" name="getMappedProductList" method="_xaLmKNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYXoFdrTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRT9vNrTEeWv0eZvzLc0yA" name="getEsReplyContext" method="_xaLmKtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWjqENrTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoDdrTEeWv0eZvzLc0yA" name="ContractBySnReply" method="_xaLmIdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xYXoEdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xYXoEtrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xYXoDtrTEeWv0eZvzLc0yA" name="esReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoD9rTEeWv0eZvzLc0yA" name="mappedProductList" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoENrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoE9rTEeWv0eZvzLc0yA" type="_xRT9udrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRT9vdrTEeWv0eZvzLc0yA" name="ContractErrorsProcessing" visibility="package">
                  <ownedComment xmi:id="_xad5s9rTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xYXoINrTEeWv0eZvzLc0yA" general="_xWjqEdrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaw4drTEeWv0eZvzLc0yA" name="PRIORITY_1_ID_VALUE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw4trTEeWv0eZvzLc0yA" value="1"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw5NrTEeWv0eZvzLc0yA" name="PRIORITY_1_ID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw5drTEeWv0eZvzLc0yA" value="200"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw59rTEeWv0eZvzLc0yA" name="PRIORITY_1_NID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw6NrTEeWv0eZvzLc0yA" value="200"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw6trTEeWv0eZvzLc0yA" name="PRIORITY_2_ID_VALUE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw69rTEeWv0eZvzLc0yA" value="2"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw7drTEeWv0eZvzLc0yA" name="PRIORITY_2_ID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw7trTEeWv0eZvzLc0yA" value="201"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw8NrTEeWv0eZvzLc0yA" name="PRIORITY_2_NID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw8drTEeWv0eZvzLc0yA" value="236"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw89rTEeWv0eZvzLc0yA" name="PRIORITY_3_ID_VALUE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw9NrTEeWv0eZvzLc0yA" value="3"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw9trTEeWv0eZvzLc0yA" name="PRIORITY_3_ID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw99rTEeWv0eZvzLc0yA" value="300"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw-drTEeWv0eZvzLc0yA" name="PRIORITY_3_NID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw-trTEeWv0eZvzLc0yA" value="236"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw_NrTEeWv0eZvzLc0yA" name="PRODUCT_SHIPTO_LOCATION_MISSING_ERROR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaw_drTEeWv0eZvzLc0yA" value="&quot;237&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaw_9rTEeWv0eZvzLc0yA" name="_instance" visibility="private" isStatic="true" type="_xRT9vdrTEeWv0eZvzLc0yA" association="_xbIoFNrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaxANrTEeWv0eZvzLc0yA" value="new ContractErrorsProcessing()"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmLNrTEeWv0eZvzLc0yA" name="ContractErrorsProcessing" specification="_xRT9vtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmLdrTEeWv0eZvzLc0yA" type="_xRT9vdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmLtrTEeWv0eZvzLc0yA" name="getInstance" specification="_xRT9wtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmL9rTEeWv0eZvzLc0yA" type="_xRT9vdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>// Get a singleton instance&#xD;
		// In this context this is in order to use static method everywhere&#xD;
		return _instance;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmMNrTEeWv0eZvzLc0yA" name="getPriorityForSifException" specification="_xYXoFtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmMdrTEeWv0eZvzLc0yA" name="ex" type="_xU75etrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmMtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>int priority = MAX_PRIORITY;&#xD;
		int errorId;&#xD;
		try {&#xD;
			errorId =Integer.valueOf(ex.getErrorID()).intValue();&#xD;
		}catch (NumberFormatException nfe) {&#xD;
			ESLog.debug(&quot;Incorrect SifException error Id &quot; + ex.getErrorID());&#xD;
			errorId = -1;&#xD;
		}&#xD;
		&#xD;
		if(errorId == PRIORITY_1_ID) {&#xD;
			priority = PRIORITY_1_ID_VALUE;&#xD;
		}else if(errorId == PRIORITY_2_ID){&#xD;
			priority = PRIORITY_2_ID_VALUE;&#xD;
		}else if(errorId == PRIORITY_3_ID){&#xD;
			priority = PRIORITY_3_ID_VALUE;&#xD;
		}&#xD;
		&#xD;
		return priority;&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmM9rTEeWv0eZvzLc0yA" name="getRedefinedSifException" specification="_xYXoGdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmNNrTEeWv0eZvzLc0yA" name="composedException" type="_xU75etrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmNdrTEeWv0eZvzLc0yA" name="list" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmNtrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>int refinedId = 0;&#xD;
		int composedId = 0;&#xD;
		SifException refinedException = composedException;&#xD;
		String unaivalableRegionList=&quot;&quot;;&#xD;
		String listNoShipToerrors= &quot;&quot;;		&#xD;
		unaivalableRegionList = getUnavailableRegionList(list);&#xD;
		listNoShipToerrors    = getListNoShipToerrors(list);&#xD;
		&#xD;
		if( (unaivalableRegionList != null &amp;&amp; unaivalableRegionList.trim().length()> 0) ||&#xD;
				(listNoShipToerrors != null &amp;&amp; listNoShipToerrors.trim().length()> 0)) { &#xD;
			try {&#xD;
				composedId =Integer.valueOf(composedException.getErrorID()).intValue();&#xD;
			}catch (NumberFormatException nfe) {&#xD;
				ESLog.debug(&quot;Incorrect SifException error Id &quot; + composedException.getErrorID());&#xD;
				composedId = -1;&#xD;
			}		&#xD;
			&#xD;
	&#xD;
			refinedId = getRefinedIdForSifException(composedId);&#xD;
			//In that case we may need to have a list of down region&#xD;
			//We need to get the string concanetion of the region that were down or unavailable&#xD;
	&#xD;
	&#xD;
			if((composedId != refinedId)  &amp;&amp; (&#xD;
					(unaivalableRegionList.trim().length() != 0)||&#xD;
					(listNoShipToerrors.trim().length() != 0))){&#xD;
					String concat =&quot;&quot;;&#xD;
					if(!unaivalableRegionList.equals(&quot;&quot;)) {&#xD;
						concat = unaivalableRegionList ;&#xD;
						if(listNoShipToerrors.trim().length()>0)&#xD;
							concat += &quot;, &quot; +listNoShipToerrors;&#xD;
					}else {&#xD;
						concat = listNoShipToerrors;&#xD;
					}&#xD;
					refinedException = ErrorFactory.getSifException(refinedId,concat);&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		return refinedException;&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmN9rTEeWv0eZvzLc0yA" name="getListNoShipToerrors" specification="_xYXoHdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmONrTEeWv0eZvzLc0yA" name="list" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmOdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>StringBuffer concatenated = new StringBuffer(&quot;&quot;);&#xD;
		&#xD;
		if(list != null) {&#xD;
			Iterator it = list.iterator();&#xD;
			while(it.hasNext()) {&#xD;
				Transaction tr = (Transaction)it.next();&#xD;
				if(tr != null) {&#xD;
					SifException tmpEx = getHighestPriorityException(tr.getMappedErrors());&#xD;
					if(tmpEx.getErrorID().equals(PRODUCT_SHIPTO_LOCATION_MISSING_ERROR)) {&#xD;
						if(concatenated.length() != 0) {&#xD;
							concatenated.append(&quot;, &quot;);&#xD;
						}&#xD;
						concatenated.append(tmpEx.getDataPayLoad());&#xD;
					}&#xD;
				}&#xD;
				&#xD;
			}&#xD;
		}&#xD;
		ESLog.debug(&quot;List of PRODUCT_SHIPTO_LOCATION_MISSING_ERROR is &quot;+concatenated.toString());&#xD;
				&#xD;
		&#xD;
		return concatenated.toString();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmOtrTEeWv0eZvzLc0yA" name="getRefinedIdForSifException" specification="_xRT9w9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmO9rTEeWv0eZvzLc0yA" name="errorId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmPNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>int refinedId = errorId;&#xD;
		if(errorId == PRIORITY_1_ID) {&#xD;
			refinedId = PRIORITY_1_NID;&#xD;
		}else if(errorId == PRIORITY_2_ID){&#xD;
			refinedId = PRIORITY_2_NID;&#xD;
		}else if(errorId == PRIORITY_3_ID){&#xD;
			refinedId = PRIORITY_3_NID;&#xD;
		}&#xD;
		&#xD;
		return refinedId;&#xD;
		&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRT9vtrTEeWv0eZvzLc0yA" name="ContractErrorsProcessing" visibility="private" method="_xaLmLNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRT9v9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRT9wNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad5tNrTEeWv0eZvzLc0yA">
                      <body>*</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRT9wdrTEeWv0eZvzLc0yA" type="_xRT9vdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRT9wtrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaLmLtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWjqE9rTEeWv0eZvzLc0yA" type="_xRT9vdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRT9w9rTEeWv0eZvzLc0yA" name="getRefinedIdForSifException" visibility="private" method="_xaLmOtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5uNrTEeWv0eZvzLc0yA">
                      <body>We will get the refined ID</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRT9xNrTEeWv0eZvzLc0yA" name="errorId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRT9xdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoFtrTEeWv0eZvzLc0yA" name="getPriorityForSifException" visibility="protected" method="_xaLmMNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5tdrTEeWv0eZvzLc0yA">
                      <body>(non-Javadoc)&#xD;
	 * @see com.hp.es.service.orchestration.ErrorsProcessing#getPriorityForSifException(com.hp.sif.SifException)</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYXoF9rTEeWv0eZvzLc0yA" name="ex" type="_xU75etrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoGNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoGdrTEeWv0eZvzLc0yA" name="getRedefinedSifException" visibility="protected" method="_xaLmM9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5ttrTEeWv0eZvzLc0yA">
                      <body>(non-Javadoc)&#xD;
	 * @see com.hp.es.service.orchestration.ErrorsProcessing#getRedefinedSifException(com.hp.sif.SifException, com.hp.es.service.orchestration.Transaction[])</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYXoGtrTEeWv0eZvzLc0yA" name="composedException" type="_xU75etrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoG9rTEeWv0eZvzLc0yA" name="list" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoHNrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoHdrTEeWv0eZvzLc0yA" name="getListNoShipToerrors" visibility="private" method="_xaLmN9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5t9rTEeWv0eZvzLc0yA">
                      <body>Returns a concatenation of all&#xD;
	 * ProductShiptoLocation missing Error (237)&#xD;
	 * @param the list of trans&#xD;
	 * @return a concatenated string</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYXoHtrTEeWv0eZvzLc0yA" name="list" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoH9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRaEUNrTEeWv0eZvzLc0yA" name="ContractOrchestration">
                  <generalization xmi:id="_xYj1RdrTEeWv0eZvzLc0yA" general="_xWjqHtrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZaxAtrTEeWv0eZvzLc0yA" name="THREAD_TIMEOUT_PROPERTY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaxA9rTEeWv0eZvzLc0yA" value="&quot;es.contractservice.orchestration.thread.timeout&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaxBdrTEeWv0eZvzLc0yA" name="DEFAULT_THREAD_TIMEOUT" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaxBtrTEeWv0eZvzLc0yA" value="5000"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaxCNrTEeWv0eZvzLc0yA" name="CONTRACT_SYSTEMS_PROPERTY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaxCdrTEeWv0eZvzLc0yA" value="&quot;es.contractservice.orchestration.systems&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaxC9rTEeWv0eZvzLc0yA" name="DEFAULT_CONTRACT_SYSTEMS" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZaxDNrTEeWv0eZvzLc0yA" value="&quot;ODS,CQS&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZaxDtrTEeWv0eZvzLc0yA" name="_cqsContractIntegrationList" visibility="protected" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xbIoF9rTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3cdrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3c9rTEeWv0eZvzLc0yA" name="_cqsContractBySnIntegrationList" visibility="protected" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xbIoGtrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3ddrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3d9rTEeWv0eZvzLc0yA" name="_odsContractIntegration" visibility="protected" type="_xQI5DdrTEeWv0eZvzLc0yA" association="_xbIoHdrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3eNrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3etrTEeWv0eZvzLc0yA" name="_odsContractBySNIntegration" visibility="protected" type="_xQI5DdrTEeWv0eZvzLc0yA" association="_xbIoINrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3e9rTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3fdrTEeWv0eZvzLc0yA" name="_odsCustomerIndicatorIntegration" visibility="protected" type="_xWjqGNrTEeWv0eZvzLc0yA" association="_xbIoI9rTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3ftrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3gNrTEeWv0eZvzLc0yA" name="_cqsEnable" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3gdrTEeWv0eZvzLc0yA" value="true"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3g9rTEeWv0eZvzLc0yA" name="_odsEnable" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3hNrTEeWv0eZvzLc0yA" value="true"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3htrTEeWv0eZvzLc0yA" name="_instance" visibility="protected" isLeaf="true" isStatic="true" type="_xRaEUNrTEeWv0eZvzLc0yA" isReadOnly="true" association="_xbIoJtrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3h9rTEeWv0eZvzLc0yA" value="new ContractOrchestration()"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:id="_xYXoIdrTEeWv0eZvzLc0yA" client="_xRaEUNrTEeWv0eZvzLc0yA" supplier="_xWjqItrTEeWv0eZvzLc0yA" contract="_xWjqItrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmPdrTEeWv0eZvzLc0yA" name="ContractOrchestration" specification="_xRaEUdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmPtrTEeWv0eZvzLc0yA" type="_xRaEUNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
		Configuration.getInstance().addConfigChangeListener(this);&#xD;
		init();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmP9rTEeWv0eZvzLc0yA" name="init" specification="_xRaEVdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmQNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Initialization of ContractOrchestration&quot;);&#xD;
		ArrayList&lt;?> listOfRegionName = RegionFactory.getInstance().getAvailableRegionsName();&#xD;
		&#xD;
		/*&#xD;
		 * We need to create the integration layers.&#xD;
		 */&#xD;
		// First we create the local one&#xD;
		_odsContractIntegration = new ODSGetContractIntegration();&#xD;
		_odsContractBySNIntegration = new ODSGetContractBySNIntegration();&#xD;
		_odsCustomerIndicatorIntegration = new ODSGetCustomerIndicatorIntegration();&#xD;
		&#xD;
		_cqsContractIntegrationList = null;&#xD;
		_cqsContractBySnIntegrationList = null;&#xD;
		&#xD;
		&#xD;
		_cqsContractIntegrationList = new HashMap&lt;String, CQSIntegration>(listOfRegionName.size());&#xD;
		_cqsContractBySnIntegrationList = new HashMap&lt;String, CQSIntegration>(listOfRegionName.size());&#xD;
&#xD;
		for (int i = 0; i &lt; listOfRegionName.size(); i++) {&#xD;
			String regionName = (String) listOfRegionName.get(i);&#xD;
			CQSIntegration cqs = new CQSGetContractIntegration(regionName);&#xD;
			CQSIntegration cqsBySN = new CQSGetContractBySNIntegration(regionName);&#xD;
			&#xD;
			_cqsContractIntegrationList.put(regionName, cqs);&#xD;
			_cqsContractBySnIntegrationList.put(regionName, cqsBySN);&#xD;
		}&#xD;
		ESLog.debug(&quot;Initialization of ContractOrchestration&quot;);&#xD;
		return 0;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmQdrTEeWv0eZvzLc0yA" name="getInstance" specification="_xRaEWdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmQtrTEeWv0eZvzLc0yA" type="_xRaEUNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _instance;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmQ9rTEeWv0eZvzLc0yA" name="getContractEntitlementBySerialNumberForOrchestration" specification="_xYXoItrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmRNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmRdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmRtrTEeWv0eZvzLc0yA" type="_xRT9udrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ArrayList&lt;Transaction> replies = null;&#xD;
		try {&#xD;
			switch(ContractScenario.getInstance().determineContractScenario(request,_cqsEnable,_odsEnable)) {&#xD;
				case ContractScenario.ODS_ONLY_SCENARIO:&#xD;
					ESLog.debug(&quot;ODS ONLY SCENARIO&quot;);&#xD;
					replies = getContractEntitlementBySNFromODS(request,metricsHandler);&#xD;
					break;&#xD;
	&#xD;
				case ContractScenario.CQS_ONLY_SCENARIO:&#xD;
					ESLog.debug(&quot;ODS ONLY SCENARIO&quot;);&#xD;
					replies = getContractEntitlementBySNFromCQS(request,metricsHandler);&#xD;
					break;&#xD;
					&#xD;
				case ContractScenario.CQS_AND_ODS_SCENARIO:&#xD;
					ESLog.debug(&quot;ODS &amp; CQS&quot;);&#xD;
					replies = getContractEntitlementBySNFromCQSAndODS(request,metricsHandler);&#xD;
					break;				&#xD;
			}&#xD;
			&#xD;
			EsReply reply = processListOfBySNReplies(replies,metricsHandler, request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest().getIncludeWorkings());&#xD;
			reply.getEsHeader().setInputRequest(request);&#xD;
			ContractBySnReply cbsr = new ContractBySnReply( reply,getMapOfStandardizedProduct(replies), getReplyContext(replies, request));&#xD;
			return cbsr;&#xD;
		}finally {&#xD;
			cleanContractReplies(replies);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmR9rTEeWv0eZvzLc0yA" name="cleanContractReplies" specification="_xYdukNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmSNrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Cleaning up orchestration&quot;);&#xD;
		try {&#xD;
			if(replies != null) {&#xD;
				Iterator&lt;Transaction> it = replies.iterator();&#xD;
				// go through all replies &#xD;
				while(it.hasNext()) {&#xD;
					Transaction tr= it.next();&#xD;
					tr.destroy();&#xD;
				}&#xD;
			}&#xD;
		}catch(Exception e)  {&#xD;
			ESLog.debug(&quot;Found an exception while cleaning up&quot;,e);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmSdrTEeWv0eZvzLc0yA" name="getReplyContext" specification="_xYduk9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmStrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmS9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmTNrTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReplyContext finalContext = new EsReplyContext(new OutputDetails(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest()));&#xD;
		Iterator&lt;Transaction> it = replies.iterator();&#xD;
		while(it.hasNext()) {&#xD;
			Object tmp = it.next();&#xD;
			if( tmp instanceof ContractTransaction) {&#xD;
				ContractTransaction tr = (ContractTransaction)tmp;&#xD;
				&#xD;
				if(tr.getReplyContext() != null) {&#xD;
					finalContext.mergeWith(tr.getReplyContext());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return finalContext;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmTdrTEeWv0eZvzLc0yA" name="getMapOfStandardizedProduct" specification="_xYdumNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmTtrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmT9rTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>Iterator&lt;Transaction> it = replies.iterator();&#xD;
		HashMap finalMap = new HashMap();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction t = it.next();&#xD;
			if(t.getMappedReply() != null) {&#xD;
				HashMap&lt;?, ?> map =((ContractTransaction)t).getStandardizedProductHashMap();&#xD;
				if(map!= null) {&#xD;
					finalMap.putAll(map);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return finalMap;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmUNrTEeWv0eZvzLc0yA" name="getContractEntitlement" specification="_xYdundrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmUdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmUtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmU9rTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmVNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ArrayList&lt;Transaction> replies = null;&#xD;
		try {&#xD;
			switch(ContractScenario.getInstance().determineContractScenario(request,_cqsEnable,_odsEnable)) {&#xD;
				case ContractScenario.ODS_ONLY_SCENARIO:&#xD;
					replies = getContractEntitlementFromODS(request,metricsHandler);&#xD;
					break;&#xD;
	&#xD;
				case ContractScenario.CQS_ONLY_SCENARIO:&#xD;
					replies = getContractEntitlementFromCQS(request,metricsHandler);&#xD;
					break;&#xD;
					&#xD;
				case ContractScenario.CQS_AND_ODS_SCENARIO:&#xD;
					replies = getContractEntitlementFromCQSAndODS(request,metricsHandler);&#xD;
					break;				&#xD;
			}&#xD;
				&#xD;
			&#xD;
			// Now we got all the replies from ODS and CQS&#xD;
			// Call here ODS to get Customer Indicator and map them to apropriate ObligationHeader objects&#xD;
			&#xD;
			//if(includeCustomerIndicator)&#xD;
	       	int errorId = -1;&#xD;
			if(request.getEsRequestComplexTypeChoice().getContractRequest().getIncludeCustomerIndicator()){&#xD;
				errorId = getCustomerIndicatorFromODS(replies,request,metricsHandler);			&#xD;
			}		&#xD;
	&#xD;
			EsReply esReply = processListOfReplies(replies,metricsHandler, includeWorkings);&#xD;
	&#xD;
			//if(includeCustomerIndicator) and if(includeWorkings)&#xD;
			if(request.getEsRequestComplexTypeChoice().getContractRequest().getIncludeCustomerIndicator() &#xD;
					&amp;&amp; includeWorkings &amp;&amp; esReply !=null &#xD;
					&amp;&amp; esReply.getEsReplyChoice() !=null &amp;&amp; esReply.getEsReplyChoice().getContractEntitlement() !=null){&#xD;
				ContractEntitlementComplexType cectmp = esReply.getEsReplyChoice().getContractEntitlement();&#xD;
				if(errorId == 0){&#xD;
					ESLog.debug(&quot;mapping a success customer identicator&quot;);&#xD;
					CSWorkingMapper mapper = new CSWorkingMapper(&quot;success&quot;,&quot;ODS Customer Indicator&quot;);&#xD;
					cectmp.addWorking(mapper.map());&#xD;
					&#xD;
				}else if(errorId == ErrorFactory.id300_NO_DATA_FOUND){&#xD;
					ESLog.debug(&quot;mapping a no data found customer identicator&quot;);&#xD;
					CSWorkingMapper mapper = new CSWorkingMapper(&quot;No data found&quot;,&quot;ODS Customer Indicator&quot;);&#xD;
					cectmp.addWorking(mapper.map());				&#xD;
				}else if(errorId == ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE){&#xD;
					ESLog.debug(&quot;mapping a system not available customer identicator&quot;);&#xD;
	                CSWorkingMapper mapper = new CSWorkingMapper(&quot;ES database is down&quot;,&quot;ODS Customer Indicator&quot;);&#xD;
	                cectmp.addWorking(mapper.map());               &#xD;
	            }&#xD;
			}		&#xD;
			return esReply;&#xD;
		}finally {&#xD;
			cleanContractReplies(replies);&#xD;
		}&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmVdrTEeWv0eZvzLc0yA" name="getCustomerIndicatorFromODS" specification="_xYduotrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmVtrTEeWv0eZvzLc0yA" name="cqsReplies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmV9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmWNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmWdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Transaction odsReply = null;&#xD;
   	int errorId = 0;&#xD;
		ESLog.debug(&quot;Calling ODS for ContractEntitlement&quot;);&#xD;
		//For each obligation header:&#xD;
		//	Get the SourceCustomerID (AMID Level 1) of the SoldTo Customer address&#xD;
		//	Search in the database whether there is one or several customer indicators that match the SourceCustomerID (AMID Level 1) &#xD;
		//	Add the customer indicators in the obligation header segment of the ES response&#xD;
		try{&#xD;
			errorId = _odsCustomerIndicatorIntegration.doCustomerIndicatorIntegration(cqsReplies,request,metricsHandler);&#xD;
		}catch(Throwable thr){&#xD;
			if(thr instanceof DatabaseDownException) {&#xD;
				ESLog.error(&quot;Caught DatabaseDownException from ODS access -> passing it on to signal that service is down&quot;);&#xD;
				odsReply = new ErrorTransaction(null, false, thr, EsConstants.ODSCI_SYSTEM_NAME, true);&#xD;
				errorId=ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE;&#xD;
			}&#xD;
			if(thr instanceof SifException) {&#xD;
				ESLog.debug(&quot;Caught SifException: &quot; + thr.getMessage() + &quot; -> creating ErrorTransaction for ODS&quot;);&#xD;
				odsReply = new ErrorTransaction(null, false, thr, EsConstants.ODSCI_SYSTEM_NAME, true);&#xD;
			}			&#xD;
		}&#xD;
		if(odsReply != null){&#xD;
			cqsReplies.add(odsReply);				&#xD;
		}&#xD;
		ESLog.debug(&quot;Done calling to ODS&quot;);&#xD;
		return errorId;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmWtrTEeWv0eZvzLc0yA" name="processListOfBySNReplies" specification="_xYduqNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmW9rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmXNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmXdrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmXtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>//We only got exception.&#xD;
		ESLog.debug(&quot;Contracts by serial Number processing &amp; merging is beginning&quot;);&#xD;
		&#xD;
		if(ContractErrorsProcessing.getInstance().countSifException(replies) == replies.size()) {&#xD;
&#xD;
			//We only got exception.&#xD;
			ESLog.debug(&quot;We only got execption so , First we try to prioritize errors&quot;);&#xD;
			&#xD;
			SifException composedError = ContractErrorsProcessing.getInstance().getHighestPriorityException(replies);&#xD;
			if(composedError != null) {&#xD;
				ESLog.debug(&quot;Warranty merging was having only exception&quot;);&#xD;
				throw composedError;&#xD;
			}&#xD;
		}&#xD;
		//We are getting a reply how of it&#xD;
		ESLog.debug(&quot;A composed reply will be generated&quot;);&#xD;
&#xD;
		return ContractBySNTransactionComposition.getInstance().getComposedReply(replies,  includeWorkings);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmX9rTEeWv0eZvzLc0yA" name="processListOfReplies" specification="_xYdurtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmYNrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmYdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmYtrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaLmY9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>//We only got exception.&#xD;
		ESLog.debug(&quot;Contracts processing merging is beginning&quot;);&#xD;
		&#xD;
		if(ContractErrorsProcessing.getInstance().countSifException(replies) == replies.size()) {&#xD;
&#xD;
			//We only got exception.&#xD;
			ESLog.debug(&quot;We only got execption so , First we try to prioritize errors&quot;);&#xD;
			&#xD;
			SifException composedError = ContractErrorsProcessing.getInstance().getHighestPriorityException(replies);&#xD;
			if(composedError != null) {&#xD;
				ESLog.debug(&quot;Contract orchestration was having only exception&quot;);&#xD;
				throw composedError;&#xD;
			}&#xD;
		}&#xD;
		//We are getting a reply how of it&#xD;
		ESLog.debug(&quot;A composed reply will be generated&quot;);&#xD;
		&#xD;
		return ContractTransactionComposition.getInstance().getComposedReply(replies,  includeWorkings);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmZNrTEeWv0eZvzLc0yA" name="getContractEntitlementFromODS" specification="_xYdutNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmZdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmZtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmZ9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Calling ODS&quot;);&#xD;
		// There is no timeout when only accesing ODS&#xD;
		ArrayList&lt;Transaction> list = new ArrayList&lt;Transaction>();&#xD;
		&#xD;
		Transaction odsTran = _odsContractIntegration.doContractIntegration(request,metricsHandler);&#xD;
		list.add(odsTran);&#xD;
		&#xD;
		ESLog.debug(&quot;Done calling to ODS&quot;);&#xD;
		return list;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmaNrTEeWv0eZvzLc0yA" name="getContractEntitlementFromCQSAndODS" specification="_xYduudrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmadrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmatrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLma9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Starting calling CQS and ODS&quot;);&#xD;
		ArrayList &lt;OrchestrationWorker> listOfOrchestrationWorkers = new ArrayList&lt;OrchestrationWorker>(_cqsContractIntegrationList.size());&#xD;
		ArrayList &lt;Transaction> replies;&#xD;
&#xD;
		OrchestrationWorker integrationLayerThread = null;&#xD;
		Transaction odsReply = null;&#xD;
		&#xD;
		// create all threads and add them to a list&#xD;
		Iterator&lt;CQSIntegration> cqsIntegrationListIterator = _cqsContractIntegrationList.values().iterator();&#xD;
		while (cqsIntegrationListIterator.hasNext()) {&#xD;
			CQSGetContractIntegration currentIntegrationObject = (CQSGetContractIntegration) cqsIntegrationListIterator.next();&#xD;
					&#xD;
			ESLog.debug(&quot;Prepraring thread for region: &quot;+ currentIntegrationObject.getRegionName());&#xD;
			integrationLayerThread = new OrchestrationWorker(request,currentIntegrationObject, metricsHandler);&#xD;
			listOfOrchestrationWorkers.add(integrationLayerThread);&#xD;
		}		&#xD;
		&#xD;
		// start threads and wait for the result&#xD;
		try {&#xD;
			// start the CQS threads&#xD;
			ESLog.debug(&quot;Start CQS threads&quot;);&#xD;
			long startTime = startWorkerThreads(listOfOrchestrationWorkers);&#xD;
			// start the ODS request using the current thread&#xD;
			// NOTE: This is done to have the DatabaseDownException passed all the way down to the &#xD;
			//       ServiceHandler&#xD;
			try {&#xD;
				ESLog.debug(&quot;Start ODS request on main thread&quot;);&#xD;
				odsReply = _odsContractIntegration.doContractIntegration(request,metricsHandler);&#xD;
			} catch(Throwable thr) {&#xD;
			    ESLog.debug(&quot;Caught Throwable&quot;,thr);&#xD;
				if(thr instanceof SifException) {&#xD;
					ESLog.debug(&quot;Caught SifException: &quot; + thr.getMessage() + &quot; -> creating ErrorTransaction for ODS&quot;);&#xD;
					odsReply = new ErrorTransaction(null, false, thr, EsConstants.ODS_SYSTEM_NAME, true);&#xD;
				}&#xD;
			}  finally {&#xD;
				ESLog.debug(&quot;Wait for the CQS threads&quot;);&#xD;
				replies = waitForWorkerThreads(listOfOrchestrationWorkers, startTime);&#xD;
				ESLog.debug(&quot;CQS threads are done&quot;);&#xD;
			}&#xD;
			replies.add(odsReply);&#xD;
		} finally {&#xD;
			listOfOrchestrationWorkers.clear();&#xD;
			ESLog.debug(&quot;Done calling CQS and ODS&quot;);&#xD;
		}&#xD;
		return replies;		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmbNrTEeWv0eZvzLc0yA" name="getContractEntitlementFromCQS" specification="_xYduvtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmbdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmbtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmb9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Starting calling CQS&quot;);&#xD;
		ArrayList&lt;OrchestrationWorker> listOfOrchestrationWorkers = new ArrayList&lt;OrchestrationWorker>(_cqsContractIntegrationList.size());&#xD;
		ArrayList&lt;Transaction> replies = null;&#xD;
		OrchestrationWorker integrationLayerThread;&#xD;
		&#xD;
		// create the CQS threads&#xD;
		Iterator&lt;CQSIntegration> cqsIntegrationListIterator = _cqsContractIntegrationList.values().iterator();&#xD;
		while (cqsIntegrationListIterator.hasNext()) {&#xD;
			CQSGetContractIntegration currentIntegrationObject = (CQSGetContractIntegration) cqsIntegrationListIterator.next();&#xD;
					&#xD;
			ESLog.debug(&quot;Prepraring thread for region: &quot;&#xD;
					+ currentIntegrationObject.getRegionName());&#xD;
			integrationLayerThread = new OrchestrationWorker(request,&#xD;
					currentIntegrationObject, metricsHandler);&#xD;
			listOfOrchestrationWorkers.add(integrationLayerThread);&#xD;
		}		&#xD;
&#xD;
		// start all CQS threads&#xD;
		try {&#xD;
			ESLog.debug(&quot;Start CQS threads&quot;);&#xD;
			long startTime = startWorkerThreads(listOfOrchestrationWorkers);&#xD;
			ESLog.debug(&quot;Wait for the CQS threads&quot;);&#xD;
			replies = waitForWorkerThreads(listOfOrchestrationWorkers, startTime);&#xD;
		}finally {&#xD;
			listOfOrchestrationWorkers.clear();&#xD;
			ESLog.debug(&quot;Done calling CQS&quot;);&#xD;
		}&#xD;
		return replies;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmcNrTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromODS" specification="_xYduw9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmcdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmctrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmc9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Calling ODS&quot;);&#xD;
		ArrayList&lt;Transaction> list = new ArrayList&lt;Transaction>(1);&#xD;
		Transaction reply = _odsContractBySNIntegration.doContractIntegration(request,metricsHandler);&#xD;
		list.add(reply);&#xD;
		&#xD;
		ESLog.debug(&quot;Done Calling ODS&quot;);&#xD;
		return list;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmdNrTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromCQSAndODS" specification="_xYj1MNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmddrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmdtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmd9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Starting calling CQSbySN and ODS&quot;);&#xD;
		ArrayList&lt;OrchestrationWorker> listOfOrchestrationWorker = new ArrayList&lt;OrchestrationWorker>(_cqsContractBySnIntegrationList.size());&#xD;
		ArrayList&lt;Transaction> replies = null;&#xD;
		OrchestrationWorker integrationLayerThread;&#xD;
		Transaction odsReply = null;&#xD;
&#xD;
		Iterator&lt;CQSIntegration> cqsIntegrationListIterator = _cqsContractBySnIntegrationList.values().iterator();&#xD;
		while (cqsIntegrationListIterator.hasNext()) {&#xD;
			CQSGetContractBySNIntegration currentIntegrationObject = (CQSGetContractBySNIntegration) cqsIntegrationListIterator.next();&#xD;
					&#xD;
			ESLog.debug(&quot;Prepraring thread for region: &quot;&#xD;
					+ currentIntegrationObject.getRegionName());&#xD;
			integrationLayerThread = new OrchestrationWorker(request,&#xD;
					currentIntegrationObject, metricsHandler);&#xD;
			listOfOrchestrationWorker.add(integrationLayerThread);&#xD;
		}		&#xD;
&#xD;
		// start threads and wait for the result&#xD;
		try {&#xD;
			// start the CQS threads&#xD;
			ESLog.debug(&quot;Start CQSbySN threads&quot;);&#xD;
			long startTime = startWorkerThreads(listOfOrchestrationWorker);&#xD;
			// start the ODS request using the current thread&#xD;
			// NOTE: This is done to have the DatabaseDownException passed all the way down to the &#xD;
			//       ServiceHandler&#xD;
			try {&#xD;
				ESLog.debug(&quot;Start ODS (bySN) request on main thread&quot;);&#xD;
				odsReply = _odsContractBySNIntegration.doContractIntegration(request,metricsHandler);&#xD;
			} catch(Throwable thr) {&#xD;
				if(thr instanceof SifException) {&#xD;
					ESLog.debug(&quot;Caught SifException: &quot; + thr.getMessage() + &quot; -> creating ErrorTransaction for ODS (bySN)&quot;);&#xD;
					odsReply = new ErrorTransaction(null, false, thr, &quot;ODS&quot;, true);&#xD;
				}&#xD;
			}  finally {&#xD;
				ESLog.debug(&quot;Wait for the CQSbySN threads&quot;);&#xD;
				replies = waitForWorkerThreads(listOfOrchestrationWorker, startTime);&#xD;
				ESLog.debug(&quot;CQSbySN threads are done&quot;);&#xD;
			}&#xD;
			replies.add(odsReply);&#xD;
		} finally {&#xD;
			listOfOrchestrationWorker.clear();&#xD;
			ESLog.debug(&quot;Done calling CQSbySN and ODS&quot;);&#xD;
		}&#xD;
		return replies;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmeNrTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromCQS" specification="_xYj1NdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmedrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmetrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLme9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Starting calling CQSbySN&quot;);&#xD;
		ArrayList&lt;OrchestrationWorker> listOfOrchestrationWorker = new ArrayList&lt;OrchestrationWorker>(_cqsContractBySnIntegrationList.size());&#xD;
		ArrayList&lt;Transaction> replies;&#xD;
		OrchestrationWorker integrationLayerThread;&#xD;
		&#xD;
		// create the threads&#xD;
		Iterator&lt;CQSIntegration> cqsIntegrationListIterator = _cqsContractBySnIntegrationList.values().iterator();&#xD;
		while (cqsIntegrationListIterator.hasNext()) {&#xD;
			CQSGetContractBySNIntegration currentIntegrationObject = (CQSGetContractBySNIntegration) cqsIntegrationListIterator.next();&#xD;
					&#xD;
			ESLog.debug(&quot;Prepraring thread for region: &quot;&#xD;
					+ currentIntegrationObject.getRegionName());&#xD;
			integrationLayerThread = new OrchestrationWorker(request,&#xD;
					currentIntegrationObject, metricsHandler);&#xD;
			listOfOrchestrationWorker.add(integrationLayerThread);&#xD;
		}		&#xD;
		&#xD;
		// start all threads and wait for the reply&#xD;
		try {&#xD;
			ESLog.debug(&quot;Start CQSbySN threads&quot;);&#xD;
			long startTime = startWorkerThreads(listOfOrchestrationWorker);&#xD;
			ESLog.debug(&quot;Wait for the CQSbySN threads&quot;);&#xD;
			replies = waitForWorkerThreads(listOfOrchestrationWorker, startTime);&#xD;
		}finally {&#xD;
			listOfOrchestrationWorker.clear();&#xD;
			ESLog.debug(&quot;Done calling CQSbySN&quot;);&#xD;
		}&#xD;
		return replies;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmfNrTEeWv0eZvzLc0yA" name="configChanged" specification="_xYj1OtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmfdrTEeWv0eZvzLc0yA" name="event" type="_xWjqINrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>if (event != null &amp;&amp; event.getNewConfig() != null) {&#xD;
			String threadTimeoutEnable = event.getNewConfig().getProperty(&quot;es.sap.integration.thread.timeout.enable&quot;);&#xD;
			String threadTimeout = event.getNewConfig().getProperty(&quot;es.sap.integration.thread.timeout&quot;);&#xD;
			&#xD;
			if((threadTimeoutEnable != null) &amp;&amp; (threadTimeoutEnable.trim().equalsIgnoreCase(&quot;true&quot;))){&#xD;
				_threadTimeoutEnable = true;				&#xD;
			}&#xD;
			if((threadTimeout != null) &amp;&amp; (threadTimeout.trim().length() > 0)){&#xD;
				_threadTimeout = Long.parseLong(threadTimeout);&#xD;
			}&#xD;
&#xD;
			String temp = event.getNewConfig().getProperty(&#xD;
					THREAD_TIMEOUT_PROPERTY);&#xD;
			temp = event.getNewConfig().getProperty(CONTRACT_SYSTEMS_PROPERTY);&#xD;
         StringTokenizer st = new StringTokenizer(temp, &quot;,&quot;);&#xD;
         //We create temp variable so that we can safely and quickly save them next&#xD;
         boolean odsEnable = false;&#xD;
         boolean cqsEnable = false;&#xD;
         while (st.hasMoreTokens()) {&#xD;
         	String systemName = st.nextToken();&#xD;
         	if(systemName.trim().equalsIgnoreCase(&quot;ODS&quot;)) {&#xD;
         		odsEnable = true;&#xD;
         	}else if(systemName.trim().equalsIgnoreCase(&quot;CQS&quot;)) {&#xD;
         		cqsEnable = true;&#xD;
         	}&#xD;
         }&#xD;
         //If no properties set, we default to both enable&#xD;
         if(!odsEnable &amp;&amp; !cqsEnable ) {&#xD;
         	ESLog.error(&quot;No source system specified, by default CQS and ODS will be called&quot;);&#xD;
         	odsEnable = true;&#xD;
             cqsEnable = true;&#xD;
         }&#xD;
         //TODO: WE may need to synchronize&#xD;
         _cqsEnable = cqsEnable;&#xD;
         _odsEnable = odsEnable;&#xD;
         &#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmftrTEeWv0eZvzLc0yA" name="execute" specification="_xYj1PNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmf9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmgNrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmgdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmgtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>if(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest() != null) {&#xD;
			return getContractEntitlementBySerialNumber(request, metricsHandler);&#xD;
&#xD;
		}else if(request.getEsRequestComplexTypeChoice().getContractRequest() != null) {&#xD;
			return getContractEntitlement(request, metricsHandler,  request.getEsRequestComplexTypeChoice().getContractRequest().getIncludeWorkings());&#xD;
		}&#xD;
		return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmg9rTEeWv0eZvzLc0yA" name="getContractEntitlementBySerialNumber" specification="_xYj1QdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmhNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmhdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmhtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ContractBySnReply  cbsr = getContractEntitlementBySerialNumberForOrchestration(request, metricsHandler);&#xD;
		return cbsr.getEsReply();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRaEUdrTEeWv0eZvzLc0yA" name="ContractOrchestration" visibility="private" method="_xaLmPdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRaEUtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRaEU9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad5udrTEeWv0eZvzLc0yA">
                      <body>Default Constructor. It will do initializatiuon at the same time</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRaEVNrTEeWv0eZvzLc0yA" type="_xRaEUNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRaEVdrTEeWv0eZvzLc0yA" name="init" visibility="protected" method="_xaLmP9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRaEVtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRaEV9rTEeWv0eZvzLc0yA" key="synchronized"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad5utrTEeWv0eZvzLc0yA">
                      <body>Initialization method It should only be ran once</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRaEWNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRaEWdrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaLmQdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5u9rTEeWv0eZvzLc0yA">
                      <body>Instance Method</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWjqJNrTEeWv0eZvzLc0yA" type="_xRaEUNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYXoItrTEeWv0eZvzLc0yA" name="getContractEntitlementBySerialNumberForOrchestration" method="_xaLmQ9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5vNrTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementBySerialNumberForOrchestration &#xD;
	 * Decide which scenario we need to call&#xD;
	 * &#xD;
	 * @param request&#xD;
	 * @param metricsHandler&#xD;
	 * @return&#xD;
	 * @throws SifException</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYXoI9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoJNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYXoJdrTEeWv0eZvzLc0yA" type="_xRT9udrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYdukNrTEeWv0eZvzLc0yA" name="cleanContractReplies" visibility="private" method="_xaLmR9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYdukdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduk9rTEeWv0eZvzLc0yA" name="getReplyContext" visibility="private" method="_xaLmSdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5vdrTEeWv0eZvzLc0yA">
                      <body>getReplyContext&#xD;
	 * &#xD;
	 * @param replies&#xD;
	 * @param request&#xD;
	 * @return</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYdulNrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduldrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdultrTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYdumNrTEeWv0eZvzLc0yA" name="getMapOfStandardizedProduct" visibility="private" method="_xaLmTdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5vtrTEeWv0eZvzLc0yA">
                      <body>Concatenate all maps in  one.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYdumdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdum9rTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYdundrTEeWv0eZvzLc0yA" name="getContractEntitlement" visibility="protected" method="_xaLmUNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5v9rTEeWv0eZvzLc0yA">
                      <body>getContractEntitlement&#xD;
	 * Decide which scenario to call&#xD;
	 * &#xD;
	 * @param request&#xD;
	 * @param metricsHandler&#xD;
	 * @param includeWorkings&#xD;
	 * @return&#xD;
	 * @throws SifException</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduntrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdun9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduoNrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYduodrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduotrTEeWv0eZvzLc0yA" name="getCustomerIndicatorFromODS" visibility="private" method="_xaLmVdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5wNrTEeWv0eZvzLc0yA">
                      <body>getContractSummaryFromODS&#xD;
	 * this method gets Contract Summary from Entitlement ODS&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of 1 reply</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduo9rTEeWv0eZvzLc0yA" name="cqsReplies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdupNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdupdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduptrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduqNrTEeWv0eZvzLc0yA" name="processListOfBySNReplies" visibility="private" method="_xaLmWtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5wdrTEeWv0eZvzLc0yA">
                      <body>processListOfBySNReplies&#xD;
	 * This method take the reply out of the list of replies&#xD;
	 * &#xD;
	 * @param a list of replies&#xD;
	 * @param metrics handler to get performance data</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduqdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduqtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduq9rTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYdurNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYdurtrTEeWv0eZvzLc0yA" name="processListOfReplies" visibility="private" method="_xaLmX9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5wtrTEeWv0eZvzLc0yA">
                      <body>processListOfReplies&#xD;
	 * This method take the reply out of the list of replies&#xD;
	 * &#xD;
	 * @param a list of replies&#xD;
	 * @param metrics handler to get performance data</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYdur9rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdusNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdusdrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYdustrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYdutNrTEeWv0eZvzLc0yA" name="getContractEntitlementFromODS" visibility="private" method="_xaLmZNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5w9rTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementFromODS&#xD;
	 * this method gets Contract entitlement from Entitlement ODS&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of 1 reply</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYdutdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduttrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduuNrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduudrTEeWv0eZvzLc0yA" name="getContractEntitlementFromCQSAndODS" visibility="private" method="_xaLmaNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5xNrTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementFromCQSAndODS&#xD;
	 * Call CQS and ODS&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of replies</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduutrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduu9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduvdrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduvtrTEeWv0eZvzLc0yA" name="getContractEntitlementFromCQS" visibility="private" method="_xaLmbNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5xdrTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementFromCQS&#xD;
	 * Call CQS&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of replies</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduv9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduwNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduwtrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYduw9rTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromODS" visibility="private" method="_xaLmcNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5xtrTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementBySNFromODS&#xD;
	 * this method get Contract entitlement from Entitlement ODS&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of 1 reply</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYduxNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYduxdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYdux9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1MNrTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromCQSAndODS" visibility="private" method="_xaLmdNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5x9rTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementBySNFromCQSAndODS&#xD;
	 * Call CQS and ODS for a reply&#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of replies</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1MdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1MtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1NNrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1NdrTEeWv0eZvzLc0yA" name="getContractEntitlementBySNFromCQS" visibility="private" method="_xaLmeNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5yNrTEeWv0eZvzLc0yA">
                      <body>getContractEntitlementBySNFromCQS&#xD;
	 * Call CQS &#xD;
	 * &#xD;
	 * @param the request&#xD;
	 * @param a metrics handler&#xD;
	 * @return a list of replies</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1NtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1N9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1OdrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1OtrTEeWv0eZvzLc0yA" name="configChanged" method="_xaLmfNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5ydrTEeWv0eZvzLc0yA">
                      <body>(non-Javadoc)&#xD;
	 * &#xD;
	 * @see com.hp.ruc.config.ConfigChangeListener#configChanged(com.hp.ruc.config.ConfigChangeEvent)</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1O9rTEeWv0eZvzLc0yA" name="event" type="_xWjqINrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1PNrTEeWv0eZvzLc0yA" name="execute" method="_xaLmftrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYj1PdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1PtrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1P9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1QNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1QdrTEeWv0eZvzLc0yA" name="getContractEntitlementBySerialNumber" visibility="private" method="_xaLmg9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYj1QtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1Q9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1RNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRgK8NrTEeWv0eZvzLc0yA" name="ContractScenario" visibility="package">
                  <ownedComment xmi:id="_xad5ytrTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_xZg3idrTEeWv0eZvzLc0yA" name="ODS_ONLY_SCENARIO" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3itrTEeWv0eZvzLc0yA" value="1"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3i9rTEeWv0eZvzLc0yA" name="CQS_ONLY_SCENARIO" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3jNrTEeWv0eZvzLc0yA" value="2"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3jdrTEeWv0eZvzLc0yA" name="CQS_AND_ODS_SCENARIO" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3jtrTEeWv0eZvzLc0yA" value="3"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3j9rTEeWv0eZvzLc0yA" name="_instance" visibility="private" isStatic="true" type="_xRgK8NrTEeWv0eZvzLc0yA" association="_xbIoKdrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3kNrTEeWv0eZvzLc0yA" value="new ContractScenario()"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmh9rTEeWv0eZvzLc0yA" name="ContractScenario" specification="_xRgK8drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmiNrTEeWv0eZvzLc0yA" type="_xRgK8NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmidrTEeWv0eZvzLc0yA" name="getInstance" specification="_xRgK9drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmitrTEeWv0eZvzLc0yA" type="_xRgK8NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _instance;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmi9rTEeWv0eZvzLc0yA" name="determineContractScenario" specification="_xYj1RtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmjNrTEeWv0eZvzLc0yA" name="request" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmjdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if((request == null)|| &#xD;
		   (request.getContractIdentifierType() == null) &amp;&amp;&#xD;
		   ((request.getContractIdentifier() == null)|| &#xD;
		   (request.getContractIdentifier().length()== 0)))  {&#xD;
			throw ErrorFactory.getSifException(&#xD;
					ErrorFactory.id9999_INTERNAL_ERROR,&#xD;
					&quot;The determineContractScenario was not correctly used.&quot;);&#xD;
		}&#xD;
		&#xD;
		// No ContractIdentifierType&#xD;
		if(request.getContractIdentifierType() == null) {&#xD;
			return CQS_AND_ODS_SCENARIO;&#xD;
		}&#xD;
		// ContractIdentifierType = FunctionalLocation &#xD;
		// ContractIdentifierType = CCRN&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.FUNCTIONALLOCATION) ||&#xD;
		   request.getContractIdentifierType().equals(ContractIdentifierTypeType.CCRN))			{&#xD;
			return CQS_AND_ODS_SCENARIO;&#xD;
		}&#xD;
		// ContractIdentifierType = CDID&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.CUSTOMERDEFINEDID)){&#xD;
			return CQS_ONLY_SCENARIO;&#xD;
		}&#xD;
		// ContractIdentifierType = SAID AND ContractIdentifier does NOT start with 9&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.SVCAGREEMENTID) &amp;&amp;&#xD;
				!request.getContractIdentifier().startsWith(&quot;9&quot;)) {&#xD;
			return CQS_ONLY_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		return ODS_ONLY_SCENARIO;&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaLmjtrTEeWv0eZvzLc0yA" name="determineContractScenario" specification="_xYj1SdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaLmj9rTEeWv0eZvzLc0yA" name="request" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaLmkNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if(request.getContractIdentifierType() == null || request.getContractIdentifier() == null) {&#xD;
			return CQS_AND_ODS_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.FUNCTIONALLOCATION) ||&#xD;
				   request.getContractIdentifierType().equals(ContractIdentifierTypeType.CCRN))			{&#xD;
			return CQS_AND_ODS_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.SVCAGREEMENTID) ){&#xD;
			return CQS_ONLY_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return ODS_ONLY_SCENARIO;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRscNrTEeWv0eZvzLc0yA" name="determineContractScenario" specification="_xYj1TNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRscdrTEeWv0eZvzLc0yA" name="request" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsctrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if((request == null)|| &#xD;
		   (request.getContractIdentifierType() == null) &amp;&amp;&#xD;
		   ((request.getContractIdentifier() == null)|| &#xD;
		   (request.getContractIdentifier().length()== 0)))  {&#xD;
			throw ErrorFactory.getSifException(&#xD;
					ErrorFactory.id9999_INTERNAL_ERROR,&#xD;
					&quot;The determineContractScenario was not correctly used.&quot;);&#xD;
		}&#xD;
		&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.FUNCTIONALLOCATION) ||&#xD;
				   request.getContractIdentifierType().equals(ContractIdentifierTypeType.CCRN))			{&#xD;
			return CQS_AND_ODS_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		if(request.getContractIdentifierType().equals(ContractIdentifierTypeType.SVCAGREEMENTID) ||&#xD;
		   request.getContractIdentifierType().equals(ContractIdentifierTypeType.CUSTOMERDEFINEDID)){&#xD;
			return CQS_ONLY_SCENARIO;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return ODS_ONLY_SCENARIO;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsc9rTEeWv0eZvzLc0yA" name="determineContractScenario" specification="_xYj1T9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsdNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsddrTEeWv0eZvzLc0yA" name="cqsEnable">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsdtrTEeWv0eZvzLc0yA" name="odsEnable">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsd9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if(request == null) {&#xD;
			throw ErrorFactory.getSifException(&#xD;
					ErrorFactory.id9999_INTERNAL_ERROR,&#xD;
					&quot;The determineContractScenario was not correctly used.&quot;);			&#xD;
		}&#xD;
		if((cqsEnable &amp;&amp; odsEnable) || (!cqsEnable &amp;&amp; !odsEnable)) {&#xD;
			if(request.getEsRequestComplexTypeChoice().getContractRequest() != null) {&#xD;
				return determineContractScenario(request.getEsRequestComplexTypeChoice().getContractRequest());&#xD;
			}&#xD;
	&#xD;
			if(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest() != null) {&#xD;
				return determineContractScenario(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest());&#xD;
			}&#xD;
			&#xD;
			&#xD;
			// TODO: Not NEEDED !!&#xD;
			if(request.getEsRequestComplexTypeChoice().getEntitlementByPnRequest() != null) {&#xD;
				return determineContractScenario(request.getEsRequestComplexTypeChoice().getEntitlementByPnRequest());&#xD;
			}		&#xD;
			return ODS_ONLY_SCENARIO;&#xD;
		}else if(odsEnable) {&#xD;
			return ODS_ONLY_SCENARIO;&#xD;
			&#xD;
		}else  {&#xD;
			return CQS_ONLY_SCENARIO;&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRgK8drTEeWv0eZvzLc0yA" name="ContractScenario" visibility="private" method="_xaLmh9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRgK8trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRgK89rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad5y9rTEeWv0eZvzLc0yA">
                      <body>Constructor</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRgK9NrTEeWv0eZvzLc0yA" type="_xRgK8NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRgK9drTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaLmidrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5zNrTEeWv0eZvzLc0yA">
                      <body>This method return a singleton for the class&#xD;
	 * @return a singleton</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWpwsNrTEeWv0eZvzLc0yA" type="_xRgK8NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1RtrTEeWv0eZvzLc0yA" name="determineContractScenario" visibility="private" method="_xaLmi9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5zdrTEeWv0eZvzLc0yA">
                      <body>This is the method that find the right contract Scenario&#xD;
	 * Scenarios are defined in the constant list of this class&#xD;
	 * @param a Contract Request&#xD;
	 * @return a scenario</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1R9rTEeWv0eZvzLc0yA" name="request" type="_xVaaktrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1SNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1SdrTEeWv0eZvzLc0yA" name="determineContractScenario" visibility="private" method="_xaLmjtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5ztrTEeWv0eZvzLc0yA">
                      <body>This is the method that find the right contract Scenario&#xD;
	 * Scenarios are defined in the constant list of this class&#xD;
	 * @param a Contract Request&#xD;
	 * @return a scenario</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1StrTEeWv0eZvzLc0yA" name="request" type="_xVmn3drTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1S9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1TNrTEeWv0eZvzLc0yA" name="determineContractScenario" visibility="private" method="_xaRscNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad5z9rTEeWv0eZvzLc0yA">
                      <body>This is the method that find the right contract Scenario&#xD;
	 * Scenarios are defined in the constant list of this class&#xD;
	 * @param a Contract Request&#xD;
	 * @return a scenario</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1TdrTEeWv0eZvzLc0yA" name="request" type="_xVmn29rTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1TtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1T9rTEeWv0eZvzLc0yA" name="determineContractScenario" method="_xaRsc9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad50NrTEeWv0eZvzLc0yA">
                      <body>This is the method that find the right contract Scenario&#xD;
	 * Scenarios are defined in the constant list of this class&#xD;
	 * @param a Contract Request&#xD;
	 * @return a scenario</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1UNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1UdrTEeWv0eZvzLc0yA" name="cqsEnable">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1UtrTEeWv0eZvzLc0yA" name="odsEnable">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1U9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRgK9trTEeWv0eZvzLc0yA" name="ContractScenarioTest">
                  <generalization xmi:id="_xYj1VNrTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRseNrTEeWv0eZvzLc0yA" name="ContractScenarioTest" specification="_xRgK99rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsedrTEeWv0eZvzLc0yA" type="_xRgK9trTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsetrTEeWv0eZvzLc0yA" name="ContractScenarioTest" specification="_xRgK-9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRse9rTEeWv0eZvzLc0yA" name="arg0">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsfNrTEeWv0eZvzLc0yA" type="_xRgK9trTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(arg0);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsfdrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithNull" specification="_xRgLANrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>//EsRequestComplexType request = null;&#xD;
		&#xD;
		try  {&#xD;
			ContractScenario.getInstance().determineContractScenario(null, true, true);&#xD;
			fail(&quot;We should have got an exception.&quot;);&#xD;
			EsRequestComplexType request = new EsRequestComplexType();&#xD;
			request.setEsRequestComplexTypeChoice(new EsRequestComplexTypeChoice());&#xD;
			request.getEsRequestComplexTypeChoice().setContractRequest(new ContractRequest());&#xD;
&#xD;
			ContractRequest cr = request.getEsRequestComplexTypeChoice().getContractRequest();			&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.SVCAGREEMENTID);&#xD;
			cr.setContractIdentifier(null);			&#xD;
			int scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been CQS &amp; ODS&quot;, ContractScenario.CQS_AND_ODS_SCENARIO, scenario);&#xD;
&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.FUNCTIONALLOCATION);&#xD;
			cr.setContractIdentifier(null);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been CQS &amp; ODS&quot;, ContractScenario.CQS_AND_ODS_SCENARIO, scenario);&#xD;
			&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.FUNCTIONALLOCATION);&#xD;
			cr.setContractIdentifier(null);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, true, false);&#xD;
			assertEquals(&quot;It should have been CQS &amp; ODS&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);&#xD;
&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.FUNCTIONALLOCATION);&#xD;
			cr.setContractIdentifier(null);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, false, true);&#xD;
			assertEquals(&quot;It should have been CQS &amp; ODS&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);			&#xD;
		}catch(SifException e) {&#xD;
			//assertTrue();&#xD;
			&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsftrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithODSONLY" specification="_xRgLAdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EsRequestComplexType request = new EsRequestComplexType();&#xD;
		request.setEsRequestComplexTypeChoice(new EsRequestComplexTypeChoice());&#xD;
		request.getEsRequestComplexTypeChoice().setContractRequest(new ContractRequest());&#xD;
&#xD;
		ContractRequest cr = request.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
		try  {&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.REDGROUPSERIALNO);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			int scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been ODS only&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);&#xD;
&#xD;
			&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.HPCAREPACKSERIALNUMBER);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been ODS only&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);&#xD;
			&#xD;
&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.REDACCESSID);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been ODS only&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);			&#xD;
&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.REDCONTRACTID);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been ODS only&quot;, ContractScenario.ODS_ONLY_SCENARIO, scenario);&#xD;
			/*&#xD;
			*/			&#xD;
		}catch(SifException e) {&#xD;
			fail(&quot;We should not get an exception.&quot;);&#xD;
			&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsf9rTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithCQSONLY" specification="_xRgLAtrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EsRequestComplexType request = new EsRequestComplexType();&#xD;
		request.setEsRequestComplexTypeChoice(new EsRequestComplexTypeChoice());&#xD;
		request.getEsRequestComplexTypeChoice().setContractRequest(new ContractRequest());&#xD;
&#xD;
		ContractRequest cr = request.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
		try  {&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.SVCAGREEMENTID);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			int scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been CQS only&quot;, ContractScenario.CQS_ONLY_SCENARIO, scenario);&#xD;
			&#xD;
		}catch(SifException e) {&#xD;
			fail(&quot;We should not get an exception.&quot;);&#xD;
			&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsgNrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithCQSANDODSONLY" specification="_xRgLA9rTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>EsRequestComplexType request = new EsRequestComplexType();&#xD;
		request.setEsRequestComplexTypeChoice(new EsRequestComplexTypeChoice());&#xD;
		request.getEsRequestComplexTypeChoice().setContractRequest(new ContractRequest());&#xD;
&#xD;
		ContractRequest cr = request.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
		try  {&#xD;
			cr.setContractIdentifierType(ContractIdentifierTypeType.FUNCTIONALLOCATION);&#xD;
			cr.setContractIdentifier(&quot;123&quot;);			&#xD;
			int scenario = ContractScenario.getInstance().determineContractScenario(request, true, true);&#xD;
			assertEquals(&quot;It should have been CQS &amp; ODS&quot;, ContractScenario.CQS_AND_ODS_SCENARIO, scenario);&#xD;
&#xD;
&#xD;
			&#xD;
		}catch(SifException e) {&#xD;
			fail(&quot;We should not get an exception.&quot;);&#xD;
			&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRgK99rTEeWv0eZvzLc0yA" name="ContractScenarioTest" method="_xaRseNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRgK-NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRgK-drTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRgK-trTEeWv0eZvzLc0yA" type="_xRgK9trTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRgK-9rTEeWv0eZvzLc0yA" name="ContractScenarioTest" method="_xaRsetrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRgK_drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRgK_trTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRgK_NrTEeWv0eZvzLc0yA" name="arg0">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRgK_9rTEeWv0eZvzLc0yA" type="_xRgK9trTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRgLANrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithNull" method="_xaRsfdrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRgLAdrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithODSONLY" method="_xaRsftrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRgLAtrTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithCQSONLY" method="_xaRsf9rTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xRgLA9rTEeWv0eZvzLc0yA" name="testDetermineContractScenarioWithCQSANDODSONLY" method="_xaRsgNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRgLBNrTEeWv0eZvzLc0yA" name="ContractTransaction">
                  <ownedComment xmi:id="_xad50drTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xYp729rTEeWv0eZvzLc0yA" general="_xVy1FNrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZg3ktrTEeWv0eZvzLc0yA" name="oHeadLocMap" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xbIoLNrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3lNrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3ldrTEeWv0eZvzLc0yA" name="_sourceSystemStatus" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3ltrTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZg3mNrTEeWv0eZvzLc0yA" name="_standardizedProductHashMap" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xbIoL9rTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZg3m9rTEeWv0eZvzLc0yA" name="_ctx" visibility="private" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xbIoMtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsgdrTEeWv0eZvzLc0yA" name="ContractTransaction" specification="_xYj1V9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsgtrTEeWv0eZvzLc0yA" name="config" type="_xVy1JNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsg9rTEeWv0eZvzLc0yA" name="failoverMode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRshNrTEeWv0eZvzLc0yA" name="sourceReply" type="_xYj1VdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRshdrTEeWv0eZvzLc0yA" name="functionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRshtrTEeWv0eZvzLc0yA" name="displayName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsh9rTEeWv0eZvzLc0yA" name="isLocal">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsiNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(config, failoverMode, sourceReply, functionName, displayName,isLocal);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsidrTEeWv0eZvzLc0yA" name="isSourceSystemUnitList" specification="_xRgLBdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsitrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
     if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
         return false;&#xD;
     }else {&#xD;
         ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
         &#xD;
         return (out.getESREPLY().getUNITLIST() != null &amp;&amp; &#xD;
                 out.getESREPLY().getUNITLIST().getPRODUCTS() != null &amp;&amp; &#xD;
                 out.getESREPLY().getUNITLIST().getPRODUCTS().getItem() != null &amp;&amp; &#xD;
                 out.getESREPLY().getUNITLIST().getPRODUCTS().getItem().size() != 0);&#xD;
     }               &#xD;
	&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsi9rTEeWv0eZvzLc0yA" name="getSourceSystemUnitList" specification="_xRgLB9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsjNrTEeWv0eZvzLc0yA" type="_xYj1VdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>//First we check if this is an error&#xD;
     if(!isSourceSystemError()) {&#xD;
     	//only sn can get unit list&#xD;
	        &#xD;
&#xD;
         SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
         if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTBYSNES10Response)  {&#xD;
             ZESCONTRACTENTBYSNES10Response  out  = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
             return out.getESREPLY().getUNITLIST();&#xD;
         }else {&#xD;
             return null;&#xD;
         }&#xD;
     }&#xD;
	    return null;        &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsjdrTEeWv0eZvzLc0yA" name="isSourceSystemStandardReply" specification="_xRmRkNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsjtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if(!isSourceSystemError()) {&#xD;
&#xD;
         SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
         if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
             ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
             return isSuccess(out.getESREPLY().getPROCSTATE());&#xD;
         }else {&#xD;
             ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
             return isSuccess(out.getESREPLY().getPROCSTATE());&#xD;
         }&#xD;
     }			&#xD;
     return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsj9rTEeWv0eZvzLc0yA" name="getSourceSystemStandardReply" specification="_xRmRktrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRskNrTEeWv0eZvzLc0yA" type="_xYj1VdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
         if (reply.getSoapCastorReply() instanceof  ZESCONTRACTENTES10Response) {&#xD;
             &#xD;
             ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
             return out.getESREPLY();               &#xD;
         }else {&#xD;
             ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
             return out.getESREPLY();&#xD;
         }&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRskdrTEeWv0eZvzLc0yA" name="isSourceSystemError" specification="_xRmRk9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsktrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
     if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
         ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
         return !isSuccess(out.getESREPLY().getPROCSTATE());&#xD;
     }else {&#xD;
         ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
         return !isSuccess(out.getESREPLY().getPROCSTATE());&#xD;
     }   &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsk9rTEeWv0eZvzLc0yA" name="getSourceSystemErrors" specification="_xRmRldrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRslNrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaRsldrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
     if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
         ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
         &#xD;
         return getOnlySourceSystemErrors(out.getESREPLY().getMESSAGES().getItem());&#xD;
     }else {&#xD;
         ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
         return getOnlySourceSystemErrors(out.getESREPLY().getMESSAGES().getItem());&#xD;
     }   &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsltrTEeWv0eZvzLc0yA" name="getOnlySourceSystemErrors" specification="_xYj1Y9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsl9rTEeWv0eZvzLc0yA" name="messages" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsmNrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaRsmdrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>ArrayList&lt;ZESCQSMESSAGE> list = new ArrayList&lt;ZESCQSMESSAGE>();&#xD;
		Iterator&lt;?> iterator = messages.iterator();&#xD;
		while(iterator.hasNext()) {&#xD;
			Object tmp = iterator.next();&#xD;
             if(tmp instanceof ZESCQSMESSAGE) {&#xD;
                 ZESCQSMESSAGE msg = (ZESCQSMESSAGE)tmp;&#xD;
                 if(EsConstants.CQS_ERROR_PROCESS_STATE.equals(msg.getTYPE())) {&#xD;
                     list.add(msg);&#xD;
                 }&#xD;
             }&#xD;
		}			&#xD;
		&#xD;
		return list;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsmtrTEeWv0eZvzLc0yA" name="isSourceSystemWarnings" specification="_xRmRmtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsm9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
     if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
         ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
         return isWarning(out.getESREPLY().getPROCSTATE());&#xD;
     }else {&#xD;
         ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
         return isWarning(out.getESREPLY().getPROCSTATE());&#xD;
     }   &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsnNrTEeWv0eZvzLc0yA" name="getSourceSystemWarnings" specification="_xRmRnNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsndrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaRsntrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>SapSOAPReply reply = (SapSOAPReply) getSourceSystemResponse();&#xD;
     if(reply.getSoapCastorReply() instanceof ZESCONTRACTENTES10Response) {&#xD;
         ZESCONTRACTENTES10Response out = (ZESCONTRACTENTES10Response) reply.getSoapCastorReply();&#xD;
         &#xD;
         return getOnlySourceSystemWarnings(out.getESREPLY().getMESSAGES().getItem());&#xD;
     }else {&#xD;
         ZESCONTRACTENTBYSNES10Response out = (ZESCONTRACTENTBYSNES10Response) reply.getSoapCastorReply();&#xD;
         return getOnlySourceSystemWarnings(out.getESREPLY().getMESSAGES().getItem());&#xD;
     }   &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsn9rTEeWv0eZvzLc0yA" name="getOnlySourceSystemWarnings" specification="_xYp70NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsoNrTEeWv0eZvzLc0yA" name="messages" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsodrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaRsotrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>ArrayList&lt;ZESCQSMESSAGE> list = new ArrayList&lt;ZESCQSMESSAGE>();&#xD;
		Iterator&lt;?> iterator = messages.iterator();&#xD;
		while(iterator.hasNext()) {&#xD;
			Object tmp = iterator.next();&#xD;
             if(tmp instanceof ZESCQSMESSAGE) {&#xD;
                 ZESCQSMESSAGE msg = (ZESCQSMESSAGE) tmp;&#xD;
                 if(EsConstants.CQS_WARNING_PROCESS_STATE.equals(msg.getTYPE())) {&#xD;
                     list.add(msg);&#xD;
                 }&#xD;
             }   &#xD;
		}&#xD;
					&#xD;
		return list;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRso9rTEeWv0eZvzLc0yA" name="isSuccess" specification="_xRmRodrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRspNrTEeWv0eZvzLc0yA" name="proc_state">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRspdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if(proc_state == null) {&#xD;
			return true;&#xD;
		}&#xD;
		if(proc_state.equalsIgnoreCase(EsConstants.CQS_EMPTY_PROCESS_STATE)) {&#xD;
			return true;&#xD;
		}&#xD;
&#xD;
		if(proc_state.equalsIgnoreCase(EsConstants.CQS_SUCCESS_PROCESS_STATE)) {&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
		if(proc_state.equalsIgnoreCase(EsConstants.CQS_WARNING_PROCESS_STATE)) {&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
		if(proc_state.equalsIgnoreCase(EsConstants.CQS_ERROR_PROCESS_STATE)) {&#xD;
			return false;&#xD;
		}				&#xD;
			&#xD;
		return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsptrTEeWv0eZvzLc0yA" name="isWarning" specification="_xRmRpNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsp9rTEeWv0eZvzLc0yA" name="proc_state">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsqNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>// a Warning is a success.&#xD;
		if(proc_state != null) {&#xD;
			if(proc_state.equalsIgnoreCase(EsConstants.CQS_WARNING_PROCESS_STATE)) {&#xD;
				return true;&#xD;
			}&#xD;
		}&#xD;
			&#xD;
		return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsqdrTEeWv0eZvzLc0yA" name="getSourceSystemStatus" specification="_xRmRp9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsqtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if(_sourceSystemStatus != null) {&#xD;
     	return _sourceSystemStatus;&#xD;
     }else if(isSourceSystemUnavailable()) {&#xD;
     	return &quot;Unavailable&quot;;&#xD;
     	&#xD;
		}else if(getMappedErrors() != null &amp;&amp; getMappedErrors().size() >0) {&#xD;
&#xD;
     	return &quot;Error&quot;;&#xD;
     	&#xD;
     }else {&#xD;
     	if(getMappedReply() != null &amp;&amp; getMappedReply().getEsReplyChoice().getUnitList() != null) {&#xD;
     		return &quot;Unit List&quot;;&#xD;
     	}else {&#xD;
     		return &quot;Success&quot;;&#xD;
     	}&#xD;
     }&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsq9rTEeWv0eZvzLc0yA" name="setODSSucessStatus" specification="_xRmRqdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>_sourceSystemStatus = &quot;success&quot;;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsrNrTEeWv0eZvzLc0yA" name="setStandardizedProductHashMap" specification="_xYp719rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsrdrTEeWv0eZvzLc0yA" name="map" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>_standardizedProductHashMap = map;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsrtrTEeWv0eZvzLc0yA" name="getStandardizedProductHashMap" specification="_xRmRqtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsr9rTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _standardizedProductHashMap;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRssNrTEeWv0eZvzLc0yA" name="setReplyContext" specification="_xWpwudrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRssdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>_ctx= ctx;&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsstrTEeWv0eZvzLc0yA" name="getReplyContext" specification="_xRmRrNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRss9rTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _ctx;&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRstNrTEeWv0eZvzLc0yA" name="destroy" specification="_xRmRrdrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>super.destroy();&#xD;
		ESLog.debug(&quot;Destroy all, we finished using Context&quot;);&#xD;
		if(oHeadLocMap != null) {&#xD;
			oHeadLocMap.clear();&#xD;
		}&#xD;
		oHeadLocMap = null;&#xD;
		&#xD;
		if(_standardizedProductHashMap != null) {&#xD;
			_standardizedProductHashMap.clear();&#xD;
		}&#xD;
&#xD;
		_standardizedProductHashMap = null;&#xD;
		_sourceSystemStatus = null;&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRgLBdrTEeWv0eZvzLc0yA" name="isSourceSystemUnitList" method="_xaRsidrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRgLBtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRgLB9rTEeWv0eZvzLc0yA" name="getSourceSystemUnitList" method="_xaRsi9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYj1YdrTEeWv0eZvzLc0yA" type="_xYj1VdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRkNrTEeWv0eZvzLc0yA" name="isSourceSystemStandardReply" method="_xaRsjdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRmRkdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRktrTEeWv0eZvzLc0yA" name="getSourceSystemStandardReply" method="_xaRsj9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYj1YtrTEeWv0eZvzLc0yA" type="_xYj1VdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRk9rTEeWv0eZvzLc0yA" name="isSourceSystemError" method="_xaRskdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRmRlNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRldrTEeWv0eZvzLc0yA" name="getSourceSystemErrors" method="_xaRsk9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRmRmNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRmRmdrTEeWv0eZvzLc0yA" key="generic_container"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRmRltrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xRmRl9rTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRmtrTEeWv0eZvzLc0yA" name="isSourceSystemWarnings" method="_xaRsmtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xRmRm9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRnNrTEeWv0eZvzLc0yA" name="getSourceSystemWarnings" method="_xaRsnNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRmRn9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRmRoNrTEeWv0eZvzLc0yA" key="generic_container"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRmRndrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xRmRntrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRodrTEeWv0eZvzLc0yA" name="isSuccess" visibility="private" method="_xaRso9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad51drTEeWv0eZvzLc0yA">
                      <body>@param Process state (empty,w,e)&#xD;
	 * @retun a boolean</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRmRotrTEeWv0eZvzLc0yA" name="proc_state">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRmRo9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRpNrTEeWv0eZvzLc0yA" name="isWarning" visibility="private" method="_xaRsptrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad51trTEeWv0eZvzLc0yA">
                      <body>Tell if the process state is a  warning.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRmRpdrTEeWv0eZvzLc0yA" name="proc_state">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xRmRptrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRp9rTEeWv0eZvzLc0yA" name="getSourceSystemStatus" method="_xaRsqdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad519rTEeWv0eZvzLc0yA">
                      <body>get Source system status</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRmRqNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRqdrTEeWv0eZvzLc0yA" name="setODSSucessStatus" method="_xaRsq9rTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad52NrTEeWv0eZvzLc0yA">
                      <body>This is used by the ODS</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRqtrTEeWv0eZvzLc0yA" name="getStandardizedProductHashMap" method="_xaRsrtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad52trTEeWv0eZvzLc0yA">
                      <body>store the standard product hash map &#xD;
	 * if we add it</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp72trTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRrNrTEeWv0eZvzLc0yA" name="getReplyContext" method="_xaRsstrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWpwu9rTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRrdrTEeWv0eZvzLc0yA" name="destroy" method="_xaRstNrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xWpwudrTEeWv0eZvzLc0yA" name="setReplyContext" method="_xaRssNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xWpwutrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1V9rTEeWv0eZvzLc0yA" name="ContractTransaction" method="_xaRsgdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xYj1XtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xYj1X9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad50trTEeWv0eZvzLc0yA">
                      <body>@param config&#xD;
	 * @param failoverMode&#xD;
	 * @param sourceReply&#xD;
	 * @param functionName</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1WNrTEeWv0eZvzLc0yA" name="config" type="_xVy1JNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1WdrTEeWv0eZvzLc0yA" name="failoverMode">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1WtrTEeWv0eZvzLc0yA" name="sourceReply" type="_xYj1VdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1W9rTEeWv0eZvzLc0yA" name="functionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1XNrTEeWv0eZvzLc0yA" name="displayName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1XdrTEeWv0eZvzLc0yA" name="isLocal">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYj1YNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYj1Y9rTEeWv0eZvzLc0yA" name="getOnlySourceSystemErrors" visibility="private" method="_xaRsltrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xYj1Z9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xYj1aNrTEeWv0eZvzLc0yA" key="generic_container"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad509rTEeWv0eZvzLc0yA">
                      <body>Extract only the error out of the list of errors.&#xD;
	 * The warning will be extracted later on&#xD;
	 * The sucess messwage is discarded&#xD;
	 * @param the Collection&#xD;
	 * @return a new Collection</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYj1ZNrTEeWv0eZvzLc0yA" name="messages" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYj1ZdrTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xYj1ZtrTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp70NrTEeWv0eZvzLc0yA" name="getOnlySourceSystemWarnings" visibility="private" method="_xaRsn9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xYp71NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xYp71drTEeWv0eZvzLc0yA" key="generic_container"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad51NrTEeWv0eZvzLc0yA">
                      <body>Extract only the error out of the list of errors.&#xD;
	 * The warning will be extracted later on&#xD;
	 * The sucess messwage is discarded&#xD;
	 * @param the Collection&#xD;
	 * @return a new Collection</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp70drTEeWv0eZvzLc0yA" name="messages" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp70trTEeWv0eZvzLc0yA" type="_xWLPq9rTEeWv0eZvzLc0yA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xYp709rTEeWv0eZvzLc0yA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp719rTEeWv0eZvzLc0yA" name="setStandardizedProductHashMap" method="_xaRsrNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad52drTEeWv0eZvzLc0yA">
                      <body>store the standard product hash map &#xD;
	 * if we add it</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp72NrTEeWv0eZvzLc0yA" name="map" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRmRsdrTEeWv0eZvzLc0yA" name="ContractTransactionComposition">
                  <generalization xmi:id="_xWv3UdrTEeWv0eZvzLc0yA" general="_xRsYMNrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZg3ndrTEeWv0eZvzLc0yA" name="_instance" visibility="private" isStatic="true" type="_xRmRsdrTEeWv0eZvzLc0yA" association="_xbIoNdrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZg3ntrTEeWv0eZvzLc0yA" value="new ContractTransactionComposition()"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRstdrTEeWv0eZvzLc0yA" name="ContractTransactionComposition" specification="_xRmRstrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsttrTEeWv0eZvzLc0yA" type="_xRmRsdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRst9rTEeWv0eZvzLc0yA" name="getComposedReply" specification="_xYp73NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsuNrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsudrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRsutrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply finalReply = null;&#xD;
		EsReply odsReply = null;&#xD;
		EsReply odsciReply = null;&#xD;
		EsReply cqsReply = null;&#xD;
		SifException odsException = null;&#xD;
		SifException odsciException = null;&#xD;
		SifException cqsException = null;&#xD;
		/*&#xD;
		 * We have 2 groups of Transaction potentially, CQS and ODS&#xD;
		 * We need to compose one reply from CQS and one for ODS&#xD;
		 */&#xD;
		ESLog.debug(&quot;Composing reply&quot;);&#xD;
		try {&#xD;
			&#xD;
			odsReply = getODSEsReply(replies);			&#xD;
		}catch(SifException e) {&#xD;
			ESLog.debug(&quot;ODS reply is a SifException&quot; + e.getMessage());&#xD;
			odsException = e;			&#xD;
		}&#xD;
		&#xD;
		try {&#xD;
			&#xD;
			odsciReply = getODSCIEsReply(replies);			&#xD;
		}catch(SifException e) {&#xD;
			ESLog.debug(&quot;ODS Customer Indicator reply is a SifException&quot; + e.getMessage());&#xD;
			odsciException = e;			&#xD;
		}&#xD;
		&#xD;
		&#xD;
		try {&#xD;
			cqsReply = getCQSEsReply(replies,includeWorkings);&#xD;
		}catch(SifException e) {&#xD;
			ESLog.debug(&quot;CQS reply is a SifException&quot;  + e.getMessage());&#xD;
			cqsException = e;&#xD;
		}	&#xD;
		&#xD;
		/*&#xD;
		 * We should always have an answer as we first got the exection if any case&#xD;
		 * but we will generate a 9999 if we cannot find any reply&#xD;
		 * &#xD;
		 */&#xD;
		if((cqsReply == null) &amp;&amp; (odsReply == null) &amp;&amp;(odsException == null) &amp;&amp;(cqsException == null)) {&#xD;
			ESLog.debug(&quot;Internal error, no reply for cqs or ods, this is a bug&quot;);&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Composition of reply failed because there is no reply to compose&quot;);&#xD;
		}else if((cqsReply != null) &amp;&amp; (odsReply == null)) {&#xD;
			ESLog.debug(&quot;No ODS reply, we take CQS reply&quot;);&#xD;
			finalReply=cqsReply;&#xD;
			//add warning for ODS&#xD;
			if (odsException != null &amp;&amp; includeWorkings) {&#xD;
				WorkingMapper errorWork = new WorkingMapper(odsException.getErrorText(),EsConstants.ODS_SYSTEM_NAME);						&#xD;
				WorkingComplexType working = errorWork.map();&#xD;
				if(working != null) {&#xD;
					finalReply.getEsReplyChoice().getContractEntitlement().addWorking(working);&#xD;
				}&#xD;
			}&#xD;
		}else if((cqsReply == null) &amp;&amp; (odsReply != null)) {&#xD;
			ESLog.debug(&quot;No CQS reply, we take ODS reply&quot;);&#xD;
			finalReply=odsReply;&#xD;
			//				add warning for CQS&#xD;
			if(includeWorkings &amp;&amp; cqsException != null) {&#xD;
				&#xD;
				finalReply = addCQSNoReplyWorkings(finalReply,replies );	&#xD;
			}&#xD;
&#xD;
			&#xD;
		}else if (((cqsReply == null) &amp;&amp; (odsReply == null)) &amp;&amp; ((odsException != null) || (cqsException != null))) {&#xD;
			if (cqsException != null) &#xD;
				throw cqsException;&#xD;
			else&#xD;
				throw odsException;&#xD;
			&#xD;
		}else {&#xD;
			//In that case both reply are not null&#xD;
			//we have to merge the reply together&#xD;
			//For bysn case, we may have to &quot;merge&quot; them&#xD;
			ESLog.debug(&quot;Reply from both, they will be merge&quot;);&#xD;
			finalReply =  mergeCQSandODSreply(cqsReply, odsReply);&#xD;
		}&#xD;
		/*&#xD;
		 * If we had an exception we may have to add a warning&#xD;
		 */&#xD;
		if(cqsException != null) {&#xD;
			String unavailableRegionList = ContractErrorsProcessing.getInstance().getUnavailableRegionList(replies);&#xD;
			if(unavailableRegionList.trim().length() !=0) {&#xD;
				addSystemNotAvailableWarning(unavailableRegionList, finalReply);	&#xD;
			}&#xD;
		}&#xD;
		if(odsException !=null ){&#xD;
		    if((ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE+&quot;&quot;).equals(odsException.getErrorID())){&#xD;
		        addSystemNotAvailableWarning(EsConstants.ODS_SYSTEM_NAME, finalReply);&#xD;
		    }&#xD;
		}&#xD;
		//add warning for ODS Customer Indicator&#xD;
		if (odsciException != null &amp;&amp; includeWorkings) {&#xD;
			WorkingMapper errorWork = new WorkingMapper(odsciException.getErrorText(),EsConstants.ODSCI_SYSTEM_NAME);						&#xD;
			WorkingComplexType working = errorWork.map();&#xD;
			if(working != null) {&#xD;
				finalReply.getEsReplyChoice().getContractEntitlement().addWorking(working);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return finalReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsu9rTEeWv0eZvzLc0yA" name="addCQSNoReplyWorkings" specification="_xYp74NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsvNrTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsvdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsvtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>try {&#xD;
			ArrayList list = getOnlyCQSTransaction(replies);&#xD;
			Iterator iter = list.iterator();&#xD;
			while(iter.hasNext()) {&#xD;
				Transaction transCQS = (Transaction)iter.next();&#xD;
				WorkingComplexType working = ContractErrorsProcessing.getInstance().getErrorWorking(transCQS);&#xD;
				if(working != null) {&#xD;
					finalReply.getEsReplyChoice().getContractEntitlement().addWorking(working);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
		} catch (SifException e) {&#xD;
&#xD;
			ESLog.debug(&quot;Error while adding workings&quot;, e);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return finalReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsv9rTEeWv0eZvzLc0yA" name="mergeCQSandODSreply" specification="_xYp75NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRswNrTEeWv0eZvzLc0yA" name="cqsReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRswdrTEeWv0eZvzLc0yA" name="odsReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRswtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply finalReply = null;&#xD;
		if(cqsReply== null || odsReply ==null) {&#xD;
			if(cqsReply != null)&#xD;
				finalReply= cqsReply;&#xD;
			if(odsReply != null) &#xD;
				finalReply= odsReply;&#xD;
		}else  {&#xD;
			//We will then merge  everything except header&#xD;
			//So in other word we only map header&#xD;
			ContractEntitlementComplexType odsC = odsReply.getEsReplyChoice().getContractEntitlement();&#xD;
			ContractEntitlementComplexType cqsC = cqsReply.getEsReplyChoice().getContractEntitlement();&#xD;
			finalReply = cqsReply;&#xD;
			//Contact&#xD;
			if(odsC.getContactCount() != 0) {&#xD;
				HashMap mapContacts = new HashMap();&#xD;
				&#xD;
				if(cqsC.getContactCount() != 0) {&#xD;
					for(int i=0;i &lt; cqsC.getContactCount(); i++) {&#xD;
						mapContacts.put(cqsC.getContact(i).getSourcePersonID(),cqsC.getContact(i));&#xD;
					}&#xD;
				}&#xD;
				for(int i = 0; i&lt; odsC.getContactCount(); i++) {&#xD;
					if(!mapContacts.containsKey(odsC.getContact(i).getSourcePersonID())) {&#xD;
						cqsC.addContact(odsC.getContact(i));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			//Contract&#xD;
			if(odsC.getContractCount() != 0) {&#xD;
				for(int i = 0; i&lt; odsC.getContractCount(); i++) {&#xD;
					cqsC.addContract(odsC.getContract(i));&#xD;
				}&#xD;
			}			&#xD;
			&#xD;
			//Location&#xD;
			&#xD;
			if(odsC.getLocationCount() != 0) {&#xD;
				&#xD;
				HashMap mapLocations = new HashMap();&#xD;
				&#xD;
				if(cqsC.getLocationCount() != 0) {&#xD;
					for(int i=0;i &lt; cqsC.getLocationCount(); i++) {&#xD;
						mapLocations.put(cqsC.getLocation(i).getSourceCustomerID(),cqsC.getLocation(i));&#xD;
					}&#xD;
				}				&#xD;
				for(int i = 0; i&lt; odsC.getLocationCount(); i++) {&#xD;
					if(!mapLocations.containsKey(odsC.getLocation(i).getSourceCustomerID()))&#xD;
						cqsC.addLocation(odsC.getLocation(i));&#xD;
				}&#xD;
			}								&#xD;
			//OOSes&#xD;
			if(odsC.getOOSCount() != 0) {&#xD;
				HashMap mapOOSES = new HashMap();&#xD;
				&#xD;
				if(cqsC.getOOSCount() != 0) {&#xD;
					for(int i=0;i &lt; cqsC.getOOSCount(); i++) {&#xD;
						// WITS.1475: indexOutOfBounds exception!&#xD;
						mapOOSES.put(cqsC.getOOS(i).getOOSKey(),cqsC.getOOS(i));&#xD;
					}&#xD;
				}				&#xD;
				&#xD;
				for(int i = 0; i&lt; odsC.getOOSCount(); i++) {&#xD;
					//WITS.1481 Use OOSes from CQS if they are available and not from ODS &#xD;
					if(!mapOOSES.containsKey(odsC.getOOS(i).getOOSKey())) {&#xD;
						cqsC.addOOS(odsC.getOOS(i));&#xD;
					}&#xD;
				}&#xD;
			}					&#xD;
&#xD;
			//Workings&#xD;
			if(odsC.getWorkingCount() != 0) {&#xD;
				for(int i = 0; i&lt; odsC.getWorkingCount(); i++) {&#xD;
					cqsC.addWorking(odsC.getWorking(i));&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return finalReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsw9rTEeWv0eZvzLc0yA" name="calculateReplyHeaderFields" specification="_xYp76NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsxNrTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>/*&#xD;
      * &#xD;
      */&#xD;
     org.exolab.castor.types.Date overallContractStartDate = null;&#xD;
     org.exolab.castor.types.Date overallContractEndDate = null;&#xD;
     boolean isActiveContractEntitlement = false;&#xD;
		// used to calculate the max header end date&#xD;
     boolean firstContract = true;&#xD;
&#xD;
     if(finalReply != null) {&#xD;
	        if(finalReply.getEsReplyChoice().getContractEntitlement() !=null) {&#xD;
	        	ContractComplexType[] contracts= finalReply.getEsReplyChoice().getContractEntitlement().getContract();&#xD;
	        	&#xD;
	            // iterate over all contracts that already have an offer assigned&#xD;
	            for (int i = 0; i&lt;contracts.length;i++ ) {&#xD;
	                ContractComplexType c = (ContractComplexType)contracts[i];&#xD;
	                org.exolab.castor.types.Date startDate = null;&#xD;
	                org.exolab.castor.types.Date endDate = null;&#xD;
	&#xD;
	                Enumeration obligationHeaderEnum = c.enumerateObligationHeader();&#xD;
	                if (obligationHeaderEnum!=null) {&#xD;
	                    boolean firstObligation = true;&#xD;
	                    while (obligationHeaderEnum.hasMoreElements()) {&#xD;
	                        ObligationHeader oh = (ObligationHeader)&#xD;
	                                        obligationHeaderEnum.nextElement();&#xD;
	                        // min start date&#xD;
	                        startDate = DateHelper.minDate(startDate, oh.getHeaderStartDate());&#xD;
	&#xD;
	                        // max end date&#xD;
	                        // (will be null if at least one header end date is null)&#xD;
	                        if (firstObligation) {&#xD;
	                            endDate = oh.getHeaderEndDate();&#xD;
	                            firstObligation = false;&#xD;
	                        }&#xD;
	                        else {&#xD;
	                            endDate = DateHelper.maxDate(endDate, oh.getHeaderEndDate());&#xD;
	                        }&#xD;
	&#xD;
	&#xD;
	                    }&#xD;
	                }&#xD;
	&#xD;
	&#xD;
	                // global &quot;active entitlement flag&quot; for all contracts:&#xD;
	                // Shows whether any of the underlying contracts is active&#xD;
	                isActiveContractEntitlement = isActiveContractEntitlement || c.getActiveContractEntitlement();&#xD;
	&#xD;
	                // overallContractStartDate/overallContractEndDate&#xD;
	                overallContractStartDate = DateHelper.minDate(overallContractStartDate, startDate);&#xD;
	                if (firstContract) {&#xD;
	                    overallContractEndDate = endDate;&#xD;
	                    firstContract = false;&#xD;
	                }&#xD;
	                else {&#xD;
	                    overallContractEndDate = DateHelper.maxDate(overallContractEndDate, endDate);&#xD;
	                }&#xD;
	            }&#xD;
	        	&#xD;
	        }&#xD;
			&#xD;
			&#xD;
			&#xD;
	        finalReply.getEsReplyChoice().getContractEntitlement().setActiveContractEntitlement(isActiveContractEntitlement);&#xD;
			finalReply.getEsReplyChoice().getContractEntitlement().setOverallContractStartDate(overallContractStartDate);&#xD;
			finalReply.getEsReplyChoice().getContractEntitlement().setOverallContractEndDate(overallContractEndDate);&#xD;
     }&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsxdrTEeWv0eZvzLc0yA" name="merge2CQSContractReplies" specification="_xYp76trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsxtrTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsx9rTEeWv0eZvzLc0yA" name="esReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsyNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply replyReturned = null;&#xD;
&#xD;
		&#xD;
		if(finalReply== null &amp;&amp; esReply !=null) {&#xD;
			replyReturned= esReply;&#xD;
		}else  {&#xD;
			//We will then copy everything except header&#xD;
			//So in other word we only map header&#xD;
			if(esReply != null) {&#xD;
				ContractEntitlementComplexType finalC = finalReply.getEsReplyChoice().getContractEntitlement();&#xD;
				ContractEntitlementComplexType mergeC = esReply.getEsReplyChoice().getContractEntitlement();&#xD;
				if(finalC== null) {&#xD;
					if(mergeC != null) {&#xD;
						esReply.getEsReplyChoice().setContractEntitlement(mergeC);&#xD;
					}&#xD;
				}else if(mergeC != null) {&#xD;
					//Contact&#xD;
					if(mergeC.getContactCount() != 0) {&#xD;
						for(int i = 0; i&lt; mergeC.getContactCount(); i++) {&#xD;
							finalC.addContact(mergeC.getContact(i));&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					//Contract&#xD;
					if(mergeC.getContractCount() != 0) {&#xD;
						for(int i = 0; i&lt; mergeC.getContractCount(); i++) {&#xD;
							finalC.addContract(mergeC.getContract(i));&#xD;
						}&#xD;
					}			&#xD;
					&#xD;
					//Location&#xD;
					&#xD;
					if(mergeC.getLocationCount() != 0) {&#xD;
						for(int i = 0; i&lt; mergeC.getLocationCount(); i++) {&#xD;
							finalC.addLocation(mergeC.getLocation(i));&#xD;
						}&#xD;
					}								&#xD;
					//Obligation Header&#xD;
					if(mergeC.getOOSCount() != 0) {&#xD;
						for(int i = 0; i&lt; mergeC.getOOSCount(); i++) {&#xD;
							finalC.addOOS(mergeC.getOOS(i));&#xD;
						}&#xD;
					}					&#xD;
&#xD;
					//Workings&#xD;
					if(mergeC.getWorkingCount() != 0) {&#xD;
						for(int i = 0; i&lt; mergeC.getWorkingCount(); i++) {&#xD;
							finalC.addWorking(mergeC.getWorking(i));&#xD;
						}&#xD;
					}										&#xD;
					&#xD;
				} &#xD;
				&#xD;
				replyReturned = finalReply;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		return replyReturned;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsydrTEeWv0eZvzLc0yA" name="getCQSEsReply" specification="_xYp77trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsytrTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRsy9rTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRszNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>//The first thing that we do is to extract only the CQS transaction in a new table&#xD;
		ArrayList list = getOnlyCQSTransaction(trans);&#xD;
&#xD;
		//we create the final reply&#xD;
		EsReply finalReply= null;&#xD;
		/* WITS.1468 The workings which document error transactions&#xD;
		 * The workings for the successfully finished transactions were created while mapping*/		&#xD;
		TreeMap errorMaps = new TreeMap();&#xD;
		&#xD;
		&#xD;
		//We then go through the array&#xD;
		if(list != null) {&#xD;
			Iterator it = list.iterator();&#xD;
			//we then look if we don't only have errors&#xD;
			&#xD;
			if(ContractErrorsProcessing.getInstance().countSifException(list) == list.size()) {&#xD;
				throw ContractErrorsProcessing.getInstance().getHighestPriorityException(list);&#xD;
			}else {&#xD;
				&#xD;
				while(it.hasNext()) {&#xD;
					Object tmp = it.next();&#xD;
					if(tmp instanceof ContractTransaction)  {&#xD;
						ContractTransaction transCQS = (ContractTransaction) tmp;&#xD;
						if(transCQS.getMappedReply() != null) {&#xD;
							ESLog.debug(&quot;The mapped reply is not null, we will merge it with the final reply&quot;);&#xD;
							finalReply= merge2CQSContractReplies(finalReply, transCQS.getMappedReply());&#xD;
						}else {&#xD;
							if(includeWorking) {&#xD;
								WorkingComplexType working = ContractErrorsProcessing.getInstance().getErrorWorking(transCQS);&#xD;
								errorMaps.put(working.getWorkingName(), working);&#xD;
							}&#xD;
							&#xD;
						}&#xD;
					}else if (tmp instanceof ErrorTransaction) {&#xD;
						ErrorTransaction transCQS = (ErrorTransaction) tmp;&#xD;
&#xD;
						&#xD;
						WorkingComplexType working = ContractErrorsProcessing.getInstance().getErrorWorking(transCQS);&#xD;
						errorMaps.put(working.getWorkingName(), working);&#xD;
						&#xD;
					}&#xD;
&#xD;
				}&#xD;
				&#xD;
				//WITS.1468 Now we add the workings for the error transactions&#xD;
				if(includeWorking) {&#xD;
					for (int i=0;i&lt;finalReply.getEsReplyChoice().getContractEntitlement().getWorkingCount();i++) {&#xD;
						WorkingComplexType working = finalReply.getEsReplyChoice().getContractEntitlement().getWorking(i);&#xD;
						errorMaps.put(working.getWorkingName(), working);&#xD;
						finalReply.getEsReplyChoice().getContractEntitlement().removeWorking(working);&#xD;
					}&#xD;
					for (Iterator itWk=errorMaps.values().iterator(); itWk.hasNext();) {&#xD;
						WorkingComplexType sortWorking = (WorkingComplexType)itWk.next();&#xD;
						ESLog.debug(&quot;Error working: &quot; + sortWorking.getWorkingName() + &quot;, &quot; + sortWorking.getWorkingValue());			&#xD;
						finalReply.getEsReplyChoice().getContractEntitlement().addWorking(sortWorking);&#xD;
					}&#xD;
				}&#xD;
				//End WITS.1468				&#xD;
&#xD;
				&#xD;
				//we calculate the header fields now.&#xD;
				calculateReplyHeaderFields(finalReply); 				&#xD;
				&#xD;
			}&#xD;
			&#xD;
		}else {&#xD;
			ESLog.debug(&quot;No CQS reply, null will be returned.&quot;);&#xD;
		}&#xD;
		return finalReply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRszdrTEeWv0eZvzLc0yA" name="getInstance" specification="_xRmRttrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRsztrTEeWv0eZvzLc0yA" type="_xRmRsdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _instance;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRmRstrTEeWv0eZvzLc0yA" name="ContractTransactionComposition" visibility="protected" method="_xaRstdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRmRs9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRmRtNrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad529rTEeWv0eZvzLc0yA">
                      <body>Constructor</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xRmRtdrTEeWv0eZvzLc0yA" type="_xRmRsdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xRmRttrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaRszdrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRmRt9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRmRuNrTEeWv0eZvzLc0yA" key="synchronized"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xad539rTEeWv0eZvzLc0yA">
                      <body>get Instance singleton method</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xWv3UNrTEeWv0eZvzLc0yA" type="_xRmRsdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp73NrTEeWv0eZvzLc0yA" name="getComposedReply" method="_xaRst9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad53NrTEeWv0eZvzLc0yA">
                      <body>This method gets a compose reply from the list of replies&#xD;
	 * It only work for contract Reply&#xD;
	 * (non-Javadoc)&#xD;
	 * @see com.hp.es.service.orchestration.TransactionComposition#getComposedReply(com.hp.es.service.orchestration.Transaction[])</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp73drTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp73trTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYp739rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp74NrTEeWv0eZvzLc0yA" name="addCQSNoReplyWorkings" visibility="private" method="_xaRsu9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp74drTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp74trTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp749rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp75NrTEeWv0eZvzLc0yA" name="mergeCQSandODSreply" visibility="protected" method="_xaRsv9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp75drTEeWv0eZvzLc0yA" name="cqsReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp75trTEeWv0eZvzLc0yA" name="odsReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp759rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp76NrTEeWv0eZvzLc0yA" name="calculateReplyHeaderFields" visibility="protected" method="_xaRsw9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp76drTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp76trTEeWv0eZvzLc0yA" name="merge2CQSContractReplies" visibility="protected" method="_xaRsxdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad53drTEeWv0eZvzLc0yA">
                      <body>@param the final reply. It will be modified&#xD;
	 * @param the reply to merge with</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp769rTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp77NrTEeWv0eZvzLc0yA" name="esReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp77drTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp77trTEeWv0eZvzLc0yA" name="getCQSEsReply" visibility="protected" method="_xaRsydrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xad53trTEeWv0eZvzLc0yA">
                      <body>This method compose the CQS ES reply&#xD;
	 * @param the list of replies&#xD;
	 * @return the EsReply which can be null&#xD;
	 * @throws a SifException if appropriate</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xYp779rTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp78NrTEeWv0eZvzLc0yA" name="includeWorking">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYp78drTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xRsYMNrTEeWv0eZvzLc0yA" name="GenericContractTransactionComposition" isAbstract="true">
                  <ownedComment xmi:id="_xad54NrTEeWv0eZvzLc0yA">
                    <body>@author anvoi&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xYp8B9rTEeWv0eZvzLc0yA" general="_xWv3UtrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRsz9rTEeWv0eZvzLc0yA" name="GenericContractTransactionComposition" specification="_xRsYMdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs0NrTEeWv0eZvzLc0yA" type="_xRsYMNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRs0drTEeWv0eZvzLc0yA" name="addSystemNotAvailableWarning" specification="_xYp7-NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs0trTEeWv0eZvzLc0yA" name="unavailableRegionList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xaRs09rTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>//If there is any unavailibility issue.&#xD;
		if(( unavailableRegionList!= null) &amp;&amp; (unavailableRegionList.trim().length() >0)){&#xD;
			if(finalReply.getEsHeader().getWarnings() == null) {&#xD;
				ESLog.debug(&quot;A warning list is created&quot;);&#xD;
				finalReply.getEsHeader().setWarnings(new Warnings());&#xD;
			}&#xD;
			&#xD;
			finalReply.getEsHeader().getWarnings().addEIAError(ErrorFactory.getEIAError(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE, unavailableRegionList));&#xD;
			&#xD;
		}&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRs1NrTEeWv0eZvzLc0yA" name="getOnlyCQSTransaction" specification="_xYp7-9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs1drTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRs1trTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ArrayList transList = new ArrayList();&#xD;
&#xD;
		Iterator it = trans.iterator();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction tmp = (Transaction)it.next();&#xD;
			if(tmp != null &amp;&amp; tmp.getRegionDisplayName() != null &amp;&amp; tmp.getRegionDisplayName().startsWith(EsConstants.CQS_SYSTEM_NAME)) {&#xD;
				transList.add(tmp);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
&#xD;
		&#xD;
		&#xD;
		return transList; &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRs19rTEeWv0eZvzLc0yA" name="getOnlyODSTransaction" specification="_xYp7_trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs2NrTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRs2drTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ArrayList transList = new ArrayList();&#xD;
&#xD;
		Iterator it = trans.iterator();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction tmp = (Transaction)it.next();&#xD;
			if(tmp != null &amp;&amp; tmp.getRegionDisplayName() != null &amp;&amp; tmp.getRegionDisplayName().startsWith(EsConstants.ODS_SYSTEM_NAME)) {&#xD;
				transList.add(tmp);&#xD;
			}&#xD;
		}&#xD;
		return transList; &#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRs2trTEeWv0eZvzLc0yA" name="getODSEsReply" specification="_xYp8AdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs29rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRs3NrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;ENTER getODSEsReply().&quot;);&#xD;
		Transaction tr = null;&#xD;
		&#xD;
		Iterator it = replies.iterator();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction trTmp = (Transaction)it.next();&#xD;
			if(ESLog.isDebugLogEnabled()) {&#xD;
				if(trTmp!=null){&#xD;
				    ESLog.debug(&quot;regionName=[&quot;+trTmp.getRegionDisplayName()+&quot;]&quot;);&#xD;
				}else {&#xD;
				    &#xD;
				    		ESLog.debug(&quot; trTmp is null&quot;);&#xD;
				}&#xD;
			}	&#xD;
			&#xD;
			if(trTmp != null &amp;&amp; EsConstants.ODS_SYSTEM_NAME.equalsIgnoreCase(trTmp.getRegionDisplayName())) {&#xD;
				tr= trTmp;				&#xD;
			}&#xD;
		}&#xD;
		if( tr != null) {&#xD;
			if(tr.getMappedErrors() != null &amp;&amp; tr.getMappedErrors().size() != 0) {&#xD;
				throw ContractErrorsProcessing.getInstance().getHighestPriorityException(tr);&#xD;
			}&#xD;
			return tr.getMappedReply();&#xD;
		}&#xD;
		//we return null in that case&#xD;
		return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaRs3drTEeWv0eZvzLc0yA" name="getODSCIEsReply" specification="_xYp8BNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xaRs3trTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xaRs39rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>Transaction tr = null;&#xD;
		&#xD;
		Iterator it = replies.iterator();&#xD;
		while(it.hasNext()) {&#xD;
			Transaction trTmp = (Transaction)it.next();&#xD;
			if(trTmp != null &amp;&amp; trTmp.getRegionDisplayName() != null &amp;&amp; trTmp.getRegionDisplayName().equalsIgnoreCase(EsConstants.ODSCI_SYSTEM_NAME)) {&#xD;
				tr= trTmp;				&#xD;
			}&#xD;
		}&#xD;
		if( tr != null) {&#xD;
			if(tr.getMappedErrors() != null &amp;&amp; tr.getMappedErrors().size() != 0) {&#xD;
				&#xD;
			&#xD;
				throw ContractErrorsProcessing.getInstance().getHighestPriorityException(tr);&#xD;
			}&#xD;
			return tr.getMappedReply();&#xD;
		}&#xD;
		//we return null in that case&#xD;
		return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xRsYMdrTEeWv0eZvzLc0yA" name="GenericContractTransactionComposition" visibility="protected" method="_xaRsz9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xRsYMtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xRsYM9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xRsYNNrTEeWv0eZvzLc0yA" type="_xRsYMNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp78trTEeWv0eZvzLc0yA" name="getComposedReply" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp789rTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp79NrTEeWv0eZvzLc0yA" name="includeWorkings">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYp79drTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp79trTEeWv0eZvzLc0yA" name="calculateReplyHeaderFields" visibility="protected" isAbstract="true">
                    <ownedParameter xmi:id="_xYp799rTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp7-NrTEeWv0eZvzLc0yA" name="addSystemNotAvailableWarning" visibility="protected" method="_xaRs0drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp7-drTEeWv0eZvzLc0yA" name="unavailableRegionList">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xYp7-trTEeWv0eZvzLc0yA" name="finalReply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp7-9rTEeWv0eZvzLc0yA" name="getOnlyCQSTransaction" visibility="protected" method="_xaRs1NrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp7_NrTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp7_drTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp7_trTEeWv0eZvzLc0yA" name="getOnlyODSTransaction" visibility="protected" method="_xaRs19rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp7_9rTEeWv0eZvzLc0yA" name="trans" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp8ANrTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp8AdrTEeWv0eZvzLc0yA" name="getODSEsReply" visibility="protected" method="_xaRs2trTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp8AtrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp8A9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xYp8BNrTEeWv0eZvzLc0yA" name="getODSCIEsReply" visibility="protected" method="_xaRs3drTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xYp8BdrTEeWv0eZvzLc0yA" name="replies" type="_xVy1INrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xYp8BtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xYj1VdrTEeWv0eZvzLc0yA" name="Object"/>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbChktrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChk9rTEeWv0eZvzLc0yA _xZaw1drTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbChk9rTEeWv0eZvzLc0yA" name="" type="_xRT9sNrTEeWv0eZvzLc0yA" association="_xbChktrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbChldrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChltrTEeWv0eZvzLc0yA _xZaw2NrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbChltrTEeWv0eZvzLc0yA" name="" type="_xRT9udrTEeWv0eZvzLc0yA" association="_xbChldrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbChmNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChmdrTEeWv0eZvzLc0yA _xZaw29rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbChmdrTEeWv0eZvzLc0yA" name="" type="_xRT9udrTEeWv0eZvzLc0yA" association="_xbChmNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoEdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoEtrTEeWv0eZvzLc0yA _xZaw3trTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoEtrTEeWv0eZvzLc0yA" name="" type="_xRT9udrTEeWv0eZvzLc0yA" association="_xbIoEdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoFNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoFdrTEeWv0eZvzLc0yA _xZaw_9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoFdrTEeWv0eZvzLc0yA" name="" type="_xRT9vdrTEeWv0eZvzLc0yA" association="_xbIoFNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoF9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoGNrTEeWv0eZvzLc0yA _xZaxDtrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoGNrTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoF9rTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoGtrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoG9rTEeWv0eZvzLc0yA _xZg3c9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoG9rTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoGtrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoHdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoHtrTEeWv0eZvzLc0yA _xZg3d9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoHtrTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoHdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoINrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoIdrTEeWv0eZvzLc0yA _xZg3etrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoIdrTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoINrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoI9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoJNrTEeWv0eZvzLc0yA _xZg3fdrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoJNrTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoI9rTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoJtrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoJ9rTEeWv0eZvzLc0yA _xZg3htrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoJ9rTEeWv0eZvzLc0yA" name="" type="_xRaEUNrTEeWv0eZvzLc0yA" association="_xbIoJtrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoKdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoKtrTEeWv0eZvzLc0yA _xZg3j9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoKtrTEeWv0eZvzLc0yA" name="" type="_xRgK8NrTEeWv0eZvzLc0yA" association="_xbIoKdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoLNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoLdrTEeWv0eZvzLc0yA _xZg3ktrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoLdrTEeWv0eZvzLc0yA" name="" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xbIoLNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoL9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoMNrTEeWv0eZvzLc0yA _xZg3mNrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoMNrTEeWv0eZvzLc0yA" name="" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xbIoL9rTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoMtrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoM9rTEeWv0eZvzLc0yA _xZg3m9rTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoM9rTEeWv0eZvzLc0yA" name="" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xbIoMtrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_xbIoNdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbIoNtrTEeWv0eZvzLc0yA _xZg3ndrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xbIoNtrTEeWv0eZvzLc0yA" name="" type="_xRmRsdrTEeWv0eZvzLc0yA" association="_xbIoNdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xM_eYNrTEeWv0eZvzLc0yA" name="integration">
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rw9rTEeWv0eZvzLc0yA" name="CQSGetContractBySNIntegration">
                  <ownedComment xmi:id="_xaXzddrTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xVy1GNrTEeWv0eZvzLc0yA" general="_xP8r09rTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5R_trTEeWv0eZvzLc0yA" name="CQSGetContractBySNIntegration" specification="_xP8rxNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5R_9rTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SANrTEeWv0eZvzLc0yA" type="_xP8rw9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(regionName);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SAdrTEeWv0eZvzLc0yA" name="doContractIntegration" specification="_xXgsh9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SAtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SA9rTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SBNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Mapping ES request to CQS request&quot;);&#xD;
		// map ES request to CQS request&#xD;
		Object cqsRequest = mapEsRequest2CQSRequest(request);&#xD;
		&#xD;
		// pass request to the region and get the result&#xD;
		Transaction transaction = null;&#xD;
		try {&#xD;
			ESLog.debug(&quot;Send request to CQS using Region: &quot; + _region.getConfiguration().getRegionName()); &#xD;
			transaction =  _region.execute(EsConstants.SAP_FUNCTION_NAME_CQS_CONTRACT_ENT_BYSN, cqsRequest, getRegionDisplayName(),isLocal(),handler);				&#xD;
		} catch (Exception e) {&#xD;
			if(ESLog.isDebugLogEnabled())&#xD;
				ESLog.debug(&quot;Exception while connecting to CQS&quot;, e);&#xD;
			ESLog.error(&quot;Exception while connecting to CQS &quot; + e.getMessage());&#xD;
			if( e instanceof SifException) {&#xD;
				throw (SifException) e;&#xD;
			}			&#xD;
         throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR, &#xD;
         		&quot;Exception while connecting to CQS&quot;, e.toString());&#xD;
		}&#xD;
				&#xD;
		// Check which reply we have error, unit list, or normal reply&#xD;
		if(transaction.isSourceSystemError()) {&#xD;
			// CQS ERRORS&#xD;
			mapSourceSystemError2ComposedErrors((ContractTransaction)transaction, request);				&#xD;
			return (ContractTransaction)transaction;&#xD;
		} else if (transaction instanceof ErrorTransaction) {&#xD;
			ESLog.debug(&quot;We have an error ...&quot;);&#xD;
			// ERROR&#xD;
			// There is no need to do anything here, it will be done in the composition layer&#xD;
			// so we simply return the transaction&#xD;
			&#xD;
			return mapErrorTransaction2ComposedErrors(EsConstants.SAP_FUNCTION_NAME_CQS_CONTRACT_ENT_BYSN,(ErrorTransaction)transaction);				&#xD;
		} else if (transaction.isSourceSystemUnitList()) {&#xD;
			ESLog.debug(&quot;We have a reply ...&quot;);&#xD;
			// UNIT LIST&#xD;
			mapCQSUnitList2EsReply((ContractTransaction)transaction, request);				&#xD;
			return (ContractTransaction)transaction;&#xD;
		} else  {&#xD;
			ESLog.debug(&quot;We have a reply ...&quot;);&#xD;
			// NORMAL REPLY&#xD;
			mapCQSReply2EsReply((ContractTransaction)transaction, request);				&#xD;
			return (ContractTransaction)transaction;&#xD;
		}		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SBdrTEeWv0eZvzLc0yA" name="mapCQSUnitList2EsReply" specification="_xXgsi9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SBtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SB9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;start&quot;);&#xD;
		UnitListMapper mapper = UnitListMapper.getInstance(transaction);&#xD;
		&#xD;
		try {&#xD;
			ESLog.debug(&quot;Creating the reply structure&quot;);&#xD;
			EsReply reply = new EsReply();&#xD;
			reply.setEsHeader(new EsHeader());&#xD;
			reply.getEsHeader().setInputRequest(request);&#xD;
			ESLog.debug(&quot;Warnings will be mapped&quot;);&#xD;
			reply.getEsHeader().setWarnings(mapWarnings(transaction));&#xD;
			reply.setEsReplyChoice(new EsReplyChoice());&#xD;
			ESLog.debug(&quot;A unit list reply will be mapped&quot;);&#xD;
			reply.getEsReplyChoice().setUnitList(mapper.map());&#xD;
			/* WITS Entitlement 1467, 1472: &#xD;
			 * The reply didn't contain the unit list */&#xD;
			transaction.setMappedReply(reply);&#xD;
			&#xD;
		}catch(MappingException e) {&#xD;
			ESLog.info(&quot;Exception while mapping&quot;, e);&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;&quot;);&#xD;
		}&#xD;
		&#xD;
		ESLog.debug(&quot;end&quot;);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SCNrTEeWv0eZvzLc0yA" name="mapCQSReply2EsReply" specification="_xXgsjtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SCdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SCtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;start&quot;);&#xD;
		&#xD;
&#xD;
		try {&#xD;
			//&#xD;
			//This is in order to be able to merge correctly&#xD;
			EsReplyContext ctx = new EsReplyContext(new OutputDetails(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest()));&#xD;
			CombinedUnitEntitlementMapper mapper =  CombinedUnitEntitlementMapper.getInstance(transaction, request, ctx);&#xD;
			ESLog.debug(&quot;Creating the reply structure&quot;);&#xD;
			EsReply reply = new EsReply();&#xD;
			reply.setEsHeader(new EsHeader());&#xD;
			reply.getEsHeader().setInputRequest(request);&#xD;
			ESLog.debug(&quot;Warnings will be mapped&quot;);&#xD;
			reply.getEsHeader().setWarnings(mapWarnings(transaction));&#xD;
			reply.setEsReplyChoice(new EsReplyChoice());&#xD;
			ESLog.debug(&quot;A CombinedUnitEntitlement will be mapped&quot;);&#xD;
			reply.getEsReplyChoice().setCombinedUnitEntitlement(mapper.map());&#xD;
			if(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest().getIncludeWorkings()) {&#xD;
				reply.getEsReplyChoice().getCombinedUnitEntitlement().addWorking(mapWorking(transaction));&#xD;
			}&#xD;
			transaction.setMappedReply(reply);&#xD;
			transaction.setReplyContext(ctx);&#xD;
			&#xD;
		}catch(MappingException e) {&#xD;
			ESLog.info(&quot;Exception while mapping&quot;, e);&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;&quot;);&#xD;
		}&#xD;
		&#xD;
		ESLog.debug(&quot;end&quot;);		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SC9rTEeWv0eZvzLc0yA" name="mapEsRequest2CQSRequest" specification="_xXmy8trTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SDNrTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SDdrTEeWv0eZvzLc0yA" type="_xXmy8NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return CQSBySNRequestMapper.getInstance().map(esRequest);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xP8rxNrTEeWv0eZvzLc0yA" name="CQSGetContractBySNIntegration" method="_xZ5R_trTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xP8rxtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xP8rx9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xP8rxdrTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xP8ryNrTEeWv0eZvzLc0yA" type="_xP8rw9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsh9rTEeWv0eZvzLc0yA" name="doContractIntegration" method="_xZ5SAdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsiNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsidrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsitrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsi9rTEeWv0eZvzLc0yA" name="mapCQSUnitList2EsReply" visibility="private" method="_xZ5SBdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsjNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgsjdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXgsjtrTEeWv0eZvzLc0yA" name="mapCQSReply2EsReply" visibility="protected" method="_xZ5SCNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXgsj9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXgskNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmy8trTEeWv0eZvzLc0yA" name="mapEsRequest2CQSRequest" method="_xZ5SC9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmy89rTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmy9NrTEeWv0eZvzLc0yA" type="_xXmy8NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_xM_eYdrTEeWv0eZvzLc0yA" name="mapping">
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQI5F9rTEeWv0eZvzLc0yA" name="AppliesToMapper" visibility="package" isAbstract="true">
                    <ownedComment xmi:id="_xaXzhtrTEeWv0eZvzLc0yA">
                      <body>@author anvoi&#xD;
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZIc8NrTEeWv0eZvzLc0yA" name="_appl" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xawNkNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc8trTEeWv0eZvzLc0yA" name="_oosMapbyOOSKey" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xawNk9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc9NrTEeWv0eZvzLc0yA" name="_oosKeyListMapbyOOSGroupId" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xawNltrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc9trTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xawNmdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc-NrTEeWv0eZvzLc0yA" name="OOS_TYPE" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZIc-drTEeWv0eZvzLc0yA" value="&quot;OOS&quot;"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sa9rTEeWv0eZvzLc0yA" name="AppliesToMapper" specification="_xXs5rdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SbNrTEeWv0eZvzLc0yA" name="appl" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SbdrTEeWv0eZvzLc0yA" name="_generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SbtrTEeWv0eZvzLc0yA" name="oosMapbyOOSKey" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5Sb9rTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5ScNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5ScdrTEeWv0eZvzLc0yA" type="_xQI5F9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
		_appl=appl;&#xD;
		_oosMapbyOOSKey = oosMapbyOOSKey;&#xD;
		_oosKeyListMapbyOOSGroupId = oosKeyListMapbyOOSGroupId;&#xD;
		_ctx = ctx;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SctrTEeWv0eZvzLc0yA" name="getOOSKeyListForOOSGroupId" specification="_xQI5G9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5Sc9rTEeWv0eZvzLc0yA" name="object_ref_key">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ5SdNrTEeWv0eZvzLc0yA" type="_xV47v9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return (ArrayList) _oosKeyListMapbyOOSGroupId.get(object_ref_key);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SddrTEeWv0eZvzLc0yA" name="getOOS" specification="_xQI5HdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SdtrTEeWv0eZvzLc0yA" name="object_ref_key">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ5Sd9rTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return (OOSComplexType)_oosMapbyOOSKey.get(object_ref_key);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQI5GNrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true">
                      <ownedParameter xmi:id="_xQI5GdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQI5GtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xXs5ttrTEeWv0eZvzLc0yA" type="_xVCAFdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQI5G9rTEeWv0eZvzLc0yA" name="getOOSKeyListForOOSGroupId" visibility="protected" isLeaf="true" method="_xZ5SctrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQI5HNrTEeWv0eZvzLc0yA" name="object_ref_key">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xXs5t9rTEeWv0eZvzLc0yA" type="_xV47v9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQI5HdrTEeWv0eZvzLc0yA" name="getOOS" visibility="protected" isLeaf="true" method="_xZ5SddrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQI5HtrTEeWv0eZvzLc0yA" name="object_ref_key">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xXs5uNrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXs5rdrTEeWv0eZvzLc0yA" name="AppliesToMapper" visibility="package" method="_xZ5Sa9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXs5s9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXs5tNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXs5rtrTEeWv0eZvzLc0yA" name="appl" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5r9rTEeWv0eZvzLc0yA" name="_generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5sNrTEeWv0eZvzLc0yA" name="oosMapbyOOSKey" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5sdrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5strTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5tdrTEeWv0eZvzLc0yA" type="_xQI5F9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQI5H9rTEeWv0eZvzLc0yA" name="CQSBySNRequestMapper" isAbstract="true">
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SeNrTEeWv0eZvzLc0yA" name="CQSBySNRequestMapper" specification="_xQI5INrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SedrTEeWv0eZvzLc0yA" type="_xQI5H9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SetrTEeWv0eZvzLc0yA" name="getInstance" specification="_xQO_oNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5Se9rTEeWv0eZvzLc0yA" type="_xQI5H9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroCQSBySNRequestMapper();&#xD;
&#xD;
     &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQI5INrTEeWv0eZvzLc0yA" name="CQSBySNRequestMapper" visibility="package" method="_xZ5SeNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xQI5IdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xQI5ItrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xQI5I9rTEeWv0eZvzLc0yA" type="_xQI5H9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQO_oNrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xZ5SetrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xV47wdrTEeWv0eZvzLc0yA" type="_xQI5H9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXs5udrTEeWv0eZvzLc0yA" name="map" isAbstract="true">
                      <ownedParameter xmi:id="_xXs5utrTEeWv0eZvzLc0yA" name="input" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXs5u9rTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQO_odrTEeWv0eZvzLc0yA" name="CQSRequestMapper" isAbstract="true">
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SfNrTEeWv0eZvzLc0yA" name="CQSRequestMapper" specification="_xQO_otrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SfdrTEeWv0eZvzLc0yA" type="_xQO_odrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SftrTEeWv0eZvzLc0yA" name="getInstance" specification="_xQO_ptrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5Sf9rTEeWv0eZvzLc0yA" type="_xQO_odrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroCQSRequestMapper();&#xD;
&#xD;
     &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQO_otrTEeWv0eZvzLc0yA" name="CQSRequestMapper" visibility="protected" method="_xZ5SfNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xQO_o9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xQO_pNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xQO_pdrTEeWv0eZvzLc0yA" type="_xQO_odrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQO_ptrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xZ5SftrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xV47wtrTEeWv0eZvzLc0yA" type="_xQO_odrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXs5vNrTEeWv0eZvzLc0yA" name="map" isAbstract="true">
                      <ownedParameter xmi:id="_xXs5vdrTEeWv0eZvzLc0yA" name="input" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAMNrTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQO_p9rTEeWv0eZvzLc0yA" name="CombinedUnitEntitlementMapper" isAbstract="true">
                    <ownedComment xmi:id="_xaXzh9rTEeWv0eZvzLc0yA">
                      <body>@author ANVOI&#xD;
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZIc-trTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xawNnNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc_NrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xawNn9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIc_trTEeWv0eZvzLc0yA" name="_request" visibility="protected" type="_xVUUANrTEeWv0eZvzLc0yA" association="_xawNotrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdANrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xawNpdrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SgNrTEeWv0eZvzLc0yA" name="CombinedUnitEntitlementMapper" specification="_xXzAMdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SgdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SgtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5Sg9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5ShNrTEeWv0eZvzLc0yA" type="_xQO_p9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
		_transaction = transaction;&#xD;
		_XMLIdGenerator = XMLIdGenerator.getXMLIdGenerator();&#xD;
		_request = request;&#xD;
		_ctx = ctx;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5ShdrTEeWv0eZvzLc0yA" name="mapNOosesToOne" specification="_xXzAOdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5ShtrTEeWv0eZvzLc0yA" name="types" type="_xVCAN9rTEeWv0eZvzLc0yA">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ5Sh9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ5SiNrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>if (types == null)&#xD;
         return null;&#xD;
		&#xD;
	    TreeMap&lt;String, OOSComplexType> toSort = new TreeMap&lt;String, OOSComplexType>();&#xD;
		for (OOSComplexType oosTmp : types) {&#xD;
         if (oosTmp.getOOSKey() != null) {&#xD;
             toSort.put(oosTmp.getOOSKey(), oosTmp);&#xD;
         }&#xD;
     }&#xD;
		OOSComplexType oos =null;&#xD;
     if (toSort.size()>0 &amp;&amp; toSort.firstKey() != null) {&#xD;
         oos = toSort.get(toSort.firstKey());&#xD;
     }&#xD;
		&#xD;
		return oos;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SidrTEeWv0eZvzLc0yA" name="getInstance" specification="_xXzAPdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SitrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5Si9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SjNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SjdrTEeWv0eZvzLc0yA" type="_xQO_p9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroCombinedUnitEntitlementMapper(transaction,  request, ctx);&#xD;
&#xD;
     &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQO_qNrTEeWv0eZvzLc0yA" name="map" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAONrTEeWv0eZvzLc0yA" type="_xV47uNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAMdrTEeWv0eZvzLc0yA" name="CombinedUnitEntitlementMapper" visibility="package" method="_xZ5SgNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXzANdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXzANtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXzAMtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAM9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzANNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAN9rTEeWv0eZvzLc0yA" type="_xQO_p9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAOdrTEeWv0eZvzLc0yA" name="mapNOosesToOne" visibility="protected" isLeaf="true" method="_xZ5ShdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAOtrTEeWv0eZvzLc0yA" name="types" type="_xVCAN9rTEeWv0eZvzLc0yA">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xXzAPNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xXzAO9rTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAPdrTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xZ5SidrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAPtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAP9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAQNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAQdrTEeWv0eZvzLc0yA" type="_xQO_p9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQO_qdrTEeWv0eZvzLc0yA" name="ContactMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZIdAtrTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xawNqNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdBNrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xawNq9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdBtrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xawNrtrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SjtrTEeWv0eZvzLc0yA" name="ContactMapper" specification="_xXzAQ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5Sj9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SkNrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SkdrTEeWv0eZvzLc0yA" type="_xQO_qdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator;&#xD;
     _ctx = null;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SktrTEeWv0eZvzLc0yA" name="ContactMapper" specification="_xXzASdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5Sk9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SlNrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SldrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SltrTEeWv0eZvzLc0yA" type="_xQO_qdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator;&#xD;
     _ctx = ctx;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQO_qtrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQO_q9rTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQO_rNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAQ9rTEeWv0eZvzLc0yA" name="ContactMapper" visibility="package" method="_xZ5SjtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXzARtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXzAR9rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXzARNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzARdrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzASNrTEeWv0eZvzLc0yA" type="_xQO_qdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzASdrTEeWv0eZvzLc0yA" name="ContactMapper" method="_xZ5SktrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXzATdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXzATtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXzAStrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAS9rTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzATNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAT9rTEeWv0eZvzLc0yA" type="_xQO_qdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQO_rtrTEeWv0eZvzLc0yA" name="ContractEntitlementMapper" isAbstract="true">
                    <ownedAttribute xmi:id="_xZIdCNrTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xawNsdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdCtrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xawNtNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdDNrTEeWv0eZvzLc0yA" name="_request" visibility="protected" type="_xVUUANrTEeWv0eZvzLc0yA" association="_xa2UMdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdDtrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xa2UNNrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sl9rTEeWv0eZvzLc0yA" name="ContractEntitlementMapper" specification="_xXzAUNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SmNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SmdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SmtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5Sm9rTEeWv0eZvzLc0yA" type="_xQO_rtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator.getXMLIdGenerator();&#xD;
     _request = request;&#xD;
     _ctx = ctx;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SnNrTEeWv0eZvzLc0yA" name="createUniqueOffersAndDeliverables" specification="_xXzAWNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SndrTEeWv0eZvzLc0yA" name="calculateUniqueDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ5SntrTEeWv0eZvzLc0yA" name="result" type="_xVy1HtrTEeWv0eZvzLc0yA"/>
                      <language>java</language>
                      <body>org.exolab.castor.types.Date date = null;&#xD;
     // iterate over all contracts that already have the offers assigned&#xD;
 	for (int itContract=0; itContract &lt; result.getContractCount(); itContract++ ) {&#xD;
 		ESLog.debug(&quot;Map Unique Offers for Contract &quot; + result.getContract(itContract).getSvcAgreementID());&#xD;
         ContractComplexType contract = (ContractComplexType)result.getContract(itContract);&#xD;
         Enumeration allOffersEnum = contract.enumerateOffer(); &#xD;
         if (allOffersEnum!=null) {&#xD;
         	ESLog.debug(&quot;Created enumeration for offers&quot;);&#xD;
             TreeMap uniqueOffers = new TreeMap();&#xD;
             TreeMap uniqueDeliverablesForOfferCode = new TreeMap();&#xD;
&#xD;
             while (allOffersEnum.hasMoreElements()) {&#xD;
             	OfferComplexType offer = (OfferComplexType)allOffersEnum.nextElement();&#xD;
                 ESLog.debug(&quot;... check offer code &quot; + offer.getOfferCode());&#xD;
                 UniqueOffer tmp = (UniqueOffer)uniqueOffers.get(offer.getOfferCode());&#xD;
                 if (tmp==null) {&#xD;
                     // it is the first offer for that offer code&#xD;
                 	ESLog.debug(&quot;... Unique Offer &quot; + offer.getOfferCode());&#xD;
                     tmp = new UniqueOffer();&#xD;
                     tmp.setOfferCode(offer.getOfferCode());&#xD;
                     tmp.setOfferDescription(offer.getOfferDescription());&#xD;
                     tmp.setSvcProductType(offer.getSvcProductType());&#xD;
                     tmp.setServiceStartDate(getServiceStartDate(null, offer));&#xD;
                     tmp.setServiceEndDate(getServiceEndDate(null, offer));&#xD;
                     uniqueOffers.put(offer.getOfferCode(), tmp);&#xD;
                 }&#xD;
                 else {&#xD;
                     // take the existin unique offer and update the dates&#xD;
                     tmp.setServiceStartDate(getServiceStartDate(tmp, offer));&#xD;
                     tmp.setServiceEndDate(getServiceEndDate(tmp, offer));&#xD;
                 }&#xD;
&#xD;
                 // now create the unique deliverables for the offer code&#xD;
                 if (calculateUniqueDeliverables) {&#xD;
                     TreeMap uniqueDeliverables = (TreeMap)&#xD;
                         uniqueDeliverablesForOfferCode.get(offer.getOfferCode());&#xD;
                     if (uniqueDeliverables==null) {&#xD;
                     	uniqueDeliverables = new TreeMap();&#xD;
                         uniqueDeliverablesForOfferCode.put(offer.getOfferCode(),&#xD;
                                                            uniqueDeliverables);&#xD;
                     }&#xD;
&#xD;
                     Enumeration delivEnum = offer.enumerateDeliverable();&#xD;
                     while (delivEnum.hasMoreElements()) {&#xD;
                         Deliverable deliv = (Deliverable)delivEnum.nextElement();&#xD;
                         UniqueDeliverable ud = (UniqueDeliverable)&#xD;
                                     uniqueDeliverables.get(deliv.getDelivCode());&#xD;
                         if (ud==null) {&#xD;
                         	ESLog.debug(&quot;... Unique Deliverable &quot; + deliv.getDelivCode());&#xD;
                             ud = new UniqueDeliverable();&#xD;
                             // not set according to definition in SRS&#xD;
                             // ud.setAvailableQuantity(d.getAvailableQuantity());&#xD;
                             ud.setDelivCode(deliv.getDelivCode());&#xD;
                             ud.setDelivName(deliv.getDelivName());&#xD;
                             ud.setDelivValue(deliv.getDelivValue());&#xD;
                             uniqueDeliverables.put(ud.getDelivCode(), ud);&#xD;
                         }&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // now put the unique offeres and deliverables into the contract&#xD;
             for (Iterator itUo=uniqueOffers.values().iterator(); itUo.hasNext();) {&#xD;
                 UniqueOffer uniqueOffer = (UniqueOffer)itUo.next();&#xD;
                 TreeMap uniqueDeliverables = (TreeMap)&#xD;
                         uniqueDeliverablesForOfferCode.get(uniqueOffer.getOfferCode());&#xD;
                 if (uniqueDeliverables!=null) {&#xD;
                     for (Iterator itUd=uniqueDeliverables.values().iterator(); itUd.hasNext();) {&#xD;
                     	uniqueOffer.addUniqueDeliverable((UniqueDeliverable)itUd.next());&#xD;
                     }&#xD;
                 }&#xD;
                 contract.addUniqueOffer(uniqueOffer);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sn9rTEeWv0eZvzLc0yA" name="getServiceStartDate" specification="_xXzAW9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SoNrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SodrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SotrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>org.exolab.castor.types.Date date = null;&#xD;
     // find the earlies start date from all appliesTo of this offer&#xD;
     if (offer!=null &amp;&amp; offer.enumerateAppliesTo()!=null) {&#xD;
         Enumeration enumeration = offer.enumerateAppliesTo();&#xD;
         while (enumeration.hasMoreElements()) {&#xD;
             AppliesTo a = (AppliesTo)enumeration.nextElement();&#xD;
             if (a.getStartDate()!=null) {&#xD;
                 if (date==null || date.compareTo(a.getStartDate())==&#xD;
                                 org.exolab.castor.types.DateTimeBase.GREATER_THAN) {&#xD;
                     date = a.getStartDate();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (uniqueOffer!=null) {&#xD;
         return minDate(date, uniqueOffer.getServiceStartDate());&#xD;
     }&#xD;
     return date;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5So9rTEeWv0eZvzLc0yA" name="getServiceEndDate" specification="_xXzAX9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SpNrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SpdrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SptrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>org.exolab.castor.types.Date date = null;&#xD;
     // find the earlies end date from all appliesTo of this offer&#xD;
     if (offer!=null &amp;&amp; offer.enumerateAppliesTo()!=null) {&#xD;
         Enumeration enumeration = offer.enumerateAppliesTo();&#xD;
         while (enumeration.hasMoreElements()) {&#xD;
             AppliesTo a = (AppliesTo)enumeration.nextElement();&#xD;
             if (a.getEndDate()!=null) {&#xD;
                 if (date==null || date.compareTo(a.getEndDate())==&#xD;
                                 org.exolab.castor.types.DateTimeBase.LESS_THAN) {&#xD;
                     date = a.getEndDate();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (uniqueOffer!=null) {&#xD;
         return maxDate(date, uniqueOffer.getServiceEndDate());&#xD;
     }&#xD;
     return date;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sp9rTEeWv0eZvzLc0yA" name="minDate" specification="_xV_CUNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SqNrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SqdrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SqtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>if (date1==null) {&#xD;
    		return date2;&#xD;
    }&#xD;
    if (date2==null) {&#xD;
    		return date1;&#xD;
    }&#xD;
    if (date1.compareTo(date2)==org.exolab.castor.types.DateTimeBase.LESS_THAN) {&#xD;
    	   return date1;&#xD;
    }&#xD;
    return date2;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sq9rTEeWv0eZvzLc0yA" name="maxDate" specification="_xV_CVNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SrNrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SrdrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SrtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>if (date1==null || date2==null) {&#xD;
        return null;&#xD;
    }&#xD;
    if (date1.compareTo(date2)==org.exolab.castor.types.DateTimeBase.GREATER_THAN) {&#xD;
        return date1;&#xD;
    }&#xD;
    return date2;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Sr9rTEeWv0eZvzLc0yA" name="getInstance" specification="_xXzAY9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5SsNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SsdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SstrTEeWv0eZvzLc0yA" type="_xQO_rtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroContractEntitlementMapper(transaction, request, null);&#xD;
&#xD;
     &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQO_r9rTEeWv0eZvzLc0yA" name="map" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAV9rTEeWv0eZvzLc0yA" type="_xVy1HtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xV_CUNrTEeWv0eZvzLc0yA" name="minDate" visibility="private" method="_xZ5Sp9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xV_CUdrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xV_CUtrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xV_CU9rTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xV_CVNrTEeWv0eZvzLc0yA" name="maxDate" visibility="private" method="_xZ5Sq9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xV_CVdrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xV_CVtrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xV_CV9rTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAUNrTEeWv0eZvzLc0yA" name="ContractEntitlementMapper" method="_xZ5Sl9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXzAVNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXzAVdrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXzAUdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAUtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAU9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAVtrTEeWv0eZvzLc0yA" type="_xQO_rtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAWNrTEeWv0eZvzLc0yA" name="createUniqueOffersAndDeliverables" visibility="protected" method="_xZ5SnNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAWdrTEeWv0eZvzLc0yA" name="calculateUniqueDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xXzAWtrTEeWv0eZvzLc0yA" name="result" type="_xVy1HtrTEeWv0eZvzLc0yA"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAW9rTEeWv0eZvzLc0yA" name="getServiceStartDate" visibility="private" method="_xZ5Sn9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAXNrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAXdrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAXtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAX9rTEeWv0eZvzLc0yA" name="getServiceEndDate" visibility="private" method="_xZ5So9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAYNrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAYdrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAYtrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAY9rTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xZ5Sr9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xXzAZNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAZdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAZtrTEeWv0eZvzLc0yA" type="_xQO_rtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQVGQNrTEeWv0eZvzLc0yA" name="ContractMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZIdENrTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xa2UN9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdEtrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xa2UOtrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdFNrTEeWv0eZvzLc0yA" name="_oosMap" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xa2UPdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdFtrTEeWv0eZvzLc0yA" name="_locationMap" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xa2UQNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdGNrTEeWv0eZvzLc0yA" name="_contactMap" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xa2UQ9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdGtrTEeWv0eZvzLc0yA" name="_oosKeyListMapbyOOSGroupId" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xa2URtrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdHNrTEeWv0eZvzLc0yA" name="_request" visibility="protected" type="_xVUUANrTEeWv0eZvzLc0yA" association="_xa2USdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdHtrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xa2UTNrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5Ss9rTEeWv0eZvzLc0yA" name="ContractMapper" specification="_xXzAaNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ5StNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5StdrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SttrTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5St9rTEeWv0eZvzLc0yA" name="locationMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SuNrTEeWv0eZvzLc0yA" name="contactMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SudrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5SutrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ5Su9rTEeWv0eZvzLc0yA" type="_xQVGQNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
		_XMLIdGenerator = generator;&#xD;
		_oosMap = oosMap;&#xD;
		_locationMap = locationMap;&#xD;
		_contactMap = contactMap;&#xD;
		_oosKeyListMapbyOOSGroupId = oosKeyListMapbyOOSGroupId;&#xD;
		_ctx = ctx;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQVGQdrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQVGQtrTEeWv0eZvzLc0yA" name="includeOffers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGQ9rTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGRNrTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGRdrTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGRtrTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGR9rTEeWv0eZvzLc0yA" name="includeOOSes">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGSNrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQVGSdrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xXzAaNrTEeWv0eZvzLc0yA" name="ContractMapper" method="_xZ5Ss9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xXzAcNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xXzAcdrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xXzAadrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAatrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAa9rTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAbNrTEeWv0eZvzLc0yA" name="locationMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAbdrTEeWv0eZvzLc0yA" name="contactMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAbtrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzAb9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xXzActrTEeWv0eZvzLc0yA" type="_xQVGQNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQVGS9rTEeWv0eZvzLc0yA" name="DeliverableMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZIdINrTEeWv0eZvzLc0yA" name="_del" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xa2UT9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdItrTEeWv0eZvzLc0yA" name="_ctx" visibility="package" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xa2UUtrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YkNrTEeWv0eZvzLc0yA" name="DeliverableMapper" specification="_xX5G0NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YkdrTEeWv0eZvzLc0yA" name="del" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YktrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yk9rTEeWv0eZvzLc0yA" type="_xQVGS9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
		_del = del;&#xD;
		_ctx  = ctx;&#xD;
		&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQVGTNrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true">
                      <ownedParameter xmi:id="_xQVGTdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQVGTtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX5G1trTEeWv0eZvzLc0yA" type="_xVCAMdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G0NrTEeWv0eZvzLc0yA" name="DeliverableMapper" visibility="protected" method="_xZ_YkNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX5G09rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX5G1NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX5G0drTEeWv0eZvzLc0yA" name="del" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G0trTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G1drTEeWv0eZvzLc0yA" type="_xQVGS9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQVGT9rTEeWv0eZvzLc0yA" name="ErrorMapper" isAbstract="true">
                    <ownedComment xmi:id="_xaXziNrTEeWv0eZvzLc0yA">
                      <body>101	Incorrect Contract Identifier Type provided => 201&#xD;
102	Incorrect Check Date provided - Allowed range: -90 days/+1day around current date => 201&#xD;
103	Mandatory Serial Number has not  been provided	=> 200&#xD;
104	Mandatory Contract Identifier has not  been provided => 200&#xD;
105	Invalid ISO Country Code provided	=> 201&#xD;
106	Invalid MaxOOSesNo provided. Allowed range: 0 - 9999, or empty for no limitation => 201&#xD;
107   Parameter contains invalid data: &amp;1 (&amp;2) =>201 (Added since ES 9.0.5 PWA)&#xD;
108	Mandatory Service Agreement ID  has not  been provided	=> 201&#xD;
201	No entries found	=> 300&#xD;
202	Found Contract XXXXX  is invalid - No ISO Country Code for ProductShipTo Location exists => 237&#xD;
899	Internal error - Any unanticipated error occurred during the processing of the request	=> 434</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZIdJNrTEeWv0eZvzLc0yA" name="_cqsErrors" visibility="protected" type="_xVCAFdrTEeWv0eZvzLc0yA" association="_xa2UVdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZIdJ9rTEeWv0eZvzLc0yA" name="_request" visibility="protected" type="_xVUUANrTEeWv0eZvzLc0yA" association="_xa8a0drTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjkdrTEeWv0eZvzLc0yA" name="_sapRegionDisplayName" visibility="protected">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZOjk9rTEeWv0eZvzLc0yA" name="_errorIdMap" visibility="protected" isLeaf="true" isStatic="true" type="_xVCAG9rTEeWv0eZvzLc0yA" isReadOnly="true" association="_xa8a1NrTEeWv0eZvzLc0yA">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjldrTEeWv0eZvzLc0yA" value="new HashMap&lt;String, String>()"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZOjl9rTEeWv0eZvzLc0yA" name="_parameterTypeMap" visibility="protected" isLeaf="true" isStatic="true" type="_xVCAG9rTEeWv0eZvzLc0yA" isReadOnly="true" association="_xa8a19rTEeWv0eZvzLc0yA">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjmdrTEeWv0eZvzLc0yA" value="new HashMap&lt;String, String>()"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YlNrTEeWv0eZvzLc0yA" name="_initializer1" specification="_xQVGUNrTEeWv0eZvzLc0yA">
                      <language>java</language>
                      <body>_errorIdMap.put(&quot;101&quot;,&quot;201&quot;);&#xD;
		_parameterTypeMap.put(&quot;101&quot;,&quot;ContractIdentifierType&quot;);&#xD;
&#xD;
		_errorIdMap.put(&quot;102&quot;,&quot;201&quot;);&#xD;
		_parameterTypeMap.put(&quot;102&quot;,&quot;EntitlementCheckDate&quot;);&#xD;
&#xD;
		_errorIdMap.put(&quot;103&quot;,&quot;200&quot;);&#xD;
		_parameterTypeMap.put(&quot;103&quot;,&quot;Serial Number must be supplied.&quot;);&#xD;
&#xD;
		_errorIdMap.put(&quot;104&quot;,&quot;200&quot;);&#xD;
		_parameterTypeMap.put(&quot;104&quot;,&quot;Contract Identifier is mandatory for contract queries in case no Serial number is provided&quot;);&#xD;
&#xD;
&#xD;
		_errorIdMap.put(&quot;105&quot;,&quot;201&quot;);&#xD;
		_parameterTypeMap.put(&quot;105&quot;,&quot;IsoCountryCode&quot;);&#xD;
&#xD;
		_errorIdMap.put(&quot;106&quot;,&quot;201&quot;);&#xD;
		_parameterTypeMap.put(&quot;106&quot;,&quot;MaxOOSesNo provided. Allowed range: 0 - 9999, or empty for no limitation&quot;);&#xD;
&#xD;
     _errorIdMap.put(&quot;107&quot;,&quot;201&quot;);&#xD;
     _parameterTypeMap.put(&quot;107&quot;,&quot;SerialNumber&quot;);&#xD;
&#xD;
     _errorIdMap.put(&quot;108&quot;,&quot;200&quot;);&#xD;
		_parameterTypeMap.put(&quot;108&quot;,&quot;Contract Identifier is mandatory for contract queries in case no Serial number is provided&quot;);&#xD;
&#xD;
		_errorIdMap.put(&quot;201&quot;,&quot;300&quot;);&#xD;
		_parameterTypeMap.put(&quot;201&quot;,null);&#xD;
&#xD;
		_errorIdMap.put(&quot;202&quot;,&quot;237&quot;);&#xD;
		_parameterTypeMap.put(&quot;202&quot;,null);&#xD;
&#xD;
		_errorIdMap.put(&quot;899&quot;,&quot;434&quot;);&#xD;
		_parameterTypeMap.put(&quot;899&quot;,null);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YldrTEeWv0eZvzLc0yA" name="ErrorMapper" specification="_xX5G19rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YltrTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yl9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YmNrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_YmdrTEeWv0eZvzLc0yA" type="_xQVGT9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_cqsErrors = cqsErrors;&#xD;
 	_request = request;&#xD;
 	_sapRegionDisplayName = sapRegionDisplayName;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YmtrTEeWv0eZvzLc0yA" name="getInstance" specification="_xX5G39rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Ym9rTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YnNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YndrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_YntrTEeWv0eZvzLc0yA" type="_xQVGT9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroErrorMapper(cqsErrors, request, sapRegionDisplayName);&#xD;
&#xD;
&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQVGUNrTEeWv0eZvzLc0yA" name="_initializer1" isStatic="true" method="_xZ_YlNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xQVGUdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xQVGUtrTEeWv0eZvzLc0yA" key="init"/>
                      </eAnnotations>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQVGVNrTEeWv0eZvzLc0yA" name="map" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX5G5drTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G19rTEeWv0eZvzLc0yA" name="ErrorMapper" visibility="protected" method="_xZ_YldrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX5G29rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX5G3NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX5G2NrTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G2drTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G2trTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX5G3drTEeWv0eZvzLc0yA" type="_xQVGT9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G39rTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xZ_YmtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX5G4NrTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G4drTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G4trTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX5G49rTEeWv0eZvzLc0yA" type="_xQVGT9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G5trTEeWv0eZvzLc0yA" name="mapError" visibility="protected" isAbstract="true">
                      <ownedParameter xmi:id="_xX5G59rTEeWv0eZvzLc0yA" name="cqsMessage" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G6NrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbM4NrTEeWv0eZvzLc0yA" name="LocationMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZOjm9rTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xa8a2trTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjndrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xa8a3drTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjn9rTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xa8a4NrTEeWv0eZvzLc0yA">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjoNrTEeWv0eZvzLc0yA" value="null"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Yn9rTEeWv0eZvzLc0yA" name="LocationMapper" specification="_xX5G6drTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YoNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YodrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YotrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yo9rTEeWv0eZvzLc0yA" type="_xQbM4NrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator;&#xD;
     _ctx = ctx;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YpNrTEeWv0eZvzLc0yA" name="LocationMapper" specification="_xX5G8NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YpdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YptrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yp9rTEeWv0eZvzLc0yA" type="_xQbM4NrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator;&#xD;
     _ctx = null;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbM4drTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQbM4trTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQbM49rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G6drTEeWv0eZvzLc0yA" name="LocationMapper" visibility="protected" method="_xZ_Yn9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX5G7drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX5G7trTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX5G6trTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G69rTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G7NrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G79rTEeWv0eZvzLc0yA" type="_xQbM4NrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G8NrTEeWv0eZvzLc0yA" name="LocationMapper" method="_xZ_YpNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX5G89rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX5G9NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX5G8drTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G8trTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G9drTEeWv0eZvzLc0yA" type="_xQbM4NrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbM5drTEeWv0eZvzLc0yA" name="MetroAppliesToMapper" visibility="package">
                    <ownedComment xmi:id="_xaXzidrTEeWv0eZvzLc0yA">
                      <body>@author anvoi&#xD;
 *</body>
                    </ownedComment>
                    <generalization xmi:id="_xWFI-NrTEeWv0eZvzLc0yA" general="_xQI5F9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YqNrTEeWv0eZvzLc0yA" name="MetroAppliesToMapper" specification="_xX5G9trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YqdrTEeWv0eZvzLc0yA" name="appl" type="_xWFI8NrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YqtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yq9rTEeWv0eZvzLc0yA" name="oosMapbyOOSKey" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YrNrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YrdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YrtrTEeWv0eZvzLc0yA" type="_xQbM5drTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(appl, generator, oosMapbyOOSKey, oosKeyListMapbyOOSGroupId, ctx);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Yr9rTEeWv0eZvzLc0yA" name="map" specification="_xQbM5trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YsNrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_YsdrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_YstrTEeWv0eZvzLc0yA" type="_xVCAFdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ArrayList lisApplyTo = new ArrayList();&#xD;
		ZESCQSAPPLIESTO applObj = (ZESCQSAPPLIESTO) _appl; &#xD;
		ESLog.debug(&quot;Mapping Service (Applies To)&quot;);&#xD;
		&#xD;
		/*&#xD;
		 * AppliesTo Mapping&#xD;
		* The CQS AppliesTo-Element has the same structure as in CDO, which is different to ES:&#xD;
		* ObjectType= OOSGroup or OOS&#xD;
		*  ObjectRef  - ObjectRefKey = OOSGroup/Functional Locatio or OOSKey&#xD;
		* &#xD;
		* Logic:&#xD;
		* If Applies to with ObjectType= OOS&#xD;
		* 	CQS AppliesTo ObjectRef  - ObjectRefKey is directly mapped to ES Applies - OOSkey&#xD;
		* Else&#xD;
		* 	All OOS - OOSkey belonging to OOSes having an OOSGroupID matching the CQS.ObjectRefKey need to be mapped to ES Applies - OOSkey.&#xD;
		* 	In this case one ES ES Applies can reference several OOSe&#xD;
		 */&#xD;
		&#xD;
		if(applObj.getOBJECTTYPE() != null &amp;&amp; applObj.getOBJECTTYPE().trim().equalsIgnoreCase(OOS_TYPE)) {&#xD;
			&#xD;
			Collection listAppl = applObj.getOBJECTREF().getItem();&#xD;
			Iterator itAppl = listAppl.iterator();&#xD;
			while(itAppl.hasNext()) {&#xD;
				ZESCQSOBJECTREF objRef = (ZESCQSOBJECTREF) itAppl.next();&#xD;
				&#xD;
				AppliesTo appl = createAppliesToWithNoRef(objRef);&#xD;
				&#xD;
				&#xD;
				appl.setOOSRef(getOOS(objRef.getOBJECTREFKEY()));&#xD;
				appl.setOOSKey(MappingUtils.nullString(objRef.getOBJECTREFKEY()));&#xD;
				&#xD;
				&#xD;
				&#xD;
				lisApplyTo.add(appl);&#xD;
				if(_ctx != null) {&#xD;
&#xD;
			        String oosKey             = appl.getOOSKey();&#xD;
&#xD;
			        AppliesToKey key = new AppliesToKey(sourceObligationId, item, oosKey);&#xD;
			        _ctx.addAppliesTo(key,appl);&#xD;
				}			&#xD;
			}&#xD;
			&#xD;
			&#xD;
			&#xD;
		}else {&#xD;
			Collection listAppl = applObj.getOBJECTREF().getItem();&#xD;
			Iterator itAppl = listAppl.iterator();&#xD;
			while(itAppl.hasNext()) {&#xD;
				ZESCQSOBJECTREF objRef = (ZESCQSOBJECTREF) itAppl.next();&#xD;
				Collection tmpCol = getOOSKeyListForOOSGroupId(objRef.getOBJECTREFKEY());&#xD;
				if(tmpCol != null) {&#xD;
					Iterator itOOSkey = tmpCol.iterator();&#xD;
					&#xD;
					while(itOOSkey.hasNext()) {&#xD;
						String    oosKey = (String) itOOSkey.next();&#xD;
						AppliesTo appl = createAppliesToWithNoRef(objRef);&#xD;
						OOSComplexType tmp = getOOS(oosKey);&#xD;
						appl.setOOSRef(tmp);&#xD;
						appl.setOOSKey(tmp.getOOSKey());&#xD;
						if(_ctx != null) {&#xD;
					        AppliesToKey key = new AppliesToKey(sourceObligationId, item, oosKey);&#xD;
					        _ctx.addAppliesTo(key,appl);&#xD;
						}						&#xD;
						lisApplyTo.add(appl);&#xD;
					}&#xD;
				}else{&#xD;
				    //fixed for &quot;QC.CR.ID 1716 Missing AppliesTo if includeOOS = false for OOSGroup&quot;&#xD;
				    AppliesTo appl = createAppliesToWithNoRef(objRef);&#xD;
				    if(_ctx != null) {&#xD;
                     AppliesToKey key = new AppliesToKey(sourceObligationId, item, &quot;&quot;);&#xD;
                     _ctx.addAppliesTo(key,appl);&#xD;
                 }                       &#xD;
                 lisApplyTo.add(appl);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return lisApplyTo;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Ys9rTEeWv0eZvzLc0yA" name="createAppliesToWithNoRef" specification="_xX_NcdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YtNrTEeWv0eZvzLc0yA" name="objRef" type="_xWFI8trTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YtdrTEeWv0eZvzLc0yA" type="_xVCAK9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>AppliesTo appl = new AppliesTo();&#xD;
		&#xD;
		appl.setActiveAppliesTo(MappingUtils.mapToBoolean(objRef.getACTIVEAPPLIESTO()));&#xD;
		&#xD;
		appl.setDeliveryBlock(MappingUtils.nullString(objRef.getDELIVERYBLOCK()));&#xD;
		&#xD;
		appl.setStartDate(MappingUtils.mapToCastorDate(objRef.getSTARTDATE()));&#xD;
		appl.setEndDate(MappingUtils.mapToCastorDate(objRef.getENDDATE()));&#xD;
		&#xD;
		appl.setStatus(StatusType.valueOf(MappingUtils.nullString(objRef.getITEMSTATUS())));&#xD;
		&#xD;
		appl.setProfitCenter(mapProfitCenter(objRef.getPROFITCENTER()));&#xD;
		return appl;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YttrTEeWv0eZvzLc0yA" name="mapProfitCenter" specification="_xX_NdNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Yt9rTEeWv0eZvzLc0yA" name="profitcenter" type="_xWFI9NrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YuNrTEeWv0eZvzLc0yA" type="_xVaaoNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ProfitCenter pc = null;&#xD;
		String entity =  MappingUtils.nullString(profitcenter.getENTITY());&#xD;
		String subentity = MappingUtils.nullString(profitcenter.getSUBENTITY());&#xD;
		String department =MappingUtils.nullString(profitcenter.getDEPARTMENT());&#xD;
		String workforce = MappingUtils.nullString(profitcenter.getWORKFORCE());&#xD;
		&#xD;
		if (entity!=null || subentity!=null || department!=null || workforce!=null ) {&#xD;
         pc = new ProfitCenter();&#xD;
         pc.setDepartment(department);&#xD;
         pc.setEntity(entity);&#xD;
         pc.setSubEntity(subentity);&#xD;
         pc.setWorkforce(workforce);&#xD;
&#xD;
     }&#xD;
		return pc;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbM5trTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_Yr9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQbM59rTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbM6NrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NcNrTEeWv0eZvzLc0yA" type="_xVCAFdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX5G9trTEeWv0eZvzLc0yA" name="MetroAppliesToMapper" visibility="package" method="_xZ_YqNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX5G_NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX5G_drTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX5G99rTEeWv0eZvzLc0yA" name="appl" type="_xWFI8NrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G-NrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G-drTEeWv0eZvzLc0yA" name="oosMapbyOOSKey" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G-trTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G-9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX5G_trTEeWv0eZvzLc0yA" type="_xQbM5drTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NcdrTEeWv0eZvzLc0yA" name="createAppliesToWithNoRef" visibility="protected" method="_xZ_Ys9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NctrTEeWv0eZvzLc0yA" name="objRef" type="_xWFI8trTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Nc9rTEeWv0eZvzLc0yA" type="_xVCAK9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NdNrTEeWv0eZvzLc0yA" name="mapProfitCenter" visibility="protected" method="_xZ_YttrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NddrTEeWv0eZvzLc0yA" name="profitcenter" type="_xWFI9NrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NdtrTEeWv0eZvzLc0yA" type="_xVaaoNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbM6drTEeWv0eZvzLc0yA" name="MetroCQSBySNRequestMapper" visibility="package">
                    <generalization xmi:id="_xWFI_drTEeWv0eZvzLc0yA" general="_xQI5H9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YudrTEeWv0eZvzLc0yA" name="MetroCQSBySNRequestMapper" specification="_xQbM6trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YutrTEeWv0eZvzLc0yA" type="_xQbM6drTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Yu9rTEeWv0eZvzLc0yA" name="map" specification="_xX_Nd9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YvNrTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YvdrTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>// For brevity, extract the ContractRequest from the incoming EsRequest&#xD;
		EntitlementBySnRequest sr = esRequest.getEsRequestComplexTypeChoice().getEntitlementBySnRequest();&#xD;
&#xD;
		// Create the request structure&#xD;
		ZESCQSENBYSNREQUESTV1 cqsRequest = new ZESCQSENBYSNREQUESTV1();&#xD;
&#xD;
		// Populate the request structure fields from the esRequest&#xD;
		cqsRequest.setPRODUCTID(sr.getProductID());&#xD;
		cqsRequest.setSERIALNUMBER(sr.getSerialNumber());&#xD;
		&#xD;
		cqsRequest.setCHECKDATE(DateHelper.toIsoDateString(sr.getEntitlementCheckDate()));&#xD;
		cqsRequest.setCONTRACTIDENTIFIER(sr.getContractIdentifier());&#xD;
		&#xD;
		if (sr.getContractIdentifierType() != null) {&#xD;
			if (sr.getContractIdentifierType().toString().equals(&quot;FunctionalLocation&quot;))&#xD;
				// The CQS interface uses SAR instead of FunctionalLocation&#xD;
				cqsRequest.setCONTRACTIDENTIFIERTYPE(&quot;SAR&quot;);&#xD;
			else&#xD;
				cqsRequest.setCONTRACTIDENTIFIERTYPE(sr.getContractIdentifierType().toString());&#xD;
		}&#xD;
		&#xD;
		cqsRequest.setDATAENTRYSITE(sr.getDataEntrySite());&#xD;
&#xD;
		cqsRequest.setSOURCECUSTOMERID(sr.getSourceCustomerID());&#xD;
		cqsRequest.setACTIVECONTRACTSONLY(sr.getActiveContractsOnly() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setACTIVESERVICESONLY(sr.getActiveServicesOnly() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
&#xD;
		cqsRequest.setINCLUDEADDRESSES(sr.getIncludeAddresses() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDECONTACTS(sr.getIncludeContacts() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		&#xD;
		&#xD;
		cqsRequest.setINCLUDESERVICES(sr.getIncludeOffers() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		/* WITS 1471: No special mapping for modifiers and deliverables needed any longer.&#xD;
		 * This is now done in RequestCleaner() */&#xD;
		cqsRequest.setINCLUDEDELIVERABLES(sr.getIncludeDeliverables() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDEMODIFIERS(sr.getIncludeModifiers() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		/*if(sr.getIncludeModifiers() ) {&#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAPTRUE);&#xD;
			cqsRequest.setINCLUDEDELIVERABLES(EsConstants.ABAPTRUE);&#xD;
			cqsRequest.setINCLUDEMODIFIERS(EsConstants.ABAPTRUE);			&#xD;
		}else if(sr.getIncludeDeliverables()) {&#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAPTRUE);&#xD;
			cqsRequest.setINCLUDEDELIVERABLES(EsConstants.ABAPTRUE);&#xD;
			cqsRequest.setINCLUDEMODIFIERS(EsConstants.ABAPFALSE);&#xD;
		}else if (sr.getIncludeOffers()) {&#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAPTRUE);&#xD;
			cqsRequest.setINCLUDEDELIVERABLES(EsConstants.ABAPFALSE);&#xD;
			cqsRequest.setINCLUDEMODIFIERS(EsConstants.ABAPFALSE);&#xD;
		}else {&#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAPFALSE);&#xD;
			cqsRequest.setINCLUDEDELIVERABLES(EsConstants.ABAPFALSE);&#xD;
			cqsRequest.setINCLUDEMODIFIERS(EsConstants.ABAPFALSE);		&#xD;
		} &#xD;
		END WITS.1471*/	&#xD;
		&#xD;
		if(sr.isIncludeManufacturerInfo()) {&#xD;
			cqsRequest.setINCLUDEMVINFOR(EsConstants.ABAP_TRUE);&#xD;
		} else {&#xD;
			cqsRequest.setINCLUDEMVINFOR(EsConstants.ABAP_FALSE);&#xD;
		}&#xD;
		&#xD;
		if(sr.isIncludeCustomerIdentificationInformation()) { &#xD;
			cqsRequest.setINCLUDECUSTOMERIDINFO(EsConstants.ABAP_TRUE);&#xD;
		} else {&#xD;
			cqsRequest.setINCLUDECUSTOMERIDINFO(EsConstants.ABAP_FALSE);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
		// Now fill the resulting object&#xD;
		ZESCONTRACTENTBYSNES10 result = new ZESCONTRACTENTBYSNES10();&#xD;
&#xD;
		&#xD;
		result.setESREQUEST(cqsRequest);&#xD;
&#xD;
		return result;&#xD;
&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbM6trTEeWv0eZvzLc0yA" name="MetroCQSBySNRequestMapper" visibility="package" method="_xZ_YudrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xQbM69rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xQbM7NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xQbM7drTEeWv0eZvzLc0yA" type="_xQbM6drTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_Nd9rTEeWv0eZvzLc0yA" name="map" method="_xZ_Yu9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NeNrTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NedrTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbM7trTEeWv0eZvzLc0yA" name="MetroCQSRequestMapper" visibility="package">
                    <generalization xmi:id="_xWFJAtrTEeWv0eZvzLc0yA" general="_xQO_odrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YvtrTEeWv0eZvzLc0yA" name="MetroCQSRequestMapper" specification="_xQbM79rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Yv9rTEeWv0eZvzLc0yA" type="_xQbM7trTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YwNrTEeWv0eZvzLc0yA" name="map" specification="_xX_NetrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YwdrTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YwtrTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>// For brevity, extract the ContractRequest from the incoming EsRequest&#xD;
		ContractRequest cr = esRequest.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
&#xD;
		// Create the request structure&#xD;
		ZESCQSCONTRACTENREQUESTV1 cqsRequest = new ZESCQSCONTRACTENREQUESTV1();&#xD;
&#xD;
		// Populate the request structure fields from the esRequest&#xD;
		cqsRequest.setPRODUCTID(cr.getProductID());&#xD;
		cqsRequest.setISOCOUNTRYCODE(cr.getIsoCountryCd());&#xD;
		cqsRequest.setCHECKDATE(DateHelper.toIsoDateString(cr.getEntitlementCheckDate()));&#xD;
		cqsRequest.setCONTRACTIDENTIFIER(cr.getContractIdentifier());&#xD;
		ContractIdentifierTypeType requestType = cr.getContractIdentifierType();&#xD;
		if (requestType != null)&#xD;
		{&#xD;
			if (&quot;FunctionalLocation&quot;.equals(requestType.toString()))&#xD;
				// The CQS interface uses SAR instead of FunctionalLocation&#xD;
				cqsRequest.setCONTRACTIDENTIFIERTYPE(&quot;SAR&quot;);&#xD;
			else &#xD;
				cqsRequest.setCONTRACTIDENTIFIERTYPE(requestType.toString());&#xD;
		}&#xD;
		cqsRequest.setDATAENTRYSITE(cr.getDataEntrySite());&#xD;
		cqsRequest.setCUSTOMERDEFINEDID(cr.getCustomerDefinedID());&#xD;
		cqsRequest.setSOURCECUSTOMERID(cr.getSourceCustomerID());&#xD;
		cqsRequest.setACTIVECONTRACTSONLY(cr.getActiveContractsOnly() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setACTIVESERVICESONLY(cr.getActiveServicesOnly() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setSTANDALONEOFFERSONLY(cr.getStandAloneOffersOnly() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDEOOSES(EsConstants.ABAP_TRUE);&#xD;
		cqsRequest.setINCLUDEADDRESSES(cr.getIncludeAddresses() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDECONTACTS(cr.getIncludeContacts() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		&#xD;
		/* WITS 1471: No special mapping for modifiers and deliverables needed any longer.&#xD;
		 * This is now done in RequestCleaner() */&#xD;
		cqsRequest.setINCLUDESERVICES(cr.getIncludeOffers() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDEDELIVERABLES(cr.getIncludeDeliverables() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDEMODIFIERS(cr.getIncludeModifiers() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		/*&#xD;
		if(cr.getIncludeModifiers() ) {&#xD;
			cqsRequest.setINCLUDE_SERVICES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDE_DELIVERABLES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDE_MODIFIERS(EsConstants.ABAP_TRUE);			&#xD;
		}else if(cr.getIncludeUniqueDeliverables()) {&#xD;
		//WITS.1464: Use Deliverables to compile the UniqueDeliverables afterwards&#xD;
		}else if(cr.getIncludeDeliverables() | cr.getIncludeUniqueDeliverables()) {&#xD;
			//In that case &#xD;
			cqsRequest.setINCLUDE_SERVICES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDE_DELIVERABLES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDE_MODIFIERS(EsConstants.ABAP_FALSE);&#xD;
			//WITS.1464: Use Services to compile the UniqueOffers afterwards&#xD;
			}else if (cr.getIncludeOffers() | cr.getIncludeUniqueOffers()) {&#xD;
			cqsRequest.setINCLUDE_SERVICES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDE_DELIVERABLES(EsConstants.ABAP_FALSE);&#xD;
			cqsRequest.setINCLUDE_MODIFIERS(EsConstants.ABAP_FALSE);&#xD;
		}else {&#xD;
			cqsRequest.setINCLUDE_SERVICES(EsConstants.ABAP_FALSE);&#xD;
			cqsRequest.setINCLUDE_DELIVERABLES(EsConstants.ABAP_FALSE);&#xD;
			cqsRequest.setINCLUDE_MODIFIERS(EsConstants.ABAP_FALSE);		&#xD;
		}&#xD;
		END WITS 1471*/&#xD;
		//WITS.1464: Use Deliverables to compile the UniqueDeliverables afterwards&#xD;
		if(cr.getIncludeUniqueDeliverables() &amp; !cr.getIncludeDeliverables()) {&#xD;
			//In that case &#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAP_TRUE);&#xD;
			cqsRequest.setINCLUDEDELIVERABLES(EsConstants.ABAP_TRUE);&#xD;
		//WITS.1464: Use Services to compile the UniqueOffers afterwards&#xD;
		}else if (cr.getIncludeUniqueOffers() &amp; !cr.getIncludeOffers()) {&#xD;
			cqsRequest.setINCLUDESERVICES(EsConstants.ABAP_TRUE);&#xD;
		}//End WITS.1464&#xD;
				&#xD;
		cqsRequest.setINCLUDESPECIALINSTRUCTIONS(cr.getIncludeSpecialInstructions() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
		cqsRequest.setINCLUDESWSERVICELEVELCAT(cr.getIncludeSoftwareServiceLevelCategory() ? EsConstants.ABAP_TRUE : EsConstants.ABAP_FALSE);&#xD;
&#xD;
		cqsRequest.setMAXOOSESNO(&quot;99999&quot;);&#xD;
		&#xD;
		if(cr.isIncludeManufacturerInfo()) {&#xD;
			cqsRequest.setINCLUDEMVINFOR(EsConstants.ABAP_TRUE);&#xD;
		} else {&#xD;
			cqsRequest.setINCLUDEMVINFOR(EsConstants.ABAP_FALSE);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		if(cr.isIncludeCustomerIdentificationInformation()) { &#xD;
			cqsRequest.setINCLUDECUSTOMERIDINFO(EsConstants.ABAP_TRUE);&#xD;
		} else {&#xD;
			cqsRequest.setINCLUDECUSTOMERIDINFO(EsConstants.ABAP_FALSE);&#xD;
		}&#xD;
		// Now fill the resulting object&#xD;
		ZESCONTRACTENTES10 result = new ZESCONTRACTENTES10();&#xD;
		result.setESREQUEST(cqsRequest);&#xD;
&#xD;
		return result;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbM79rTEeWv0eZvzLc0yA" name="MetroCQSRequestMapper" visibility="protected" method="_xZ_YvtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xQbM8NrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xQbM8drTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xQbM8trTEeWv0eZvzLc0yA" type="_xQbM7trTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NetrTEeWv0eZvzLc0yA" name="map" method="_xZ_YwNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_Ne9rTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NfNrTEeWv0eZvzLc0yA" type="_xXs5q9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbM89rTEeWv0eZvzLc0yA" name="MetroCombinedUnitEntitlementMapper" visibility="package">
                    <ownedComment xmi:id="_xaXzitrTEeWv0eZvzLc0yA">
                      <body>@author ANVOI&#xD;
 *</body>
                    </ownedComment>
                    <generalization xmi:id="_xWFJBdrTEeWv0eZvzLc0yA" general="_xQO_p9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Yw9rTEeWv0eZvzLc0yA" name="MetroCombinedUnitEntitlementMapper" specification="_xX_NfdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YxNrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YxdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YxtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Yx9rTEeWv0eZvzLc0yA" type="_xQbM89rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction, request, ctx);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YyNrTEeWv0eZvzLc0yA" name="map" specification="_xQbM9NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_YydrTEeWv0eZvzLc0yA" type="_xV47uNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>CombinedUnitEntitlementComplexType result = new CombinedUnitEntitlementComplexType();&#xD;
		EntitlementBySnRequest esr =_request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest();&#xD;
		&#xD;
		&#xD;
&#xD;
		Map&lt;String, ContactComplexType> contactMap = new HashMap&lt;String, ContactComplexType>();&#xD;
		if(esr.getIncludeContacts()) {&#xD;
		    ContactMapper contactMapper = new MetroContactMapper(_transaction,_XMLIdGenerator);&#xD;
		    result.setContact(contactMapper.map());&#xD;
		    // Convert the array of contacts into a HashMap for ContractMapper&#xD;
		    &#xD;
		    for (int i=0; i&lt;result.getContactCount(); i++) {&#xD;
		        contactMap.put(result.getContact(i).getSourcePersonID(), result.getContact(i));&#xD;
		    }&#xD;
		}&#xD;
	    &#xD;
	    Map&lt;String, LocationComplexType> locationMap = new HashMap&lt;String, LocationComplexType>();&#xD;
	    if(esr.getIncludeAddresses()) {&#xD;
		    LocationMapper locationMapper = new MetroLocationMapper(_transaction, _XMLIdGenerator);&#xD;
		    result.setLocation(locationMapper.map());&#xD;
		    // Convert the array of locations into a HashMap for ContractMapper&#xD;
	    &#xD;
		    for (int i=0; i&lt;result.getLocationCount(); i++) {&#xD;
		        locationMap.put(result.getLocation(i).getSourceCustomerID(), result.getLocation(i));&#xD;
		    }&#xD;
	    }&#xD;
	&#xD;
	    /* WITS.1470: bySN does not return applies tos for OSSGroup linkages&#xD;
	     * Change: &#xD;
	     * 	Introduce an OOS list to contain all OOSes. &#xD;
	     * 	This OOS list is used to generate the OOS to OOSGroup linkage&#xD;
	     *  The logic was copied from CombinedUnitEntitlementMapper.java */&#xD;
	    Map&lt;String, OOSComplexType> oosMap = new HashMap&lt;String, OOSComplexType>();&#xD;
	    Map&lt;String, ArrayList&lt;String>> oosKeyListMapbyOOSGroupId = new HashMap&lt;String, ArrayList&lt;String>>();&#xD;
	    &#xD;
	    OosMapper oosMapper = new MetroOosMapper(_transaction, _XMLIdGenerator, _ctx);&#xD;
	    OOSComplexType[] oosTmpList = oosMapper.map();&#xD;
	    if(esr.isIncludeManufacturerInfo()) {&#xD;
	    	((MetroOosMapper)oosMapper).mapMV(oosTmpList);&#xD;
	    }&#xD;
	    result.setOOS(mapNOosesToOne(oosTmpList));&#xD;
	    // Convert the array of ooses into a HashMap for ContractMapper&#xD;
	    for (int i=0; i&lt;oosTmpList.length; i++) {&#xD;
		  	oosMap.put(oosTmpList[i].getOOSKey(), oosTmpList[i]);&#xD;
		    if(oosKeyListMapbyOOSGroupId.containsKey(oosTmpList[i].getOOSGroupID())) {&#xD;
		      	ArrayList&lt;String> list = oosKeyListMapbyOOSGroupId.get(oosTmpList[i].getOOSGroupID());&#xD;
		       	list.add(oosTmpList[i].getOOSKey());&#xD;
		    }else {&#xD;
		       	ArrayList&lt;String> list = new ArrayList&lt;String>(); &#xD;
		       	list.add(oosTmpList[i].getOOSKey());&#xD;
		       	oosKeyListMapbyOOSGroupId.put(oosTmpList[i].getOOSGroupID(),list);		        	&#xD;
		    }&#xD;
		}&#xD;
	&#xD;
	    ContractMapper contractMapper =&#xD;
	        new MetroContractMapper(_transaction, _XMLIdGenerator, oosMap, locationMap, contactMap, oosKeyListMapbyOOSGroupId, _ctx);&#xD;
	    result.setContract(contractMapper.map(esr.getIncludeOffers(),esr.getIncludeDeliverables(),esr.getIncludeModifiers(),esr.getIncludeContacts(), esr.getIncludeAddresses(), true));&#xD;
	    &#xD;
 	&#xD;
 	// now we set the summary fields at the top&#xD;
	    ZESCQSENTITLEMENTREPLYV1 cqsReply = (ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply();&#xD;
	    result.setActiveContractEntitlement(MappingUtils.mapToBoolean(cqsReply.getACTIVECONTRACTENTITLEMENT()));&#xD;
	    result.setOverallContractEndDate(MappingUtils.mapToCastorDate(cqsReply.getOVERALLCONTRACTENDDATE()));&#xD;
	    result.setOverallContractStartDate(MappingUtils.mapToCastorDate(cqsReply.getOVERALLCONTRACTSTARTDATE()));&#xD;
	    &#xD;
 	/*&#xD;
 	 * Adding customer identification&#xD;
 	 */&#xD;
 	if(esr.isIncludeCustomerIdentificationInformation() &amp;&amp; cqsReply.getCUSTOMERIDENTIFICATION() != null)  {&#xD;
 		result.setCustomerIdentification(MetroCustomerIdentificationTypeMapper.mapCUSTOMERIDENTIFICATION(cqsReply.getCUSTOMERIDENTIFICATION()));&#xD;
 	}&#xD;
	    &#xD;
	    return result;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbM9NrTEeWv0eZvzLc0yA" name="map" method="_xZ_YyNrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NhNrTEeWv0eZvzLc0yA" type="_xV47uNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NfdrTEeWv0eZvzLc0yA" name="MetroCombinedUnitEntitlementMapper" visibility="package" method="_xZ_Yw9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX_NgdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX_NgtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX_NftrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Nf9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NgNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Ng9rTEeWv0eZvzLc0yA" type="_xQbM89rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbz8NrTEeWv0eZvzLc0yA" name="MetroContactMapper" visibility="package">
                    <generalization xmi:id="_xWFJCNrTEeWv0eZvzLc0yA" general="_xQO_qdrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YytrTEeWv0eZvzLc0yA" name="MetroContactMapper" specification="_xX_NhdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Yy9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YzNrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_YzdrTEeWv0eZvzLc0yA" type="_xQbz8NrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction,XMLIdGenerator);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_YztrTEeWv0eZvzLc0yA" name="map" specification="_xQbz8drTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Yz9rTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_Y0NrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(_transaction == null) {&#xD;
 		return new ContactComplexType[0];&#xD;
 	}&#xD;
&#xD;
 	Collection sapContacts =((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getCONTACTS().getItem();&#xD;
     ContactComplexType[] contacts = new ContactComplexType[sapContacts.size()];&#xD;
&#xD;
     ESLog.debug(&quot;Mapping &quot; + contacts.length + &quot; contacts ...&quot;);&#xD;
     int i=0;&#xD;
     for (Iterator it=sapContacts.iterator(); it.hasNext(); ) {&#xD;
         contacts[i++] = mapContact((ZESCQSCONTACT) it.next());&#xD;
     }&#xD;
     return contacts;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y0drTEeWv0eZvzLc0yA" name="mapContact" specification="_xX_Ni9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y0trTEeWv0eZvzLc0yA" name="input" type="_xWFJBtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y09rTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;Mapping Contact &quot;);&#xD;
     ContactComplexType contact = new ContactComplexType();&#xD;
     contact.setId(_XMLIdGenerator.nextId());&#xD;
&#xD;
     contact.setSourcePersonID(input.getSOURCEPERSONID());&#xD;
     contact.setEmailAddress(MappingUtils.nullString(input.getEMAILADDRESS()));&#xD;
     contact.setFaxNumber(MappingUtils.nullString(input.getFAXNUMBER()));&#xD;
     contact.setFullName(MappingUtils.nullString(input.getFULLNAME()));&#xD;
     contact.setPhoneNumber(MappingUtils.nullString(input.getPHONENUMBER()));&#xD;
     &#xD;
     if(_ctx != null) {&#xD;
     	ContactKey key = new ContactKey(contact.getSourcePersonID());&#xD;
     	_ctx.addContact(key, contact);&#xD;
     }&#xD;
    &#xD;
     return contact;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbz8drTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_YztrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQbz8trTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQbz89rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NhdrTEeWv0eZvzLc0yA" name="MetroContactMapper" visibility="package" method="_xZ_YytrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX_NiNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX_NidrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX_NhtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Nh9rTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NitrTEeWv0eZvzLc0yA" type="_xQbz8NrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_Ni9rTEeWv0eZvzLc0yA" name="mapContact" visibility="protected" method="_xZ_Y0drTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NjNrTEeWv0eZvzLc0yA" name="input" type="_xWFJBtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NjdrTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbz9drTEeWv0eZvzLc0yA" name="MetroContractEntitlementMapper" visibility="package">
                    <generalization xmi:id="_xWFJCdrTEeWv0eZvzLc0yA" general="_xQO_rtrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y1NrTEeWv0eZvzLc0yA" name="MetroContractEntitlementMapper" specification="_xX_NjtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y1drTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y1trTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y19rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y2NrTEeWv0eZvzLc0yA" type="_xQbz9drTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction, request, ctx);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y2drTEeWv0eZvzLc0yA" name="map" specification="_xQbz9trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y2trTEeWv0eZvzLc0yA" type="_xVy1HtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ContractRequest cr = _request.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
 	ContractEntitlementComplexType result = new ContractEntitlementComplexType();    	&#xD;
 	&#xD;
 	ZESCQSENTITLEMENTREPLYV1 cqsReply = (ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply();&#xD;
 	&#xD;
 	Map&lt;String, ContactComplexType> contactMap = new HashMap&lt;String, ContactComplexType>();&#xD;
 	if(cr.getIncludeContacts()) {&#xD;
		    ContactMapper contactMapper = new MetroContactMapper(_transaction,_XMLIdGenerator);&#xD;
		    result.setContact(contactMapper.map());&#xD;
		    // Convert the array of contacts into a HashMap for ContractMapper&#xD;
		    &#xD;
		    for (int i=0; i&lt;result.getContactCount(); i++) {&#xD;
		        contactMap.put(result.getContact(i).getSourcePersonID(), result.getContact(i));&#xD;
		    }&#xD;
 	}&#xD;
&#xD;
 	Map&lt;String, LocationComplexType> locationMap = new HashMap&lt;String, LocationComplexType>();&#xD;
 	if(cr.getIncludeAddresses()) {&#xD;
		    LocationMapper locationMapper = new MetroLocationMapper(_transaction, _XMLIdGenerator);&#xD;
		    result.setLocation(locationMapper.map());&#xD;
		    // Convert the array of locations into a HashMap for ContractMapper&#xD;
		    &#xD;
		    for (int i=0; i&lt;result.getLocationCount(); i++) {&#xD;
		        locationMap.put(result.getLocation(i).getSourceCustomerID(), result.getLocation(i));&#xD;
		    }&#xD;
 	}&#xD;
	&#xD;
 	Map&lt;String, OOSComplexType> oosMap = new HashMap&lt;String, OOSComplexType>();&#xD;
 	Map&lt;String, ArrayList&lt;String>> oosKeyListMapbyOOSGroupId = new HashMap&lt;String, ArrayList&lt;String>>();&#xD;
		OosMapper oosMapper = new MetroOosMapper(_transaction, _XMLIdGenerator, _ctx);&#xD;
     OOSComplexType[] oosResult = oosMapper.map();&#xD;
     if(cr.isIncludeManufacturerInfo()) {&#xD;
     	((MetroOosMapper)oosMapper).mapMV(oosResult);&#xD;
     }&#xD;
 &#xD;
	    // Convert the array of ooses into a HashMap for ContractMapper&#xD;
	    &#xD;
	    for (int i=0; i&lt;oosResult.length; i++) {&#xD;
	        OOSComplexType oos = oosResult[i];&#xD;
	        oosMap.put(oos.getOOSKey(), oos);&#xD;
	        if(oosKeyListMapbyOOSGroupId.containsKey(oos.getOOSGroupID())) {&#xD;
	        	ArrayList&lt;String> list = oosKeyListMapbyOOSGroupId.get(oos.getOOSGroupID());&#xD;
	        	list.add(oos.getOOSKey());&#xD;
	        }else {&#xD;
	        	ArrayList&lt;String> list = new ArrayList&lt;String>(); &#xD;
	        	list.add(oos.getOOSKey());&#xD;
	        	oosKeyListMapbyOOSGroupId.put(oos.getOOSGroupID(),list);&#xD;
	        	&#xD;
	        }&#xD;
	    }&#xD;
     if(cr.getIncludeOOSes()){&#xD;
        result.setOOS(oosResult);&#xD;
     }&#xD;
 	/* WITS.1464 UniqueOffers and UniqueDeliverables must be generated for getContractEntitlement&#xD;
 	 * Implementation: &#xD;
 	 * The contractMapper is used by getContract and bySN, therefore we cannot pass the whole &#xD;
 	 * request structure but rather need to evaluate the correct include flags for the request &#xD;
 	 * &#xD;
 	 * The flag IncludeUniqueOffers is set in case, IncludeUniqueDeliverables is set:&#xD;
 	 *  (See in RequestCleaner() !)  &#xD;
 	 * As Unique offers and deliverables are only generated for getContract and not for &#xD;
 	 *  get Entitlement by SN, we do not include this logic into the contractMapper. &#xD;
 	 * Therefor we need to fetch the offers / deliverables first and then generate the &#xD;
 	 *  Unique Offers/Deliverables. For this we use the temporary flags: */&#xD;
 	boolean tmpIncludeOffers = false;&#xD;
 	boolean tmpIncludeDeliverables = false;	    &#xD;
	    if (cr.getIncludeUniqueDeliverables() == true){&#xD;
	    	ESLog.debug(&quot;... map deliverables and offers due to flag IncludeUniqueDeliverables&quot;);&#xD;
	    	tmpIncludeOffers = true;&#xD;
	    	tmpIncludeDeliverables = true;	    	&#xD;
	    }else {&#xD;
	    	if (cr.getIncludeUniqueOffers() == true ) {&#xD;
	    		ESLog.debug(&quot;... map offers due to flag IncludeOffers&quot;);&#xD;
	    		tmpIncludeOffers = true;   		&#xD;
	    	}    		&#xD;
 	}&#xD;
 	tmpIncludeOffers = tmpIncludeOffers ? true : cr.getIncludeOffers();&#xD;
 	tmpIncludeDeliverables = tmpIncludeDeliverables ? true : cr.getIncludeDeliverables();&#xD;
 	&#xD;
 	// Map the contract with all items underneath (Service, deliverables, ...)&#xD;
 	ContractMapper contractMapper =&#xD;
	        new MetroContractMapper(_transaction, _XMLIdGenerator, oosMap, locationMap, contactMap,oosKeyListMapbyOOSGroupId, _ctx);&#xD;
 	result.setContract(contractMapper.map(tmpIncludeOffers, tmpIncludeDeliverables, cr.getIncludeModifiers(),cr.getIncludeContacts(), cr.getIncludeAddresses(), cr.getIncludeOOSes()));	    &#xD;
&#xD;
 	/* unique offers and deliverables:&#xD;
 	 * If unique offers are requested&#xD;
 	 * we do the following&#xD;
 	 *  Create unique offer and deliverables&#xD;
 	 * 	remove &quot;standard&quot; offers if only unique offers are requested&#xD;
 	 *  remove &quot;standard&quot; deliverable if only unique deliverables are requested&#xD;
 	 * !!! The following code is copied from EsReplyContext.mergeAndCalculateAll() &#xD;
 	 * !!! and adapted to the CQS return structures and data&#xD;
 	 *&#xD;
 	 * We only check the flag IncludeOffers as this is also set if IncludeDeliverables are requested.*/ &#xD;
 	if (cr.getIncludeUniqueOffers() ) {&#xD;
 		/* We only hand over the includeUniqueDeliverables flag, as we know that we&#xD;
 		 * need to include unique offers too in that case. So include unique offers is &#xD;
 		 * no differentiation criteria any longer (See if) */&#xD;
 		createUniqueOffersAndDeliverables( cr.getIncludeUniqueDeliverables(), result);&#xD;
&#xD;
         /* if only the unique offers or deliverables are included&#xD;
          * remove source offer or deliverable references */&#xD;
         if (!cr.getIncludeOffers()){&#xD;
         	ESLog.debug(&quot;... remove unwanted offers now&quot; );&#xD;
         	for (int c=0; c&lt;result.getContractCount();c++) {&#xD;
         		for (int o=0; o&lt;result.getContract(c).getObligationHeaderCount();o++){&#xD;
         			// Delete the offer references underneath the obligation header&#xD;
         			ESLog.debug(&quot;... remove offer references of obligation &quot; + &#xD;
         					result.getContract(c).getObligationHeader(o).getSourceObligationID());&#xD;
         			result.getContract(c).getObligationHeader(o).removeAllServiceItem();&#xD;
         		}&#xD;
         		// Delete the actual offers on the contract level&#xD;
         		ESLog.debug(&quot;... remove offers for Svc Agreement ID &quot; + &#xD;
     					result.getContract(c).getSvcAgreementID());&#xD;
         		result.getContract(c).removeAllOffer();&#xD;
         	}&#xD;
         }&#xD;
         else {&#xD;
         	/* The Deliverables could have been included, as the flag IncludeUniqueOffers &#xD;
         	 * could be set in RequestCleaner() */ &#xD;
             if (!cr.getIncludeDeliverables()) {&#xD;
             	ESLog.debug(&quot;... remove the unwanted deliverables now&quot; );&#xD;
                 // offers are included but deliverable not&#xD;
             	for (int c=0; c&lt;result.getContractCount();c++) {&#xD;
             		for (int s=0; s&lt;result.getContract(c).getOfferCount();s++){&#xD;
             			// Delete the deliverables underneath the offer &#xD;
             			ESLog.debug(&quot;... remove all deliverables for offer code &quot; + &#xD;
             			result.getContract(c).getOffer(s).getOfferCode());&#xD;
             			result.getContract(c).getOffer(s).removeAllDeliverable();&#xD;
             		}&#xD;
             	}&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 	//End WITS.1464&#xD;
 	&#xD;
 	/*&#xD;
 	 * Adding customer identification&#xD;
 	 */&#xD;
 	if(cr.isIncludeCustomerIdentificationInformation() &amp;&amp; cqsReply.getCUSTOMERIDENTIFICATION() != null )  {&#xD;
 		result.setCustomerIdentification(MetroCustomerIdentificationTypeMapper.mapCUSTOMERIDENTIFICATION(cqsReply.getCUSTOMERIDENTIFICATION()));&#xD;
 	}&#xD;
 	// now we set the summary fields at the top&#xD;
	    result.setActiveContractEntitlement(MappingUtils.mapToBoolean(cqsReply.getACTIVECONTRACTENTITLEMENT()));&#xD;
	    result.setOverallContractEndDate(MappingUtils.mapToCastorDate(cqsReply.getOVERALLCONTRACTENDDATE()));&#xD;
	    result.setOverallContractStartDate(MappingUtils.mapToCastorDate(cqsReply.getOVERALLCONTRACTSTARTDATE()));&#xD;
	    return result;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbz9trTEeWv0eZvzLc0yA" name="map" method="_xZ_Y2drTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NldrTEeWv0eZvzLc0yA" type="_xVy1HtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NjtrTEeWv0eZvzLc0yA" name="MetroContractEntitlementMapper" visibility="package" method="_xZ_Y1NrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX_NktrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX_Nk9rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX_Nj9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NkNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NkdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NlNrTEeWv0eZvzLc0yA" type="_xQbz9drTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQbz99rTEeWv0eZvzLc0yA" name="MetroContractMapper" visibility="package">
                    <generalization xmi:id="_xWLPm9rTEeWv0eZvzLc0yA" general="_xQVGQNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjotrTEeWv0eZvzLc0yA" name="oHeadLocMap" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" isReadOnly="true" association="_xa8a49rTEeWv0eZvzLc0yA">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjo9rTEeWv0eZvzLc0yA" value="null"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y29rTEeWv0eZvzLc0yA" name="MetroContractMapper" specification="_xX_NltrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y3NrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y3drTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y3trTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y39rTEeWv0eZvzLc0yA" name="locationMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y4NrTEeWv0eZvzLc0yA" name="contactMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y4drTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y4trTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y49rTEeWv0eZvzLc0yA" type="_xQbz99rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction, generator, oosMap, locationMap, contactMap, oosKeyListMapbyOOSGroupId, ctx);&#xD;
		oHeadLocMap = new HashMap();&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y5NrTEeWv0eZvzLc0yA" name="map" specification="_xQbz-NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y5drTEeWv0eZvzLc0yA" name="includeOffers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y5trTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y59rTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y6NrTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y6drTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y6trTEeWv0eZvzLc0yA" name="includeOOSes">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y69rTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_Y7NrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(_transaction == null) {&#xD;
 		return new ContractComplexType[0];&#xD;
 	}&#xD;
 	&#xD;
 	Collection sapContracts = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getCONTRACTS().getItem();&#xD;
     ContractComplexType[] contracts = new ContractComplexType[sapContracts.size()];&#xD;
     &#xD;
     Collection sapOOSes = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getOOS().getItem();&#xD;
&#xD;
     ESLog.debug(&quot;Mapping &quot; + contracts.length + &quot; contracts ...&quot;);&#xD;
     int i=0;&#xD;
     //we go through all sap contracts&#xD;
     for (Iterator it=sapContracts.iterator(); it.hasNext(); ) {&#xD;
         contracts[i++] = mapContract((ZESCQSCONTRACTV1) it.next(),sapOOSes, includeOffers, includeDeliverables, includeModifiers,includeContact, includeLocation, includeOOSes);&#xD;
     }&#xD;
&#xD;
     // For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
 	_transaction.setOHeadLocMap(getOHeadLocMap());&#xD;
&#xD;
     return contracts;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y7drTEeWv0eZvzLc0yA" name="mapContract" specification="_xX_NodrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y7trTEeWv0eZvzLc0yA" name="input" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y79rTEeWv0eZvzLc0yA" name="sapOOSes" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y8NrTEeWv0eZvzLc0yA" name="includeOffers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y8drTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y8trTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y89rTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y9NrTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y9drTEeWv0eZvzLc0yA" name="includeOOSes">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_Y9trTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;Mapping contract: &quot; + input.getSVCAGREEMENTID());&#xD;
     ContractComplexType contract = new ContractComplexType();&#xD;
&#xD;
     // Add code to map contract fields&#xD;
     contract.setPortfolioFlag( MappingUtils.nullString(input.getPORTFOLIOFLAG()));&#xD;
     contract.setSvcAgreementID(MappingUtils.nullString(input.getSVCAGREEMENTID()));&#xD;
     contract.setActiveContractEntitlement(MappingUtils.mapToBoolean(input.getACTIVECONTRACTENTITLEMENT()));&#xD;
     contract.setHeaderStartDate(MappingUtils.mapToCastorDate(input.getHEADERSTARTDATE()));&#xD;
     contract.setHeaderEndDate(MappingUtils.mapToCastorDate(input.getHEADERENDDATE()));&#xD;
     &#xD;
     &#xD;
     ZESCQSOBLIGATIONHEADERV1 lastHeader =  getLatestObligationHeader(input);&#xD;
     ZESCQSOOS firstOOS =  getFirstOOS(sapOOSes );&#xD;
     &#xD;
     contract.setAMPID(MappingUtils.nullString(lastHeader.getAMPID()));&#xD;
     &#xD;
     /*&#xD;
      * Those fields only apply for blue&#xD;
&#xD;
     contract.setBlueSupportLevelForSGID()&#xD;
     contract.setBlueSupportLevelForSGIDSource()&#xD;
      */&#xD;
     &#xD;
     contract.setCCRN(getUniqueCCRN(input));&#xD;
     contract.setCdoPublishDate(MappingUtils.nullString(lastHeader.getCDOPUBLISHDATE()));&#xD;
     &#xD;
     contract.setCustomerSegment(MappingUtils.nullString(lastHeader.getCUSTOMERSEGMENT()));&#xD;
     contract.setCustServiceAgreement(MappingUtils.nullString(lastHeader.getCUSTSERVICEAGREEMENT()));&#xD;
     if(includeOOSes &amp;&amp; firstOOS != null) {&#xD;
     	contract.setDataEntrySite(MappingUtils.nullString(firstOOS.getDATAENTRYSITE()));&#xD;
     }&#xD;
     &#xD;
     &#xD;
    &#xD;
     &#xD;
     /* Blue not mapped&#xD;
     contract.setOOSGroupID()&#xD;
     contract.setMissionCritical()&#xD;
     contract.setPenalty()&#xD;
     contract.setRCXDescription()&#xD;
     contract.setRCXResponsibleEngineer()&#xD;
     contract.setRCXResponsibleEngineer()&#xD;
     contract.setRCXServiceLevel()&#xD;
     contract.setSysModel()&#xD;
     contract.setSysType()                 &#xD;
     */&#xD;
     contract.setSpecialHandling(getSpecialHandling(input));&#xD;
     contract.setSupportGroupID(MappingUtils.nullString(lastHeader.getSUPPORTGROUPID()));&#xD;
&#xD;
     &#xD;
&#xD;
     &#xD;
     /*&#xD;
      * Contract identifier for pmCPQ contracts only&#xD;
     contract.setRedContractID()&#xD;
     */&#xD;
     &#xD;
     &#xD;
 &#xD;
     &#xD;
     &#xD;
     List&lt;ZESPRODUCTTYPE> enumSvc =  input.getSVCPRODUCTTYPES().getItem();&#xD;
     &#xD;
     //adding svc product type&#xD;
     for (ZESPRODUCTTYPE zesproducttype : enumSvc) {&#xD;
         contract.addSvcProductType(MappingUtils.nullString(zesproducttype.getSVCPRODUCTTYPE()));&#xD;
     }       &#xD;
     // Add code to map ObligationHeaders&#xD;
     List&lt;ZESCQSOBLIGATIONHEADERV1> enumObj = input.getOBLIGATIONHEADERS().getItem();&#xD;
     HashMap offerForThisObligation = new HashMap();&#xD;
     //a hash map for obligation offer&#xD;
     for (ZESCQSOBLIGATIONHEADERV1 header : enumObj) {&#xD;
     	//WE map the PRODUCT_SHIP_TO_COUNTRY_CODE&#xD;
     	contract.setProductShipToCountryCode(MappingUtils.nullString(header.getPRODUCTSHIPTOCOUNTRYCODE()));&#xD;
     	mapAddressAndLocation(contract,header, includeContact, includeLocation);&#xD;
     	&#xD;
     	if(includeOffers) {&#xD;
	        	List&lt;ZESCQSSERVICE> serviceList = header.getSERVICES().getItem();&#xD;
&#xD;
	        	ESLog.debug(&quot;Creating&quot;+header.getSERVICES().getItem().size()+&quot; offers.&quot;);&#xD;
	        	for (ZESCQSSERVICE service : serviceList) {&#xD;
	        		ESLog.debug(&quot;Creating offer &quot; +service.getITEM() + &quot; for obligation &quot;+header.getSOURCEOBLIGATIONID());&#xD;
	        		OfferMapper mapper = new MetroOfferMapper(service, _XMLIdGenerator, _oosMap, _oosKeyListMapbyOOSGroupId, _ctx, getFirstOOS(sapOOSes));&#xD;
	        		OfferComplexType offerTmp = mapper.map(includeDeliverables, includeModifiers, header.getSOURCEOBLIGATIONID()); &#xD;
	        		contract.addOffer(offerTmp);&#xD;
	        		offerForThisObligation.put(service.getITEM(),offerTmp);&#xD;
	        	}&#xD;
     	}&#xD;
     	&#xD;
     	&#xD;
     	ObligationHeaderMapper mapper = new MetroObligationHeaderMapper(header,_XMLIdGenerator,offerForThisObligation, _ctx);&#xD;
     	//Adding the obligation header&#xD;
     	ObligationHeader ohTmp = mapper.map();&#xD;
     	contract.addObligationHeader(mapper.map());&#xD;
     	if(_ctx != null) { &#xD;
     		ObligationHeaderKey key = new ObligationHeaderKey(ohTmp.getSourceObligationID());&#xD;
             _ctx.addObligationHeader(key, ohTmp);&#xD;
             _ctx.addContract(key, contract);&#xD;
     	}&#xD;
     	offerForThisObligation.clear();&#xD;
&#xD;
     }&#xD;
     &#xD;
&#xD;
     &#xD;
     return contract;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y99rTEeWv0eZvzLc0yA" name="getSpecialHandling" specification="_xX_Nq9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y-NrTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y-drTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>List&lt;ZESCQSOBLIGATIONHEADERV1> enumHeader = cqsContract.getOBLIGATIONHEADERS().getItem(); &#xD;
		for (ZESCQSOBLIGATIONHEADERV1 tmp : enumHeader) {&#xD;
			if(MappingUtils.mapToBoolean(tmp.getSPECIALHANDLING())) {&#xD;
				return true;&#xD;
			}&#xD;
		}&#xD;
		return false;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y-trTEeWv0eZvzLc0yA" name="getUniqueCCRN" specification="_xX_NrtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y-9rTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y_NrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>String ccrn = null;&#xD;
		List&lt;ZESCQSOBLIGATIONHEADERV1> enumHeader = cqsContract.getOBLIGATIONHEADERS().getItem(); &#xD;
		for (ZESCQSOBLIGATIONHEADERV1 tmp : enumHeader) {&#xD;
			if(ccrn == null) {&#xD;
				ccrn = tmp.getCCRN();&#xD;
			}&#xD;
			if(ccrn.compareToIgnoreCase(tmp.getCCRN()) != 0) {&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
		return ccrn;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_Y_drTEeWv0eZvzLc0yA" name="getFirstOOS" specification="_xX_NsdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_Y_trTEeWv0eZvzLc0yA" name="sapOOSes" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_Y_9rTEeWv0eZvzLc0yA" type="_xWLPldrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ZESCQSOOS first = null;&#xD;
		if(sapOOSes != null &amp;&amp; !sapOOSes.isEmpty()) {&#xD;
			Iterator it = sapOOSes.iterator();&#xD;
			//If not empty we can do that safely&#xD;
			first = (ZESCQSOOS)it.next();&#xD;
			&#xD;
		} &#xD;
		return first;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZANrTEeWv0eZvzLc0yA" name="mapAddressAndLocation" specification="_xYFUENrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZAdrTEeWv0eZvzLc0yA" name="contract" type="_xVCAL9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZAtrTEeWv0eZvzLc0yA" name="header" type="_xWLPkdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZA9rTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZBNrTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>// Note: The ID on the header level needs to be always set. Only the references will be set if the request&#xD;
		//       had the include flag set to true&#xD;
		&#xD;
		// CONTACT&#xD;
		if(header.getOBLIGATIONCONTACT() != null) {&#xD;
			List&lt;ZESCQSOBLIGATIONCONTACT> enumOBLIGATION_CONTACT = header.getOBLIGATIONCONTACT().getItem();&#xD;
			for (ZESCQSOBLIGATIONCONTACT contact : enumOBLIGATION_CONTACT) {&#xD;
				// SYSTEM MGR&#xD;
				if(&quot;SystemMgr&quot;.equalsIgnoreCase(contact.getOBLIGCONTACTROLE())) {&#xD;
					contract.setSystemMgrPersonID(contact.getOBLIGSOURCEPERSONID());&#xD;
					if(includeContact) {&#xD;
						contract.setSystemMgrPersonRef(_contactMap.get(contact.getOBLIGSOURCEPERSONID()));&#xD;
					}&#xD;
				// SW SHIP TO&#xD;
				} else if(&quot;SWShipTo&quot;.equalsIgnoreCase(contact.getOBLIGCONTACTROLE())) { &#xD;
					contract.setSWShipToPersonID(contact.getOBLIGSOURCEPERSONID());&#xD;
					if(includeContact) {&#xD;
						contract.setSWShipToPersonRef(_contactMap.get(contact.getOBLIGSOURCEPERSONID()));&#xD;
					}&#xD;
				// HW SHIP TO&#xD;
				} else if(&quot;HWShipTo&quot;.equalsIgnoreCase(contact.getOBLIGCONTACTROLE())) {&#xD;
					contract.setHWShipToPersonID(contact.getOBLIGSOURCEPERSONID());&#xD;
					if(includeContact) {&#xD;
						contract.setHWShipToPersonRef(_contactMap.get(contact.getOBLIGSOURCEPERSONID()));&#xD;
					}&#xD;
				// HP ADMIN&#xD;
				} else if(&quot;Admin&quot;.equalsIgnoreCase(contact.getOBLIGCONTACTROLE())) {&#xD;
					ESLog.info(&quot;++++++++++++++++++++Admin ++++++++++++++++&quot;);&#xD;
					contract.setHPAdminPersonID(contact.getOBLIGSOURCEPERSONID());&#xD;
					if(includeContact) {&#xD;
						contract.setHPAdminPersonRef(_contactMap.get(contact.getOBLIGSOURCEPERSONID()));&#xD;
					}&#xD;
				// ORDERER&#xD;
				} else if(&quot;Orderer&quot;.equalsIgnoreCase(contact.getOBLIGCONTACTROLE())) {&#xD;
					contract.setOrdererPersonID(contact.getOBLIGSOURCEPERSONID());&#xD;
					if(includeContact) {&#xD;
						contract.setOrdererPersonRef(_contactMap.get(contact.getOBLIGSOURCEPERSONID()));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// LOCATION&#xD;
		if(header.getOBLIGATIONLOCATION() != null) {&#xD;
			List&lt;ZESCQSOBLIGATIONLOCATION> enumOBLIGATION_LOCATION = header.getOBLIGATIONLOCATION().getItem();&#xD;
			for (ZESCQSOBLIGATIONLOCATION location : enumOBLIGATION_LOCATION) {&#xD;
				// SOLD TO&#xD;
				if(&quot;SoldTo&quot;.equalsIgnoreCase(location.getOBLIGADDRROLE())) {&#xD;
					contract.setSoldToCustomerID(location.getOBLIGSOURCECUSTOMERID());&#xD;
					if(includeLocation) {&#xD;
						contract.setSoldToCustomerRef(_locationMap.get(location.getOBLIGSOURCECUSTOMERID()));&#xD;
					}&#xD;
					&#xD;
					// For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
	          	  	ObligHeaderLocation oHeadLoc = new ObligHeaderLocation();&#xD;
	          	  	oHeadLoc.setSourceObligationId(header.getSOURCEOBLIGATIONID());&#xD;
	          	  	oHeadLoc.setSourceCustomerId(location.getOBLIGSOURCECUSTOMERID());&#xD;
	          	  	oHeadLoc.setObligHeaderRole(location.getOBLIGADDRROLE());&#xD;
	          	  	if(!oHeadLocMap.containsKey(header.getSOURCEOBLIGATIONID())){&#xD;
		          	    oHeadLocMap.put(header.getSOURCEOBLIGATIONID(),oHeadLoc);	          	  		&#xD;
	          	  	}&#xD;
					&#xD;
					&#xD;
				// SW SHIP TO&#xD;
				} else if(&quot;SWShipTo&quot;.equalsIgnoreCase(location.getOBLIGADDRROLE())) { &#xD;
					contract.setSWShipToCustomerID(location.getOBLIGSOURCECUSTOMERID());&#xD;
					if(includeLocation) {&#xD;
						contract.setSWShipToCustomerRef(_locationMap.get(location.getOBLIGSOURCECUSTOMERID()));&#xD;
					}&#xD;
				// PRODUCT SHIP TO&#xD;
				} else if(&quot;ProductShipTo&quot;.equalsIgnoreCase(location.getOBLIGADDRROLE())) {&#xD;
					contract.setProductShipToCustomerID(location.getOBLIGSOURCECUSTOMERID());&#xD;
					if(includeLocation) {&#xD;
						contract.setProductShipToCustomerRef(_locationMap.get(location.getOBLIGSOURCECUSTOMERID()));&#xD;
					}&#xD;
				// ORDERING PARTY&#xD;
				} else if(&quot;OrderingParty&quot;.equalsIgnoreCase(location.getOBLIGADDRROLE())) {&#xD;
					contract.setOrderingPartyCustomerID(location.getOBLIGSOURCECUSTOMERID());&#xD;
					if(includeLocation) {&#xD;
						contract.setOrderingPartyCustomerRef(_locationMap.get(location.getOBLIGSOURCECUSTOMERID()));&#xD;
					}&#xD;
					//PSP&#xD;
				}else if(&quot;PSP&quot;.equalsIgnoreCase(location.getOBLIGADDRROLE())) {&#xD;
					contract.setPSPCustomerID(location.getOBLIGSOURCECUSTOMERID());					&#xD;
					if(includeLocation) {&#xD;
						contract.setPSPCustomerRef(_locationMap.get(location.getOBLIGSOURCECUSTOMERID()));&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZBdrTEeWv0eZvzLc0yA" name="getLatestObligationHeader" specification="_xYFUFdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZBtrTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZB9rTEeWv0eZvzLc0yA" type="_xWLPkdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ZESCQSOBLIGATIONHEADERV1 latestObligationHeader = null;&#xD;
		&#xD;
		List&lt;ZESCQSOBLIGATIONHEADERV1> enumHeader = cqsContract.getOBLIGATIONHEADERS().getItem(); &#xD;
		for (ZESCQSOBLIGATIONHEADERV1 tmp : enumHeader) {&#xD;
			if(latestObligationHeader == null) {&#xD;
				latestObligationHeader = tmp;&#xD;
			}&#xD;
			Date dTmp = DateHelper.mapIsoDate2JavaDate(tmp.getCDOPUBLISHDATE());&#xD;
			Date dlatest = DateHelper.mapIsoDate2JavaDate(latestObligationHeader.getCDOPUBLISHDATE());&#xD;
			if (DateHelper.isGreater(dTmp,dlatest)) {&#xD;
				latestObligationHeader = tmp;&#xD;
				&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return latestObligationHeader;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQbz-NrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_Y5NrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQbz-drTEeWv0eZvzLc0yA" name="includeOffers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz-trTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz-9rTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz_NrTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz_drTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz_trTEeWv0eZvzLc0yA" name="includeOOSes">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQbz_9rTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQb0ANrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NltrTEeWv0eZvzLc0yA" name="MetroContractMapper" visibility="package" method="_xZ_Y29rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xX_NntrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xX_Nn9rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xX_Nl9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NmNrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NmdrTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NmtrTEeWv0eZvzLc0yA" name="locationMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Nm9rTEeWv0eZvzLc0yA" name="contactMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NnNrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NndrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NoNrTEeWv0eZvzLc0yA" type="_xQbz99rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NodrTEeWv0eZvzLc0yA" name="mapContract" visibility="protected" method="_xZ_Y7drTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NotrTEeWv0eZvzLc0yA" name="input" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_No9rTEeWv0eZvzLc0yA" name="sapOOSes" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NpNrTEeWv0eZvzLc0yA" name="includeOffers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NpdrTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NptrTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_Np9rTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NqNrTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NqdrTEeWv0eZvzLc0yA" name="includeOOSes">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xX_NqtrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_Nq9rTEeWv0eZvzLc0yA" name="getSpecialHandling" visibility="protected" method="_xZ_Y99rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NrNrTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NrdrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NrtrTEeWv0eZvzLc0yA" name="getUniqueCCRN" visibility="protected" method="_xZ_Y-trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_Nr9rTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_NsNrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xX_NsdrTEeWv0eZvzLc0yA" name="getFirstOOS" visibility="protected" method="_xZ_Y_drTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xX_NstrTEeWv0eZvzLc0yA" name="sapOOSes" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xX_Ns9rTEeWv0eZvzLc0yA" type="_xWLPldrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUENrTEeWv0eZvzLc0yA" name="mapAddressAndLocation" visibility="protected" method="_xZ_ZANrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUEdrTEeWv0eZvzLc0yA" name="contract" type="_xVCAL9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUEtrTEeWv0eZvzLc0yA" name="header" type="_xWLPkdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUE9rTEeWv0eZvzLc0yA" name="includeContact">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYFUFNrTEeWv0eZvzLc0yA" name="includeLocation">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUFdrTEeWv0eZvzLc0yA" name="getLatestObligationHeader" visibility="protected" method="_xZ_ZBdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUFtrTEeWv0eZvzLc0yA" name="cqsContract" type="_xWFJCtrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUF9rTEeWv0eZvzLc0yA" type="_xWLPkdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQb0AtrTEeWv0eZvzLc0yA" name="MetroCustomerIdentificationTypeMapper" visibility="package">
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZCNrTEeWv0eZvzLc0yA" name="mapCQSSegmentToEsSegment" specification="_xYFUGNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZCdrTEeWv0eZvzLc0yA" name="endcustomeramidl2segments" type="_xWLPoNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZCtrTEeWv0eZvzLc0yA" type="_xWLPotrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZC9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>ArrayList &lt;AccountSegmentType>  list = new ArrayList&lt;AccountSegmentType>  () ;&#xD;
&#xD;
		if(endcustomeramidl2segments != null &amp;&amp; endcustomeramidl2segments.getItem() !=null) {&#xD;
			Iterator &lt;ZESCQSCUSTOMERSEGMENT> listTmp=endcustomeramidl2segments.getItem().iterator();&#xD;
			&#xD;
			while(listTmp.hasNext()) {&#xD;
				ZESCQSCUSTOMERSEGMENT seg = listTmp.next();&#xD;
				AccountSegmentType tmpAccount = new AccountSegmentType();&#xD;
				list.add(tmpAccount);&#xD;
				&#xD;
				tmpAccount.setAccountSegmentCode(MappingUtils.nullString(seg.getSEGMENTCODE()));&#xD;
				tmpAccount.setAccountSegmentOwnerCode(MappingUtils.nullString(seg.getSEGMENTOWNERCODE()));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
&#xD;
		AccountSegmentType[] returnArray = new AccountSegmentType[list.size()] ;&#xD;
		return list.toArray(returnArray);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZDNrTEeWv0eZvzLc0yA" name="mapCUSTOMERIDENTIFICATION" specification="_xYFUHdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZDdrTEeWv0eZvzLc0yA" name="ci" type="_xWLPnNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZDtrTEeWv0eZvzLc0yA" type="_xWLPpNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>CustomerIdentificationType cit = null;&#xD;
		if(ci != null) {&#xD;
			cit = new CustomerIdentificationType();&#xD;
			cit.setEndCustomerAMIDL2AccountSegment(mapCQSSegmentToEsSegment(ci.getENDCUSTOMERAMIDL2SEGMENTS()));&#xD;
			cit.setEndCustomerAMIDL2Identifier(MappingUtils.nullString(ci.getENDCUSTOMERAMIDL2ID()));&#xD;
			cit.setEndCustomerAMIDL3AccountSegment(mapCQSSegmentToEsSegment(ci.getENDCUSTOMERAMIDL3SEGMENTS()));&#xD;
			cit.setEndCustomerAMIDL3Identifier(MappingUtils.nullString(ci.getENDCUSTOMERAMIDL3ID()));&#xD;
			cit.setEndCustomerAMIDL4AccountSegment(mapCQSSegmentToEsSegment(ci.getENDCUSTOMERAMIDL4SEGMENTS()));&#xD;
			cit.setEndCustomerAMIDL4Identifier(MappingUtils.nullString(ci.getENDCUSTOMERAMIDL4ID()));&#xD;
			&#xD;
			cit.setSiteLevelCustomerIdentifier(MappingUtils.nullString(ci.getSITELEVELCUSTOMERID()));&#xD;
		}&#xD;
		return cit;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xYFUGNrTEeWv0eZvzLc0yA" name="mapCQSSegmentToEsSegment" visibility="private" isStatic="true" method="_xZ_ZCNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUGdrTEeWv0eZvzLc0yA" name="endcustomeramidl2segments" type="_xWLPoNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUGtrTEeWv0eZvzLc0yA" type="_xWLPotrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xYFUG9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUHdrTEeWv0eZvzLc0yA" name="mapCUSTOMERIDENTIFICATION" isStatic="true" method="_xZ_ZDNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUHtrTEeWv0eZvzLc0yA" name="ci" type="_xWLPnNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUH9rTEeWv0eZvzLc0yA" type="_xWLPpNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQcbANrTEeWv0eZvzLc0yA" name="MetroDeliverableMapper" visibility="package">
                    <generalization xmi:id="_xWLPqtrTEeWv0eZvzLc0yA" general="_xQVGS9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZD9rTEeWv0eZvzLc0yA" name="MetroDeliverableMapper" specification="_xYFUINrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZENrTEeWv0eZvzLc0yA" name="del" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZEdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZEtrTEeWv0eZvzLc0yA" type="_xQcbANrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(del, ctx);&#xD;
		&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZE9rTEeWv0eZvzLc0yA" name="map" specification="_xQdCENrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZFNrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZFdrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZFtrTEeWv0eZvzLc0yA" type="_xVCAMdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ZESCQSDELIVERABLE delObj =  (ZESCQSDELIVERABLE) _del;&#xD;
		Deliverable deliverable = new Deliverable();&#xD;
		ESLog.debug(&quot;Mapping Deliverable (Deliverable): &quot;);&#xD;
		/*  CQS                     ES&#xD;
		 * Deliverable	DelivCode	Deliverable	DelivCode&#xD;
		 * Deliverable	DelivName	Deliverable	DelivName&#xD;
		 * Deliverable	DelivValue	Deliverable	DelivValue&#xD;
		 */&#xD;
		&#xD;
		deliverable.setDelivCode(MappingUtils.nullString(delObj.getDELIVCODE()));&#xD;
		deliverable.setDelivName(MappingUtils.nullString(delObj.getDELIVNAME()));&#xD;
		deliverable.setDelivValue(MappingUtils.nullString(delObj.getDELIVVALUE()));&#xD;
		&#xD;
		deliverable.setDelivModifier(mapDelivModifiers(delObj.getDELIVMODIFIERS().getItem(), sourceObligationId, item));&#xD;
		&#xD;
		if(_ctx != null) {&#xD;
	        String name = deliverable.getDelivName();&#xD;
	        String dlvCode = deliverable.getDelivCode();&#xD;
	        DeliverableKey key = new DeliverableKey(sourceObligationId, item, name, dlvCode);&#xD;
	        _ctx.addDeliverable(key, deliverable);&#xD;
		}		&#xD;
		&#xD;
		&#xD;
		return deliverable;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZF9rTEeWv0eZvzLc0yA" name="mapDelivModifiers" specification="_xYFUJ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZGNrTEeWv0eZvzLc0yA" name="list" type="_xV47ttrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZGdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZGtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZG9rTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZHNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>ModifierComplexType[] delModifiers = null;&#xD;
		ArrayList listDelModifiers = new ArrayList();&#xD;
		&#xD;
		&#xD;
		&#xD;
		//going through modifiers&#xD;
		for (ZESCQSMODIFIER delMod : list) {&#xD;
			ModifierMapper mapper = new MetroModifierMapper(delMod);&#xD;
			ModifierComplexType delModTmp = mapper.map();&#xD;
			listDelModifiers.add(mapper.map());&#xD;
			if(_ctx != null) {&#xD;
		        String name               =delModTmp.getModName();&#xD;
		        String redDlvCode         = delModTmp.getModValue();&#xD;
		        String modName            = delModTmp.getModName();&#xD;
		        String redModCode         = &quot;&quot;;&#xD;
&#xD;
		        DelivModifierKey key = new DelivModifierKey(sourceObligationId, item,&#xD;
		                                                    name, redDlvCode,&#xD;
		                                                    modName, redModCode );				&#xD;
&#xD;
		        _ctx.addDelivModifier(key, delModTmp);&#xD;
			}	&#xD;
		}&#xD;
		&#xD;
&#xD;
		delModifiers =(ModifierComplexType[]) listDelModifiers.toArray(new ModifierComplexType[0]);&#xD;
		&#xD;
		return delModifiers;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQdCENrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_ZE9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQdCEdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQdCEtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYFUJtrTEeWv0eZvzLc0yA" type="_xVCAMdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUINrTEeWv0eZvzLc0yA" name="MetroDeliverableMapper" visibility="package" method="_xZ_ZD9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYFUI9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYFUJNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYFUIdrTEeWv0eZvzLc0yA" name="del" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUItrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUJdrTEeWv0eZvzLc0yA" type="_xQcbANrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUJ9rTEeWv0eZvzLc0yA" name="mapDelivModifiers" visibility="protected" method="_xZ_ZF9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUKNrTEeWv0eZvzLc0yA" name="list" type="_xV47ttrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUKdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYFUKtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYFUK9rTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xYFULNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQpPUNrTEeWv0eZvzLc0yA" name="MetroErrorMapper" visibility="package">
                    <ownedComment xmi:id="_xaXzi9rTEeWv0eZvzLc0yA">
                      <body>101	Incorrect Contract Identifier Type provided => 201&#xD;
102	Incorrect Check Date provided - Allowed range: -90 days/+1day around current date => 201&#xD;
103	Mandatory Serial Number has not  been provided	=> 200&#xD;
104	Mandatory Contract Identifier has not  been provided => 200&#xD;
105	Invalid ISO Country Code provided	=> 201&#xD;
106	Invalid MaxOOSesNo provided. Allowed range: 0 - 9999, or empty for no limitation => 201&#xD;
108	Mandatory Service Agreement ID  has not  been provided	=> 201&#xD;
201	No entries found	=> 300&#xD;
202	Found Contract XXXXX  is invalid - No ISO Country Code for ProductShipTo Location exists => 237&#xD;
899	Internal error - Any unanticipated error occurred during the processing of the request	=> 434</body>
                    </ownedComment>
                    <generalization xmi:id="_xWLPrdrTEeWv0eZvzLc0yA" general="_xQVGT9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZHdrTEeWv0eZvzLc0yA" name="MetroErrorMapper" specification="_xYFUL9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZHtrTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZH9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZINrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZIdrTEeWv0eZvzLc0yA" type="_xQpPUNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(cqsErrors, request, sapRegionDisplayName);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZItrTEeWv0eZvzLc0yA" name="map" specification="_xQpPUdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZI9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>if(_cqsErrors == null) {&#xD;
 		return null;&#xD;
 	}&#xD;
&#xD;
  	ESLog.debug(&quot;Mapping errors ...&quot;);&#xD;
  	ArrayList&lt;SifException> eiaErrors = new ArrayList&lt;SifException>();&#xD;
&#xD;
 	Iterator&lt;?> iterator = _cqsErrors.iterator();&#xD;
 	while(iterator.hasNext()) {&#xD;
 		SifException se = mapError((ZESCQSMESSAGE) iterator.next());&#xD;
 		if(se != null) {&#xD;
 			eiaErrors.add(se);&#xD;
 		}&#xD;
 	}&#xD;
     return eiaErrors;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZJNrTEeWv0eZvzLc0yA" name="mapError" specification="_xYFUONrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZJdrTEeWv0eZvzLc0yA" name="cqsMessage" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZJtrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return mapError((ZESCQSMESSAGE) cqsMessage);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZJ9rTEeWv0eZvzLc0yA" name="mapError" specification="_xYFUO9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZKNrTEeWv0eZvzLc0yA" name="cqsMessage" type="_xWLPq9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZKdrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>String errorId =cqsMessage.getMSGNO().toString();&#xD;
&#xD;
		String mappedId =(String) _errorIdMap.get(errorId);&#xD;
&#xD;
&#xD;
&#xD;
		int sifErrorId = Integer.parseInt(mappedId);&#xD;
		if((mappedId != null) &amp;&amp; (sifErrorId != ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE)) {&#xD;
         ESLog.debug(&quot;CQS errorId: &quot; + errorId + &quot;. CQS errorMessage: &quot; + cqsMessage.getMESSAGE() + &quot;. It is mapped to ES errorId &quot; + mappedId);&#xD;
			String reason = (String) _parameterTypeMap.get(errorId);&#xD;
			if(reason != null) {&#xD;
				return ErrorFactory.getSifException(sifErrorId,reason);&#xD;
			}else {&#xD;
				return ErrorFactory.getSifException(sifErrorId);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
		return ErrorFactory.getSifException(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE,_sapRegionDisplayName);&#xD;
&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQpPUdrTEeWv0eZvzLc0yA" name="map" method="_xZ_ZItrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUN9rTEeWv0eZvzLc0yA" type="_xVy1INrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUL9rTEeWv0eZvzLc0yA" name="MetroErrorMapper" visibility="protected" method="_xZ_ZHdrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYFUM9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYFUNNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYFUMNrTEeWv0eZvzLc0yA" name="cqsErrors" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUMdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUMtrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYFUNdrTEeWv0eZvzLc0yA" type="_xQpPUNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUONrTEeWv0eZvzLc0yA" name="mapError" visibility="protected" method="_xZ_ZJNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUOdrTEeWv0eZvzLc0yA" name="cqsMessage" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUOtrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUO9rTEeWv0eZvzLc0yA" name="mapError" visibility="protected" method="_xZ_ZJ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUPNrTEeWv0eZvzLc0yA" name="cqsMessage" type="_xWLPq9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUPdrTEeWv0eZvzLc0yA" type="_xU75etrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQpPU9rTEeWv0eZvzLc0yA" name="MetroLocationMapper" visibility="package">
                    <generalization xmi:id="_xWRWMtrTEeWv0eZvzLc0yA" general="_xQbM4NrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZKtrTEeWv0eZvzLc0yA" name="MetroLocationMapper" specification="_xYFUPtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZK9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZLNrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZLdrTEeWv0eZvzLc0yA" type="_xQpPU9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction,XMLIdGenerator);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZLtrTEeWv0eZvzLc0yA" name="map" specification="_xQpPVNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZL9rTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZMNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(_transaction == null) {&#xD;
 		return new LocationComplexType[0];&#xD;
 	}&#xD;
 	&#xD;
 	List&lt;ZESCQSLOCATION> sapLocations = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getLOCATIONS().getItem();&#xD;
 	&#xD;
     LocationComplexType[] locations = new LocationComplexType[((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getLOCATIONS().getItem().size()];&#xD;
     &#xD;
&#xD;
     ESLog.debug(&quot;Mapping &quot; + locations.length + &quot; locations ...&quot;);&#xD;
     int i=0;&#xD;
     for (ZESCQSLOCATION location : sapLocations) {&#xD;
     	locations[i++] = mapLocation(location);&#xD;
     }&#xD;
     return locations;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZMdrTEeWv0eZvzLc0yA" name="mapLocation" specification="_xYFURNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZMtrTEeWv0eZvzLc0yA" name="input" type="_xWRWMNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZM9rTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;Mapping location: &quot;);&#xD;
     LocationComplexType location = new LocationComplexType();&#xD;
     location.setSourceCustomerID(input.getSOURCECUSTOMERID());               &#xD;
     addPSPId( input,  location); // PSP location added&#xD;
     location.setId(_XMLIdGenerator.nextId());&#xD;
     location.setCity(MappingUtils.nullString(input.getCITY()));&#xD;
     location.setFmtAddrLine1(MappingUtils.nullString(input.getFMTADDRLINE1()));&#xD;
     location.setFmtAddrLine2(MappingUtils.nullString(input.getFMTADDRLINE2()));&#xD;
     location.setFmtAddrLine3(MappingUtils.nullString(input.getFMTADDRLINE3()));&#xD;
     location.setFmtAddrLine4(MappingUtils.nullString(input.getFMTADDRLINE4()));&#xD;
     location.setFmtAddrLine5(MappingUtils.nullString(input.getFMTADDRLINE5()));&#xD;
     location.setGeographicArea(MappingUtils.nullString(input.getGEOGRAPHICAREA()));&#xD;
     location.setIsoCountryCd(MappingUtils.nullString(input.getISOCOUNTRYCD()));&#xD;
     location.setPostalCode(MappingUtils.nullString(input.getPOSTALCODE()));&#xD;
     location.setSiteBusinessName1(MappingUtils.nullString(input.getSITEBUSINESSNAME1()));&#xD;
     location.setSiteBusinessName2(MappingUtils.nullString(input.getSITEBUSINESSNAME2()));&#xD;
     location.setSiteBusinessName3(MappingUtils.nullString(input.getSITEBUSINESSNAME3()));&#xD;
     location.setSiteBusinessName4(MappingUtils.nullString(input.getSITEBUSINESSNAME4()));&#xD;
     location.setStreetAddr1(MappingUtils.nullString(input.getSTREETADDR1()));&#xD;
     location.setStreetAddr2(MappingUtils.nullString(input.getSTREETADDR2()));&#xD;
&#xD;
     if(_ctx != null) {&#xD;
         LocationKey key = new LocationKey(location.getSourceCustomerID());&#xD;
         _ctx.addLocation(key, location);        	&#xD;
     }&#xD;
     return location;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZNNrTEeWv0eZvzLc0yA" name="addPSPId" specification="_xYFUR9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZNdrTEeWv0eZvzLc0yA" name="input" type="_xWRWMNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZNtrTEeWv0eZvzLc0yA" name="location" type="_xVCAM9rTEeWv0eZvzLc0yA"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;addPSPId begin &quot;);&#xD;
 	 &#xD;
 	Collection sapContracts = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getCONTRACTS().getItem();&#xD;
      &#xD;
     for (Iterator it = sapContracts.iterator(); it.hasNext(); ) {&#xD;
     	ZESCQSCONTRACTV1 zESCQSCONTRACTV1 = (ZESCQSCONTRACTV1) it.next(); &#xD;
     	if(zESCQSCONTRACTV1.getOBLIGATIONHEADERS() != null) {&#xD;
	         	List&lt;ZESCQSOBLIGATIONHEADERV1> enumObj = zESCQSCONTRACTV1.getOBLIGATIONHEADERS().getItem();&#xD;
	         	for (ZESCQSOBLIGATIONHEADERV1 header : enumObj) {&#xD;
	         		if(header.getOBLIGATIONLOCATION() != null) { &#xD;
	         			List&lt;ZESCQSOBLIGATIONLOCATION> enumOBLIGATION_LOCATION = header.getOBLIGATIONLOCATION().getItem();&#xD;
		         		for (ZESCQSOBLIGATIONLOCATION zesCQSOBLIGATIONLOCATION : enumOBLIGATION_LOCATION) {&#xD;
		         			String oBLIGSOURCECUSTOMERID = zesCQSOBLIGATIONLOCATION.getOBLIGSOURCECUSTOMERID();&#xD;
			         		if(&quot;PSP&quot;.equalsIgnoreCase(zesCQSOBLIGATIONLOCATION.getOBLIGADDRROLE()) &amp;&amp; &#xD;
			         				( oBLIGSOURCECUSTOMERID != null &amp;&amp; &#xD;
			         						oBLIGSOURCECUSTOMERID.equalsIgnoreCase(input.getSOURCECUSTOMERID())) ) { // check against role and customer id&#xD;
			         			location.setPSPID(input.getSOURCECUSTOMERID()); //PSP id will be added&#xD;
			         			ESLog.debug(&quot;PSP ID added &quot;+ location.getPSPID());&#xD;
			         		}&#xD;
		         		}	         		&#xD;
	         		}&#xD;
	         	}&#xD;
     	}&#xD;
      	&#xD;
     }&#xD;
     ESLog.debug(&quot;addPSPId end &quot;);&#xD;
 	 &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQpPVNrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_ZLtrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQpPVdrTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQpPVtrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUPtrTEeWv0eZvzLc0yA" name="MetroLocationMapper" visibility="package" method="_xZ_ZKtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYFUQdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYFUQtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYFUP9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUQNrTEeWv0eZvzLc0yA" name="XMLIdGenerator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUQ9rTEeWv0eZvzLc0yA" type="_xQpPU9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFURNrTEeWv0eZvzLc0yA" name="mapLocation" visibility="protected" method="_xZ_ZMdrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFURdrTEeWv0eZvzLc0yA" name="input" type="_xWRWMNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFURtrTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUR9rTEeWv0eZvzLc0yA" name="addPSPId" visibility="private" method="_xZ_ZNNrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUSNrTEeWv0eZvzLc0yA" name="input" type="_xWRWMNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUSdrTEeWv0eZvzLc0yA" name="location" type="_xVCAM9rTEeWv0eZvzLc0yA"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQpPWNrTEeWv0eZvzLc0yA" name="MetroModifierMapper" visibility="package">
                    <ownedComment xmi:id="_xaXzjNrTEeWv0eZvzLc0yA">
                      <body>@author anvoi&#xD;
 *</body>
                    </ownedComment>
                    <generalization xmi:id="_xWRWM9rTEeWv0eZvzLc0yA" general="_xQ1ckdrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZN9rTEeWv0eZvzLc0yA" name="MetroModifierMapper" specification="_xYFUStrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZONrTEeWv0eZvzLc0yA" name="modifier" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZOdrTEeWv0eZvzLc0yA" type="_xQpPWNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(modifier);&#xD;
&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZOtrTEeWv0eZvzLc0yA" name="map" specification="_xQpPWdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZO9rTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ZESCQSMODIFIER modifier = (ZESCQSMODIFIER)_modifierObject;&#xD;
		ModifierComplexType mod = new ModifierComplexType();&#xD;
		ESLog.debug(&quot;Mapping modifier &quot;);&#xD;
		&#xD;
		mod.setModDesc(MappingUtils.nullString(modifier.getMODDESC()));&#xD;
		mod.setModName(MappingUtils.nullString(modifier.getMODNAME()));&#xD;
		mod.setModValue(MappingUtils.nullString(modifier.getMODVALUE()));&#xD;
		return mod;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQpPWdrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_ZOtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUT9rTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUStrTEeWv0eZvzLc0yA" name="MetroModifierMapper" visibility="package" method="_xZ_ZN9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYFUTNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYFUTdrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYFUS9rTEeWv0eZvzLc0yA" name="modifier" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUTtrTEeWv0eZvzLc0yA" type="_xQpPWNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQpPWtrTEeWv0eZvzLc0yA" name="MetroObligationHeaderMapper" visibility="package">
                    <generalization xmi:id="_xWRWNNrTEeWv0eZvzLc0yA" general="_xQ1ck9rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZPNrTEeWv0eZvzLc0yA" name="MetroObligationHeaderMapper" specification="_xYFUUNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZPdrTEeWv0eZvzLc0yA" name="header" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZPtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZP9rTEeWv0eZvzLc0yA" name="offerMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZQNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZQdrTEeWv0eZvzLc0yA" type="_xQpPWtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(header,generator,offerMap, ctx);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZQtrTEeWv0eZvzLc0yA" name="map" specification="_xQpPW9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZQ9rTEeWv0eZvzLc0yA" type="_xVCAOdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ZESCQSOBLIGATIONHEADERV1 headerTmp= (ZESCQSOBLIGATIONHEADERV1)_header;&#xD;
 	ESLog.debug(&quot;Mapping source obligation id: &quot; + headerTmp.getSOURCEOBLIGATIONID());&#xD;
 	ObligationHeader oHeader = new ObligationHeader();&#xD;
&#xD;
 	&#xD;
 	oHeader.setActiveObligation(MappingUtils.mapToBoolean(headerTmp.getACTIVEOBLIGATION()));&#xD;
     oHeader.setCCRN(MappingUtils.nullString(headerTmp.getCCRN()));&#xD;
     oHeader.setChannelProfile(MappingUtils.nullString(headerTmp.getCHANNELPROFILE()));&#xD;
     oHeader.setChannelRelationship(MappingUtils.nullString(headerTmp.getCHANNELRELATIONSHIP()));&#xD;
     &#xD;
     oHeader.setContractStatus(ContractStatusType.valueOf(MappingUtils.nullString(headerTmp.getCONTRACTSTATUS())));&#xD;
     oHeader.setCustPurchaseOrder(MappingUtils.nullString(headerTmp.getCUSTPURCHASEORDER()));&#xD;
     oHeader.setDeliveryBlock(MappingUtils.nullString(headerTmp.getDELIVERYBLOCK()));&#xD;
     oHeader.setHeaderStartDate(MappingUtils.mapToCastorDate(headerTmp.getHEADERSTARTDATE()));&#xD;
     oHeader.setHeaderEndDate(MappingUtils.mapToCastorDate(headerTmp.getHEADERENDDATE()));&#xD;
     oHeader.setObligationType(MappingUtils.nullString(headerTmp.getOBLIGATIONTYPE()));&#xD;
     oHeader.setOriginatingOrder(MappingUtils.nullString(headerTmp.getORIGINATINGORDER()));&#xD;
     oHeader.setSourceObligationID(MappingUtils.nullString(headerTmp.getSOURCEOBLIGATIONID()));&#xD;
     oHeader.setServiceItem(mapServiceItem(oHeader.getSourceObligationID()));&#xD;
 &#xD;
     oHeader.setSpecialInstructions(MappingUtils.nullString(headerTmp.getSPECIALINSTRUCTIONS()));&#xD;
     &#xD;
//        String specialInst = headerTmp.getSPECIAL_INSTRUCTIONS().replaceAll(&quot;\r\n&quot;, &quot;\n\r&quot;);&#xD;
//        oHeader.setSpecialInstructions(MappingUtils.nullString(specialInst));&#xD;
     &#xD;
     &#xD;
     oHeader.setSoftwareServiceLevelCategory(MappingUtils.nullString(headerTmp.getSWSERVICELEVELCATEGORY()));&#xD;
&#xD;
 	return oHeader;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZRNrTEeWv0eZvzLc0yA" name="mapServiceItem" specification="_xQpPXNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZRdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZRtrTEeWv0eZvzLc0yA" type="_xVCAPdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZR9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>ServiceItem[] items    = null;&#xD;
		ESLog.debug(&quot;Mapping Services Items&quot;);&#xD;
		ZESCQSOBLIGATIONHEADERV1 headerTmp= (ZESCQSOBLIGATIONHEADERV1)_header;&#xD;
		List&lt;ZESCQSSERVICE>    services = headerTmp.getSERVICES().getItem();&#xD;
		ArrayList&lt;ServiceItem> listServiceItem = new ArrayList&lt;ServiceItem>();&#xD;
		&#xD;
		ESLog.debug(&quot;Mapping Service Items&quot;);&#xD;
		for (ZESCQSSERVICE service : services) {&#xD;
			ServiceItem item = new ServiceItem();&#xD;
			//Get and cast the service&#xD;
			ESLog.debug(&quot;Mapping Service Item&quot; + service.getASSOCIATEDPKGITEM());&#xD;
			item.setAssociatedPkgItem(MappingUtils.nullString(service.getASSOCIATEDPKGITEM()));&#xD;
			item.setItem(MappingUtils.nullString(service.getITEM()));&#xD;
			OfferComplexType offtmp = (OfferComplexType)_offerMap.get(service.getITEM());&#xD;
			item.setOfferRef(offtmp);&#xD;
			listServiceItem.add(item);&#xD;
			if(_ctx != null) {&#xD;
				String itemKey               = service.getITEM();&#xD;
				ServiceKey key = new ServiceKey(sourceObligationId, itemKey);&#xD;
		        _ctx.addServiceItem(key,item);&#xD;
		        //The following two lines are for PoP. The column is from table &quot;service&quot;&#xD;
		        String serviceStartDateEligibility = MappingUtils.nullString(service.getWTYSTARTDATEELIGIBILITY());&#xD;
		        if (serviceStartDateEligibility != null) {&#xD;
		            _ctx.addSvcWtyStartDateEligibility(key, serviceStartDateEligibility);&#xD;
		        }		        &#xD;
			}&#xD;
		}&#xD;
&#xD;
		items = listServiceItem.toArray(new ServiceItem[0]);&#xD;
		return items;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQpPW9rTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_ZQtrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYFUWdrTEeWv0eZvzLc0yA" type="_xVCAOdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQpPXNrTEeWv0eZvzLc0yA" name="mapServiceItem" visibility="protected" method="_xZ_ZRNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQpPXdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQpPXtrTEeWv0eZvzLc0yA" type="_xVCAPdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQpPX9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYFUUNrTEeWv0eZvzLc0yA" name="MetroObligationHeaderMapper" visibility="package" method="_xZ_ZPNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYFUVdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYFUVtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYFUUdrTEeWv0eZvzLc0yA" name="header" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUUtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUU9rTEeWv0eZvzLc0yA" name="offerMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUVNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYFUV9rTEeWv0eZvzLc0yA" type="_xQpPWtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQpPYdrTEeWv0eZvzLc0yA" name="MetroOfferMapper" visibility="package">
                    <generalization xmi:id="_xWRWNdrTEeWv0eZvzLc0yA" general="_xQ1cldrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZSNrTEeWv0eZvzLc0yA" name="MetroOfferMapper" specification="_xYLasNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZSdrTEeWv0eZvzLc0yA" name="service" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZStrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZS9rTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZTNrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZTdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZTtrTEeWv0eZvzLc0yA" name="firstCqsOOS" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZT9rTEeWv0eZvzLc0yA" type="_xQpPYdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(service, generator, oosMap, oosKeyListMapbyOOSGroupId, ctx, firstCqsOOS);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZUNrTEeWv0eZvzLc0yA" name="map" specification="_xQpPYtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZUdrTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZUtrTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZU9rTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZVNrTEeWv0eZvzLc0yA" type="_xVCAO9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>// Local Object&#xD;
		OfferComplexType offer = new OfferComplexType();&#xD;
&#xD;
		/*&#xD;
		 * Mapping&#xD;
		 * Service	SvcProductID 				Offer	OfferCode&#xD;
		 * Service	Service - SvcDescription	Offer	OfferDescription&#xD;
		 * Service	SvcProductType				Offer	SvcProductType&#xD;
		 * Service	SvcProductLine				Offer	SvcProductLine&#xD;
		 * Service	StandAloneOffer				Offer	StandAloneOffer&#xD;
		 * Service	IncidentBasedOffer			Offer	IncidentBasedOffer&#xD;
		 * Service	ServiceQuantity				Offer	ServiceQuantity&#xD;
		 * Service	AvailableQuantity			Offer	AvailableQuantity&#xD;
		 */&#xD;
		ZESCQSSERVICE serviceTmp = (ZESCQSSERVICE)_service;&#xD;
		ESLog.debug(&quot;Mapping Service (Offer): &quot;);&#xD;
		offer.setId(_generator.nextId());&#xD;
		offer.setOfferCode(MappingUtils.nullString(serviceTmp.getSVCPRODUCTID()));&#xD;
		offer.setOfferDescription(MappingUtils.nullString(serviceTmp.getSVCDESCRIPTION()));&#xD;
		offer.setSvcProductType(MappingUtils.nullString(serviceTmp.getSVCPRODUCTTYPE()));&#xD;
		offer.setSvcProductLine(MappingUtils.nullString(serviceTmp.getSVCPRODUCTLINE()));&#xD;
&#xD;
		offer.setStandAloneOffer(MappingUtils.mapToBoolean(serviceTmp.getSTANDALONESERVICE()));&#xD;
		offer.setIncidentBasedOffer(MappingUtils.mapToBoolean(serviceTmp.getINCIDENTBASEDSERVICE()));&#xD;
		try {&#xD;
			offer.setServiceQuantity(MappingUtils.floatStringToInt(serviceTmp.getSERVICEQUANTITY()));&#xD;
			offer.setAvailableQuantity(MappingUtils.floatStringToInt(serviceTmp.getAVAILABLEQUANTITY()));&#xD;
		}catch(MappingException e) {&#xD;
			ESLog.info(&quot;Caught Number Format&quot;, e);&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Incorrect Quantity, CQS mapping issue&quot;);&#xD;
		}&#xD;
		//&#xD;
&#xD;
		if(includeDeliverables) {&#xD;
			//deliverable&#xD;
			ESLog.debug(&quot;Mapping Offer deliverables&quot;);&#xD;
			offer.setDeliverable(mapDeliverable(sourceObligationId,MappingUtils.nullString(serviceTmp.getITEM())));&#xD;
		}&#xD;
&#xD;
&#xD;
&#xD;
		ESLog.debug(&quot;Mapping Offer appliesTo&quot;);&#xD;
		//AppliesTo&#xD;
		offer.setAppliesTo(mapAppliesTo(sourceObligationId,MappingUtils.nullString(serviceTmp.getITEM())));&#xD;
&#xD;
&#xD;
		if(includeModifiers) {&#xD;
			ESLog.debug(&quot;Mapping Offer modifiers&quot;);&#xD;
			//&#xD;
			offer.setModifier(mapModifiers(sourceObligationId,MappingUtils.nullString(serviceTmp.getITEM())));&#xD;
         if (_firstCqsOOS != null) {&#xD;
             ESLog.debug(&quot;Mapping PWA info to Offer modifiers&quot;);&#xD;
             mapPWAModifiers(sourceObligationId, MappingUtils.nullString(serviceTmp.getITEM()), offer);&#xD;
         }&#xD;
		}&#xD;
&#xD;
		if(_ctx != null) {&#xD;
			String item  = serviceTmp.getITEM();&#xD;
			ServiceKey key = new ServiceKey(sourceObligationId, item);&#xD;
	        _ctx.addOffer(key, offer);&#xD;
		}&#xD;
&#xD;
		ESLog.debug(&quot;Offer is mapped&quot;);&#xD;
		return offer;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZVdrTEeWv0eZvzLc0yA" name="mapPWAModifiers" specification="_xYLau9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZVtrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZV9rTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZWNrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <language>java</language>
                      <body>if (_firstCqsOOS == null)&#xD;
         return;&#xD;
&#xD;
     boolean flagCurrentPageCount = false;&#xD;
     boolean flagEndPageCount = false;&#xD;
     int valueCurrentPageCount = 0;&#xD;
     int valueEndPageCount = 0;&#xD;
&#xD;
     ZESCQSOOS firstCqsOOS=(ZESCQSOOS) _firstCqsOOS;&#xD;
     ZESCQSSERVICE service=(ZESCQSSERVICE) _service;&#xD;
&#xD;
     // Map PWA_CURRENT_PAGE_COUNT from OOS&#xD;
     if (isTheServiceAppliesToTheOOS (service, firstCqsOOS) &amp;&amp; isPWAValueAvailable(firstCqsOOS.getCURRENTPAGECOUNT())) {&#xD;
         ESLog.debug(&quot;Mapping PWA CURRENT_PAGE_COUNT. Its value is &quot; + firstCqsOOS.getCURRENTPAGECOUNT());&#xD;
         ModifierComplexType mod = new ModifierComplexType();&#xD;
         mod.setModName(PWAConstants.MOD_NAME_CURRENT_PAGE_COUNT);&#xD;
         mod.setModValue(firstCqsOOS.getCURRENTPAGECOUNT().trim());&#xD;
&#xD;
         //CurrentPageCount will be used to calculate the value of PageLimitStatus. Here we track it.&#xD;
         try {&#xD;
             valueCurrentPageCount = MappingUtils.stringToInt(mod.getModValue().trim());&#xD;
             flagCurrentPageCount = true;&#xD;
         } catch (MappingException e) {&#xD;
             // if MappingException occurs, flagCurrentPageCount is still false.&#xD;
         }&#xD;
&#xD;
         addModifier(sourceObligationId, item, offer, mod);&#xD;
     }&#xD;
&#xD;
     // Map PWA_CURRENT_PAGE_COUNT_DATE from OOS&#xD;
     if (isTheServiceAppliesToTheOOS (service, firstCqsOOS) &amp;&amp; isPWAValueAvailable(firstCqsOOS.getCURRENTPAGECOUNTDATE())) {&#xD;
         ESLog.debug(&quot;Mapping PWA CURRENT_PAGE_COUNT_DATE. Its value is &quot; + firstCqsOOS.getCURRENTPAGECOUNTDATE());&#xD;
         ModifierComplexType mod = new ModifierComplexType();&#xD;
         mod.setModName(PWAConstants.MOD_NAME_CURRENT_PAGE_COUNT_DATE);&#xD;
         mod.setModValue(firstCqsOOS.getCURRENTPAGECOUNTDATE().trim());&#xD;
         addModifier(sourceObligationId, item, offer, mod);&#xD;
     }&#xD;
&#xD;
     // Map START_PAGE_COUNT, END_PAGE_COUNT and PAGE_LIMIT_REACHED_DATE from AppliesTo.ObjectRef&#xD;
&#xD;
&#xD;
     if (service.getAPPLIESTO() != null) {&#xD;
         Collection appls = service.getAPPLIESTO().getItem();&#xD;
         Iterator itAppl = appls.iterator();&#xD;
         ZESCQSOBJECTREF objRef = null;&#xD;
         // going through the list to get right objRef. Once the right objRef is found, we can end the loop.&#xD;
         while (itAppl.hasNext() &amp;&amp; objRef == null) {&#xD;
&#xD;
             // The following logic describes the process of finding the right ObjectRef.&#xD;
             // For each AppliesTo&#xD;
             //      If AppliesTo.ObjectRefType ==â€�OOSâ€�&#xD;
             //          For each AppliesTo.ObjectRef&#xD;
             //              Take the first one ObjectRef which is connected to this OOS. The â€œconnectedâ€� means&#xD;
             //              ObjectRef.ObjectRefKey= firstOOS.key. Once we get the right ObjectRef, we end all loops.&#xD;
             //      Else //it means ObjectRefType is &quot;OOSGroup&quot;&#xD;
             //          For each AppliesTo.ObjectRef&#xD;
             //              In this case ObjectRef.ObjectRefKey is an OOSGroupID. We should check if the firstOOS is in this&#xD;
             //              OOSGroup. If yes, we also get the right ObjectRef and end all loops.&#xD;
&#xD;
             ZESCQSAPPLIESTO appl = (ZESCQSAPPLIESTO) itAppl.next();&#xD;
             if (appl.getOBJECTTYPE() != null) {&#xD;
                 Collection objRefs = appl.getOBJECTREF().getItem();&#xD;
                 Iterator itObjRef = objRefs.iterator();&#xD;
                 while (itObjRef.hasNext() &amp;&amp; objRef == null) {&#xD;
                     ZESCQSOBJECTREF objRefTmp = (ZESCQSOBJECTREF) itObjRef.next();&#xD;
                     if (appl.getOBJECTTYPE().trim().equalsIgnoreCase(OOS_TYPE)) {&#xD;
                         if (firstCqsOOS.getOOSKEY().equals(objRefTmp.getOBJECTREFKEY()))&#xD;
                             objRef = objRefTmp;&#xD;
                     } else {// OOSGroup&#xD;
                         String groupId = objRefTmp.getOBJECTREFKEY();&#xD;
                         Collection oosKeys = getOOSKeyListForOOSGroupId(groupId);&#xD;
                         if (oosKeys != null) {&#xD;
                             Iterator itOOSkey = oosKeys.iterator();&#xD;
                             while (itOOSkey.hasNext() &amp;&amp; objRef == null) {&#xD;
                                 String oosKey = (String) itOOSkey.next();&#xD;
                                 if (oosKey.equals(firstCqsOOS.getOOSKEY()))&#xD;
                                     objRef = objRefTmp;&#xD;
                             }&#xD;
                         }&#xD;
                     }&#xD;
                 }// end of OOSGroup&#xD;
             }&#xD;
         }&#xD;
         if (objRef != null) {&#xD;
             // Map PWA_START_PAGE_COUNT from AppliesTo.ObjectRef&#xD;
             if (isPWAValueAvailable(objRef.getSTARTPAGECOUNT())) {&#xD;
                 ESLog.debug(&quot;Mapping PWA START_PAGE_COUNT. Its value is &quot; + objRef.getSTARTPAGECOUNT());&#xD;
                 ModifierComplexType mod = new ModifierComplexType();&#xD;
                 mod.setModName(PWAConstants.MOD_NAME_START_PAGE_COUNT);&#xD;
                 mod.setModValue(objRef.getSTARTPAGECOUNT().trim());&#xD;
                 addModifier(sourceObligationId, item, offer, mod);&#xD;
             }&#xD;
&#xD;
             // Map PWA_PAGE_LIMIT_REACHED_DATE from AppliesTo.ObjectRef&#xD;
             if (isPWAValueAvailable(objRef.getPAGELIMITREACHEDDATE())) {&#xD;
                 ESLog.debug(&quot;Mapping PWA PAGE_LIMIT_REACHED_DATE. Its value is &quot; + objRef.getPAGELIMITREACHEDDATE());&#xD;
                 ModifierComplexType mod = new ModifierComplexType();&#xD;
                 mod.setModName(PWAConstants.MOD_NAME_PAGE_LIMIT_REACHED_DATE);&#xD;
                 mod.setModValue(objRef.getPAGELIMITREACHEDDATE().trim());&#xD;
                 addModifier(sourceObligationId, item, offer, mod);&#xD;
             }&#xD;
&#xD;
             // Map PWA_END_PAGE_COUNT from AppliesTo.ObjectRef&#xD;
             if (isPWAValueAvailable(objRef.getENDPAGECOUNT())) {&#xD;
                 ESLog.debug(&quot;Mapping PWA END_PAGE_COUNT. Its value is &quot; + objRef.getENDPAGECOUNT());&#xD;
                 ModifierComplexType mod = new ModifierComplexType();&#xD;
                 mod.setModName(PWAConstants.MOD_NAME_END_PAGE_COUNT);&#xD;
                 mod.setModValue(objRef.getENDPAGECOUNT().trim());&#xD;
&#xD;
                 //EndPageCount will be used to calculate the value of PageLimitStatus. Here we track it.&#xD;
                 try {&#xD;
                     valueEndPageCount = MappingUtils.stringToInt(mod.getModValue().trim());&#xD;
                     flagEndPageCount = true;&#xD;
                 } catch (MappingException e) {&#xD;
                     // if MappingException occurs, flagCurrentPageCount is still false.&#xD;
                 }&#xD;
&#xD;
                 addModifier(sourceObligationId, item, offer, mod);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     // The modifier PAGE_LIMIT_STATUS exists only if CURRENT_PAGE_COUNT and END_PAGE_COUNT are available.&#xD;
     if (flagCurrentPageCount &amp;&amp; flagEndPageCount) {&#xD;
         ModifierComplexType mod = new ModifierComplexType();&#xD;
         mod.setModName(PWAConstants.MOD_NAME_PAGE_LIMIT_STATUS);&#xD;
         mod.setModValue((valueCurrentPageCount &lt;= valueEndPageCount) ? PWAConstants.PAGE_LIMIT_STATUS_ACTIVE&#xD;
                 : PWAConstants.PAGE_LIMIT_STATUS_EXPIRED);&#xD;
&#xD;
         addModifier(sourceObligationId, item, offer, mod);&#xD;
     }&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZWdrTEeWv0eZvzLc0yA" name="isTheServiceAppliesToTheOOS" specification="_xYLav9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZWtrTEeWv0eZvzLc0yA" name="service" type="_xWLPl9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZW9rTEeWv0eZvzLc0yA" name="oos" type="_xWLPldrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xZ_ZXNrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (service.getAPPLIESTO() != null) {&#xD;
         Collection appliesToes = service.getAPPLIESTO().getItem();&#xD;
         Iterator itAppl = appliesToes.iterator();&#xD;
&#xD;
         while (itAppl.hasNext()) {&#xD;
             ZESCQSAPPLIESTO appl = (ZESCQSAPPLIESTO) itAppl.next();&#xD;
             Collection objRefs = appl.getOBJECTREF().getItem();&#xD;
&#xD;
             if (objRefs != null &amp;&amp; appl.getOBJECTTYPE() != null) {&#xD;
                 Iterator itObjRef = objRefs.iterator();&#xD;
                 while (itObjRef.hasNext()) {&#xD;
                     ZESCQSOBJECTREF objRef = (ZESCQSOBJECTREF) itObjRef.next();&#xD;
                     if (appl.getOBJECTTYPE().trim().equalsIgnoreCase(OOS_TYPE)) {&#xD;
                         if (oos.getOOSKEY().equals(objRef.getOBJECTREFKEY()))&#xD;
                             return true;&#xD;
                     } else {// OOSGroup&#xD;
                         String groupId = objRef.getOBJECTREFKEY();&#xD;
                         Collection oosKeys = getOOSKeyListForOOSGroupId(groupId);&#xD;
                         if (oosKeys != null) {&#xD;
                             Iterator itOOSkey = oosKeys.iterator();&#xD;
                             while (itOOSkey.hasNext()) {&#xD;
                                 String oosKey = (String) itOOSkey.next();&#xD;
                                 if (oosKey.equals(oos.getOOSKEY()))&#xD;
                                     return true;&#xD;
                             }&#xD;
                         }&#xD;
                     }&#xD;
                 }// end of OOSGroup&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZXdrTEeWv0eZvzLc0yA" name="mapModifiers" specification="_xQvV8trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZXtrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZX9rTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZYNrTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZYdrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>ModifierComplexType[] listMods = null;&#xD;
		ZESCQSSERVICE serviceTmp = (ZESCQSSERVICE)_service;&#xD;
&#xD;
		ArrayList arMods = new ArrayList();&#xD;
		List&lt;ZESCQSMODIFIER> listSourceModifiers = serviceTmp.getMODIFIERS().getItem();&#xD;
&#xD;
&#xD;
		//going through the list&#xD;
		for (ZESCQSMODIFIER modifier : listSourceModifiers) {&#xD;
			ModifierMapper mapper = new MetroModifierMapper(modifier);&#xD;
			ModifierComplexType mod = mapper.map();&#xD;
         if (mod != null) {&#xD;
             arMods.add(mod);&#xD;
             if (_ctx != null) {&#xD;
                 String name = mod.getModName();&#xD;
                 ModifierKey key = new ModifierKey(sourceObligationId, item, name);&#xD;
                 _ctx.addModifier(key, mod);&#xD;
             }&#xD;
         }&#xD;
		}&#xD;
&#xD;
		listMods = (ModifierComplexType[])arMods.toArray(new ModifierComplexType[0]);&#xD;
&#xD;
		return listMods;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZYtrTEeWv0eZvzLc0yA" name="mapAppliesTo" specification="_xQvV-NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZY9rTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZZNrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZZdrTEeWv0eZvzLc0yA" type="_xVCAK9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_ZZtrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>AppliesTo[] listAppl = null;&#xD;
		ArrayList arAppl = new ArrayList();&#xD;
		ZESCQSSERVICE serviceTmp = (ZESCQSSERVICE)_service;&#xD;
		List&lt;ZESCQSAPPLIESTO> listSourceAppl = serviceTmp.getAPPLIESTO().getItem();&#xD;
&#xD;
		//going through the list&#xD;
		for (ZESCQSAPPLIESTO appl : listSourceAppl) {&#xD;
			AppliesToMapper mapper = new MetroAppliesToMapper(appl,_generator,_oosMap,_oosKeyListMapbyOOSGroupId, _ctx);&#xD;
			Collection colAppliesTo = mapper.map(sourceObligationId, item);&#xD;
			arAppl.addAll(colAppliesTo);&#xD;
		}&#xD;
&#xD;
		listAppl = (AppliesTo[])arAppl.toArray(new AppliesTo[0]);&#xD;
&#xD;
		return listAppl;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZZ9rTEeWv0eZvzLc0yA" name="mapDeliverable" specification="_xQvV_trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZaNrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZadrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZatrTEeWv0eZvzLc0yA" type="_xVCAMdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZ_Za9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>Deliverable[] listDel = null;&#xD;
		ArrayList arDel = new ArrayList();&#xD;
		ZESCQSSERVICE serviceTmp = (ZESCQSSERVICE)_service;&#xD;
		List&lt;ZESCQSDELIVERABLE> listSourceDel = serviceTmp.getDELIVERABLES().getItem();&#xD;
&#xD;
&#xD;
&#xD;
		//going through the list&#xD;
		for (ZESCQSDELIVERABLE del : listSourceDel) {&#xD;
			DeliverableMapper mapper = new MetroDeliverableMapper(del, _ctx);&#xD;
			Deliverable deliverable = mapper.map(sourceObligationId, item);&#xD;
			arDel.add(deliverable);&#xD;
		}&#xD;
&#xD;
		listDel = (Deliverable[])arDel.toArray(new Deliverable[0]);&#xD;
&#xD;
&#xD;
		return listDel;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ_ZbNrTEeWv0eZvzLc0yA" name="getOOSKeyListForOOSGroupId" specification="_xQvWBNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xZ_ZbdrTEeWv0eZvzLc0yA" name="groupId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xZ_ZbtrTEeWv0eZvzLc0yA" type="_xV47v9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return (ArrayList) _oosKeyListMapbyOOSGroupId.get(groupId);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfMNrTEeWv0eZvzLc0yA" name="isPWAValueAvailable" specification="_xQvWBtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfMdrTEeWv0eZvzLc0yA" name="pwaValue">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfMtrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if (pwaValue == null || &quot;&quot;.equals(pwaValue.trim()))&#xD;
         return false;&#xD;
     return true;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfM9rTEeWv0eZvzLc0yA" name="addModifier" specification="_xYLaxNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfNNrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfNdrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfNtrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfN9rTEeWv0eZvzLc0yA" name="mod" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                      <language>java</language>
                      <body>if (mod != null) {&#xD;
         offer.addModifier(mod);&#xD;
         if (_ctx != null) {&#xD;
             String name = mod.getModName();&#xD;
             ModifierKey key = new ModifierKey(sourceObligationId, item, name);&#xD;
             _ctx.addModifier(key, mod);&#xD;
         }&#xD;
     }&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQpPYtrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xZ_ZUNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQpPY9rTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV8NrTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV8drTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLautrTEeWv0eZvzLc0yA" type="_xVCAO9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQvV8trTEeWv0eZvzLc0yA" name="mapModifiers" visibility="protected" method="_xZ_ZXdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvV89rTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV9NrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV9drTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQvV9trTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQvV-NrTEeWv0eZvzLc0yA" name="mapAppliesTo" visibility="protected" method="_xZ_ZYtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvV-drTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV-trTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvV-9rTEeWv0eZvzLc0yA" type="_xVCAK9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQvV_NrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQvV_trTEeWv0eZvzLc0yA" name="mapDeliverable" visibility="protected" method="_xZ_ZZ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvV_9rTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvWANrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvWAdrTEeWv0eZvzLc0yA" type="_xVCAMdrTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQvWAtrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQvWBNrTEeWv0eZvzLc0yA" name="getOOSKeyListForOOSGroupId" visibility="protected" isLeaf="true" method="_xZ_ZbNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvWBdrTEeWv0eZvzLc0yA" name="groupId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLaw9rTEeWv0eZvzLc0yA" type="_xV47v9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xQvWBtrTEeWv0eZvzLc0yA" name="isPWAValueAvailable" visibility="private" method="_xaFfMNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvWB9rTEeWv0eZvzLc0yA" name="pwaValue">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQvWCNrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLasNrTEeWv0eZvzLc0yA" name="MetroOfferMapper" visibility="package" method="_xZ_ZSNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLat9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLauNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLasdrTEeWv0eZvzLc0yA" name="service" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLastrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLas9rTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLatNrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLatdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLattrTEeWv0eZvzLc0yA" name="firstCqsOOS" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLaudrTEeWv0eZvzLc0yA" type="_xQpPYdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLau9rTEeWv0eZvzLc0yA" name="mapPWAModifiers" visibility="protected" method="_xZ_ZVdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLavNrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLavdrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLavtrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLav9rTEeWv0eZvzLc0yA" name="isTheServiceAppliesToTheOOS" visibility="private" method="_xZ_ZWdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLawNrTEeWv0eZvzLc0yA" name="service" type="_xWLPl9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLawdrTEeWv0eZvzLc0yA" name="oos" type="_xWLPldrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLawtrTEeWv0eZvzLc0yA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLaxNrTEeWv0eZvzLc0yA" name="addModifier" visibility="private" method="_xaFfM9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLaxdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLaxtrTEeWv0eZvzLc0yA" name="item">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLax9rTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLayNrTEeWv0eZvzLc0yA" name="mod" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQvWCdrTEeWv0eZvzLc0yA" name="MetroOosMapper" visibility="package">
                    <generalization xmi:id="_xWRWPNrTEeWv0eZvzLc0yA" general="_xQ7jMNrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfONrTEeWv0eZvzLc0yA" name="MetroOosMapper" specification="_xYLaydrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfOdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfOtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfO9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfPNrTEeWv0eZvzLc0yA" type="_xQvWCdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction,generator, ctx);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfPdrTEeWv0eZvzLc0yA" name="map" specification="_xQvWCtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfPtrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaFfP9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>if(_transaction == null) {&#xD;
 		return new OOSComplexType[0];&#xD;
 	}&#xD;
&#xD;
    	List&lt;ZESCQSOOS> sapOoses = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getOOS().getItem();&#xD;
     OOSComplexType[] ooses = new OOSComplexType[((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getOOS().getItem().size()];&#xD;
&#xD;
     ESLog.debug(&quot;Mapping &quot; + ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getOOS().getItem().size() + &quot; ooses ...&quot;);&#xD;
     int i=0;&#xD;
     for (ZESCQSOOS oos : sapOoses) {&#xD;
         ooses[i++] = mapOos(oos);&#xD;
     }&#xD;
     return ooses;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfQNrTEeWv0eZvzLc0yA" name="mapOos" specification="_xYLa0NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfQdrTEeWv0eZvzLc0yA" name="input" type="_xWLPldrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfQtrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>OOSComplexType oos = new OOSComplexType();&#xD;
     oos.setId(_generator.nextId());&#xD;
     &#xD;
     oos.setCustomerDefinedID(MappingUtils.nullString(input.getCUSTOMERDEFINEDID()));&#xD;
     oos.setOOSGroupID(MappingUtils.nullString(input.getOOSGROUPID()));&#xD;
     oos.setOOSKey(MappingUtils.nullString(input.getOOSKEY()));&#xD;
     oos.setOOSType(MappingUtils.nullString(input.getOOSTYPE()));&#xD;
     if (input.getTARGETQUANTITY() != null) {&#xD;
         oos.setTargetQuantity(MappingUtils.floatStringToInt(input.getTARGETQUANTITY()));&#xD;
     }&#xD;
     String serial = MappingUtils.nullString(input.getSERIALNUMBER());&#xD;
     //setting the serial Number for the OOS (only one)&#xD;
     if (serial != null) {&#xD;
     	oos.setSerialNumber( new String[] { serial } );&#xD;
     }&#xD;
&#xD;
     ProductComplexType product = new ProductComplexType();&#xD;
     product.setProductID(MappingUtils.nullString(input.getPRODUCTID()));&#xD;
     product.setProductDescription(MappingUtils.nullString(input.getPRODUCTDESCRIPTION()));&#xD;
     product.setProductLineCode(MappingUtils.nullString(input.getPRODUCTLINECODE()));&#xD;
     product.setProductLineDescription(MappingUtils.nullString(input.getPRODUCTLINEDESCRIPTION()));&#xD;
     &#xD;
     HashMap map = _transaction.getStandardizedProductHashMap();&#xD;
     &#xD;
     if(map == null) {&#xD;
     	map = new HashMap();&#xD;
     	_transaction.setStandardizedProductHashMap(map);&#xD;
     }&#xD;
     map.put(MappingUtils.nullString(input.getPRODUCTID()),MappingUtils.nullString(input.getPRODUCTIDSTANDARDIZED()));&#xD;
     &#xD;
     oos.setProduct(product);&#xD;
&#xD;
     if(_ctx != null) {&#xD;
     	OOSKey key = new OOSKey(oos.getOOSKey());&#xD;
     	_ctx.addOOS(key, oos);&#xD;
     	_ctx.setAggProductId(input.getPRODUCTID(),MappingUtils.nullString(input.getPRODUCTIDSTANDARDIZED()));&#xD;
     	&#xD;
     	&#xD;
     	try {&#xD;
     		if((input.getWTYSTARTDATE() != null) &amp;&amp; (input.getWTYSTARTDATE().trim().length() > 0)) {&#xD;
	        		java.sql.Date d = java.sql.Date.valueOf(input.getWTYSTARTDATE());&#xD;
	                //The following two lines are for PoP. The column is from table &quot;object_of_service&quot;        	&#xD;
	                if (d != null) {&#xD;
	                    _ctx.addOosWarrantyStartDate(key, d);&#xD;
	                }&#xD;
     		}&#xD;
     	}catch(IllegalArgumentException ex) {&#xD;
     		ESLog.debug(&quot;Caught IllegalArgumentException while parsing date&quot;,ex);&#xD;
     	}&#xD;
     }&#xD;
     return oos;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfQ9rTEeWv0eZvzLc0yA" name="mapMV" specification="_xYLa09rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfRNrTEeWv0eZvzLc0yA" name="oosComplexTypes" type="_xVCAN9rTEeWv0eZvzLc0yA">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xaFfRdrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                      <language>java</language>
                      <body>ZESCQSMVT sapMvt = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getMVINFOR();&#xD;
 	if(null == sapMvt || null == sapMvt.getItem()&#xD;
 			|| sapMvt.getItem().size() == 0&#xD;
 			|| null == oosComplexTypes&#xD;
 			|| oosComplexTypes.length == 0) {&#xD;
 		ESLog.debug(&quot;No MV info returned from SAP. MV list is emppty&quot;);&#xD;
 		return;&#xD;
 	}&#xD;
 	// get all ZESCQSOOS and ZESCQSMV from SAP reply&#xD;
 	List&lt;ZESCQSOOS> sapOoses = ((ZESCQSENTITLEMENTREPLYV1)_transaction.getSourceSystemStandardReply()).getOOS().getItem();&#xD;
 	List&lt;ZESCQSMV> sapMvs = sapMvt.getItem();&#xD;
 	ESLog.debug(sapMvs.size() + &quot; MV(s) is(are) returned from SAP&quot;);&#xD;
 	ESLog.debug(sapOoses.size() + &quot; OOS(es) is(are) returned from SAP&quot;);&#xD;
 	for(int i=0; i&lt;sapOoses.size(); i++) {&#xD;
 		String oosMVId = sapOoses.get(i).getMANUFACTURERID();&#xD;
 		if(null == oosMVId || oosMVId.trim().length() == 0) {&#xD;
 			ESLog.debug(&quot;manufacture id in ZESCQSOOS is empty or null, skip it. ZESCQSOOS key is &quot; + sapOoses.get(i).getOOSKEY());&#xD;
 			continue;&#xD;
 		}&#xD;
 		for(ZESCQSMV mv : sapMvs) {&#xD;
 			if(null == mv.getMANUFACTURERID() || mv.getMANUFACTURERID().trim().length() == 0) {&#xD;
 				ESLog.debug(&quot;manufacture id in ZESCQSMV is empty or null, skip it. ZESCQSOOS key is &quot; + sapOoses.get(i).getOOSKEY());&#xD;
 				continue;&#xD;
 			}&#xD;
 			if(oosMVId.trim().equals(mv.getMANUFACTURERID().trim())) {&#xD;
 				ESLog.debug(&quot;Find one MV. Manufacturer ID is &quot;&#xD;
 						+ oosMVId + &quot;, ZESCQSOOS key is &quot; + sapOoses.get(i).getOOSKEY()&#xD;
 						+ &quot;, OOSComplexType OOS key is &quot; + oosComplexTypes[i].getOOSKey());&#xD;
 				// when find the first mv, set mv info and return.&#xD;
 				ManufacturerComplexType mvType = new ManufacturerComplexType();&#xD;
 				mvType.setManufacturerCode(MappingUtils.nullString(mv.getMANUFACTURERCODE()));&#xD;
 				mvType.setManufacturerID(MappingUtils.nullString(mv.getMANUFACTURERID()));&#xD;
 				mvType.setManufacturerName(MappingUtils.nullString(mv.getMANUFACTURERNAME()));&#xD;
 				oosComplexTypes[i].getProduct().setManufacturer(mvType);&#xD;
 				oosComplexTypes[i].setManufacturerProductNumber(MappingUtils.nullString(sapOoses.get(i).getMANUFACTURERPARTNO()));&#xD;
 				break;&#xD;
 			}&#xD;
 		}&#xD;
 	}&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQvWCtrTEeWv0eZvzLc0yA" name="map" visibility="package" method="_xaFfPdrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQvWC9rTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQvWDNrTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLaydrTEeWv0eZvzLc0yA" name="MetroOosMapper" visibility="package" method="_xaFfONrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLazdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLaztrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLaytrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLay9rTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLazNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLaz9rTEeWv0eZvzLc0yA" type="_xQvWCdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa0NrTEeWv0eZvzLc0yA" name="mapOos" visibility="protected" method="_xaFfQNrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa0drTEeWv0eZvzLc0yA" name="input" type="_xWLPldrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa0trTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa09rTEeWv0eZvzLc0yA" name="mapMV" visibility="package" method="_xaFfQ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa1NrTEeWv0eZvzLc0yA" name="oosComplexTypes" type="_xVCAN9rTEeWv0eZvzLc0yA">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xYLa1drTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQvWDtrTEeWv0eZvzLc0yA" name="MetroUnitListMapper">
                    <ownedComment xmi:id="_xaXzjdrTEeWv0eZvzLc0yA">
                      <body>@author antoine &#xD;
This map a unit list</body>
                    </ownedComment>
                    <generalization xmi:id="_xWRWRtrTEeWv0eZvzLc0yA" general="_xQ7jNtrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfRtrTEeWv0eZvzLc0yA" name="MetroUnitListMapper" specification="_xWRWQdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfR9rTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfSNrTEeWv0eZvzLc0yA" type="_xQvWDtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(transaction);&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfSdrTEeWv0eZvzLc0yA" name="map" specification="_xQvWD9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfStrTEeWv0eZvzLc0yA" type="_xV47utrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;Enter unit list mapping&quot;);&#xD;
 	&#xD;
 	ZESCQSUNIT cqsUnitList = (ZESCQSUNIT) _transaction.getSourceSystemUnitList();&#xD;
 	UnitListComplexType unitList = new UnitListComplexType();&#xD;
 	List&lt;ZESCQSPRODUCT> prodList = cqsUnitList.getPRODUCTS().getItem();&#xD;
 	&#xD;
 	ESLog.debug(&quot;Mapping Unit list :&quot;);&#xD;
 	&#xD;
 	unitList.setSerialNumber(cqsUnitList.getSERIALNUMBER());&#xD;
 	&#xD;
 	// map each product and add it to the unit list&#xD;
 	ESLog.debug(&quot;Call product mapping for unit list ...&quot;);&#xD;
 	for (ZESCQSPRODUCT cqsProduct : prodList) {&#xD;
 		unitList.addProduct(mapProduct(cqsProduct));&#xD;
 	}&#xD;
&#xD;
 	return unitList;&#xD;
&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfS9rTEeWv0eZvzLc0yA" name="mapProduct" specification="_xYLa19rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfTNrTEeWv0eZvzLc0yA" name="cqsProduct" type="_xWRWPdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfTdrTEeWv0eZvzLc0yA" type="_xVaamtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>ESLog.debug(&quot;Map product '&quot; + cqsProduct.getPRODUCTID() + &quot;' for unit list&quot;);&#xD;
		&#xD;
		ProductComplexType product = new ProductComplexType();&#xD;
		&#xD;
		product.setProductID(cqsProduct.getPRODUCTID());&#xD;
		product.setProductDescription(cqsProduct.getPRODUCTDESCRIPTION());&#xD;
		return product;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQvWD9rTEeWv0eZvzLc0yA" name="map" method="_xaFfSdrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa1trTEeWv0eZvzLc0yA" type="_xV47utrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xWRWQdrTEeWv0eZvzLc0yA" name="MetroUnitListMapper" visibility="protected" method="_xaFfRtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xWRWQ9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xWRWRNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xWRWQtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xWRWRdrTEeWv0eZvzLc0yA" type="_xQvWDtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa19rTEeWv0eZvzLc0yA" name="mapProduct" visibility="protected" method="_xaFfS9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa2NrTEeWv0eZvzLc0yA" name="cqsProduct" type="_xWRWPdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa2drTEeWv0eZvzLc0yA" type="_xVaamtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQvWENrTEeWv0eZvzLc0yA" name="MetroWarningMapper" visibility="package">
                    <ownedComment xmi:id="_xaXzjtrTEeWv0eZvzLc0yA">
                      <body>Error ID	Error text / description	&#xD;
901	The UnitList was truncated - There were more units than we have returned in the list (maximum number of units is 100) =>426	&#xD;
902	Number of OOSes and related Services was truncated =>426&#xD;
 *</body>
                    </ownedComment>
                    <generalization xmi:id="_xWRWR9rTEeWv0eZvzLc0yA" general="_xQ7jOdrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfTtrTEeWv0eZvzLc0yA" name="MetroWarningMapper" specification="_xYLa2trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfT9rTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfUNrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfUdrTEeWv0eZvzLc0yA" type="_xQvWENrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super(cqsWarnings,sapRegionDisplayName);;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfUtrTEeWv0eZvzLc0yA" name="map" specification="_xQ1ckNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfU9rTEeWv0eZvzLc0yA" type="_xVUUAtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>// in case cqs warnings are null, we return null&#xD;
 	if(_cqsWarnings == null) {&#xD;
 		return null;&#xD;
 	}&#xD;
&#xD;
 	ESLog.debug(&quot;Mapping warning ...&quot;);&#xD;
  	Warnings warn = new Warnings();&#xD;
&#xD;
 	&#xD;
 	Iterator iterator = _cqsWarnings.iterator();&#xD;
 	while(iterator.hasNext()) {&#xD;
 		EIAError se = mapWarning((ZESCQSMESSAGE) iterator.next());&#xD;
 		if(se != null) {&#xD;
 			warn.addEIAError(se);&#xD;
 		}&#xD;
 	}&#xD;
 	&#xD;
 	// in case we don't have any warnings we return null&#xD;
 	if (warn.getEIAErrorCount() == 0) {&#xD;
 		return null;&#xD;
 	}&#xD;
     return warn;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfVNrTEeWv0eZvzLc0yA" name="mapWarning" specification="_xYLa4drTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfVdrTEeWv0eZvzLc0yA" name="cqsMessage" type="_xWLPq9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfVtrTEeWv0eZvzLc0yA" type="_xVUT-NrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>int errorId =MappingUtils.stringToInt(cqsMessage.getMSGNO());&#xD;
		&#xD;
		if(errorId == 901|| errorId == 902) {&#xD;
			return ErrorFactory.getEIAError(ErrorFactory.id436_SOURCE_SYSTEM_RETURNED_WARNING_OR_ERROR,_sapRegionDisplayName,cqsMessage.getMSGNO().toString(),cqsMessage.getMESSAGE());&#xD;
		}&#xD;
&#xD;
		if(errorId == 903) {&#xD;
			return ErrorFactory.getEIAError(ErrorFactory.id437_SPECIAL_INSTRUCTION_FIELD_TRUNCARED,MappingUtils.stripLeadingDigitsAndBlanks(cqsMessage.getMESSAGE()), MappingUtils.stripLeadingDigitsAndBlanks(cqsMessage.getMESSAGE()));&#xD;
			&#xD;
		}&#xD;
&#xD;
		return null;	&#xD;
			&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ1ckNrTEeWv0eZvzLc0yA" name="map" method="_xaFfUtrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa4NrTEeWv0eZvzLc0yA" type="_xVUUAtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa2trTEeWv0eZvzLc0yA" name="MetroWarningMapper" visibility="package" method="_xaFfTtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLa3drTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLa3trTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLa29rTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa3NrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYLa39rTEeWv0eZvzLc0yA" type="_xQvWENrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa4drTEeWv0eZvzLc0yA" name="mapWarning" visibility="protected" method="_xaFfVNrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa4trTEeWv0eZvzLc0yA" name="cqsMessage" type="_xWLPq9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa49rTEeWv0eZvzLc0yA" type="_xVUT-NrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ1ckdrTEeWv0eZvzLc0yA" name="ModifierMapper" visibility="package" isAbstract="true">
                    <ownedComment xmi:id="_xaXzj9rTEeWv0eZvzLc0yA">
                      <body>@author anvoi&#xD;
 *</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZOjpNrTEeWv0eZvzLc0yA" name="_modifierObject" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xa8a5trTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfV9rTEeWv0eZvzLc0yA" name="ModifierMapper" specification="_xYLa5NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfWNrTEeWv0eZvzLc0yA" name="modifier" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfWdrTEeWv0eZvzLc0yA" type="_xQ1ckdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
		_modifierObject = modifier;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ1cktrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true">
                      <ownedParameter xmi:id="_xYLa6drTEeWv0eZvzLc0yA" type="_xVCANdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa5NrTEeWv0eZvzLc0yA" name="ModifierMapper" visibility="package" method="_xaFfV9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLa5trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLa59rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLa5drTEeWv0eZvzLc0yA" name="modifier" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa6NrTEeWv0eZvzLc0yA" type="_xQ1ckdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ1ck9rTEeWv0eZvzLc0yA" name="ObligationHeaderMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZOjptrTEeWv0eZvzLc0yA" name="_header" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xa8a6drTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjqNrTEeWv0eZvzLc0yA" name="_offerMap" visibility="protected" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xa8a7NrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjqtrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xa8a79rTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfWtrTEeWv0eZvzLc0yA" name="ObligationHeaderMapper" specification="_xYLa6trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfW9rTEeWv0eZvzLc0yA" name="header" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfXNrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfXdrTEeWv0eZvzLc0yA" name="offerMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfXtrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfX9rTEeWv0eZvzLc0yA" type="_xQ1ck9rTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_header = header;&#xD;
 	_offerMap  = offerMap;&#xD;
 	_ctx = ctx;&#xD;
 	&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ1clNrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYLa8trTEeWv0eZvzLc0yA" type="_xVCAOdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa6trTEeWv0eZvzLc0yA" name="ObligationHeaderMapper" method="_xaFfWtrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLa79rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLa8NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLa69rTEeWv0eZvzLc0yA" name="header" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa7NrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa7drTEeWv0eZvzLc0yA" name="offerMap" type="_xVCAG9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa7trTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa8drTEeWv0eZvzLc0yA" type="_xQ1ck9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ1cldrTEeWv0eZvzLc0yA" name="OfferMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZOjrNrTEeWv0eZvzLc0yA" name="_service" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xa8a8trTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjrtrTEeWv0eZvzLc0yA" name="_generator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xa8a9drTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjsNrTEeWv0eZvzLc0yA" name="_oosMap" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xbChcdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjstrTEeWv0eZvzLc0yA" name="_oosKeyListMapbyOOSGroupId" visibility="protected" type="_xVCAIdrTEeWv0eZvzLc0yA" association="_xbChdNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjtNrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xbChd9rTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjttrTEeWv0eZvzLc0yA" name="_firstCqsOOS" visibility="protected" type="_xXs5q9rTEeWv0eZvzLc0yA" association="_xbChetrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjuNrTEeWv0eZvzLc0yA" name="OOS_TYPE" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjudrTEeWv0eZvzLc0yA" value="&quot;OOS&quot;"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfYNrTEeWv0eZvzLc0yA" name="OfferMapper" specification="_xYLa89rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfYdrTEeWv0eZvzLc0yA" name="service" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfYtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfY9rTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfZNrTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfZdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfZtrTEeWv0eZvzLc0yA" name="firstCqsOOS" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfZ9rTEeWv0eZvzLc0yA" type="_xQ1cldrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_service = service;&#xD;
		_generator = generator;&#xD;
		_oosMap = oosMap;&#xD;
		_oosKeyListMapbyOOSGroupId = oosKeyListMapbyOOSGroupId;&#xD;
		_ctx = ctx;&#xD;
     _firstCqsOOS=firstCqsOOS;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ1cltrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQ1cl9rTEeWv0eZvzLc0yA" name="includeDeliverables">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQ1cmNrTEeWv0eZvzLc0yA" name="includeModifiers">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xQ1cmdrTEeWv0eZvzLc0yA" name="sourceObligationI">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYRhUNrTEeWv0eZvzLc0yA" type="_xVCAO9rTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYLa89rTEeWv0eZvzLc0yA" name="OfferMapper" visibility="package" method="_xaFfYNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYLa-trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYLa-9rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYLa9NrTEeWv0eZvzLc0yA" name="service" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa9drTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa9trTEeWv0eZvzLc0yA" name="oosMap" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa99rTEeWv0eZvzLc0yA" name="oosKeyListMapbyOOSGroupId" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa-NrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa-drTEeWv0eZvzLc0yA" name="firstCqsOOS" type="_xXs5q9rTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYLa_NrTEeWv0eZvzLc0yA" type="_xQ1cldrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ7jMNrTEeWv0eZvzLc0yA" name="OosMapper" visibility="package" isAbstract="true">
                    <ownedAttribute xmi:id="_xZOjutrTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xbChfdrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjvNrTEeWv0eZvzLc0yA" name="_generator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xbChgNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZOjvtrTEeWv0eZvzLc0yA" name="_ctx" visibility="protected" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xbChg9rTEeWv0eZvzLc0yA">
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjv9rTEeWv0eZvzLc0yA" value="null"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfaNrTEeWv0eZvzLc0yA" name="OosMapper" specification="_xYRhUdrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfadrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfatrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfa9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfbNrTEeWv0eZvzLc0yA" type="_xQ7jMNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _generator = generator;&#xD;
     _ctx  = ctx;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfbdrTEeWv0eZvzLc0yA" name="OosMapper" specification="_xYRhWNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfbtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfb9rTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfcNrTEeWv0eZvzLc0yA" type="_xQ7jMNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _generator = generator;&#xD;
     _ctx = null;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ7jMdrTEeWv0eZvzLc0yA" name="map" visibility="package" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xQ7jMtrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return">
                        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xQ7jM9rTEeWv0eZvzLc0yA" value="*"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYRhUdrTEeWv0eZvzLc0yA" name="OosMapper" visibility="protected" method="_xaFfaNrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYRhVdrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYRhVtrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYRhUtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhU9rTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhVNrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhV9rTEeWv0eZvzLc0yA" type="_xQ7jMNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYRhWNrTEeWv0eZvzLc0yA" name="OosMapper" method="_xaFfbdrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYRhW9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYRhXNrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYRhWdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhWtrTEeWv0eZvzLc0yA" name="generator" type="_xVCAKdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhXdrTEeWv0eZvzLc0yA" type="_xQ7jMNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ7jNdrTEeWv0eZvzLc0yA" name="PWAConstants">
                    <ownedComment xmi:id="_xaXzkNrTEeWv0eZvzLc0yA">
                      <body>Definition of constants for use in mapping PWA information to ES offer/modifier.&#xD;
&#xD;
@author Chunyang&#xD;
@since ES Service 9.0.5</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZOjwdrTEeWv0eZvzLc0yA" name="MOD_NAME_START_PAGE_COUNT" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjwtrTEeWv0eZvzLc0yA" value="&quot;PWA_START_PAGE_COUNT&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZOjw9rTEeWv0eZvzLc0yA" name="MOD_NAME_END_PAGE_COUNT" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjxNrTEeWv0eZvzLc0yA" value="&quot;PWA_END_PAGE_COUNT&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZOjxdrTEeWv0eZvzLc0yA" name="MOD_NAME_PAGE_LIMIT_REACHED_DATE" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZOjxtrTEeWv0eZvzLc0yA" value="&quot;PWA_PAGE_LIMIT_REACHED_DATE&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqMNrTEeWv0eZvzLc0yA" name="MOD_NAME_CURRENT_PAGE_COUNT" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqMdrTEeWv0eZvzLc0yA" value="&quot;PWA_CURRENT_PAGE_COUNT&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqMtrTEeWv0eZvzLc0yA" name="MOD_NAME_CURRENT_PAGE_COUNT_DATE" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqM9rTEeWv0eZvzLc0yA" value="&quot;PWA_CURRENT_PAGE_COUNT_DATE&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqNNrTEeWv0eZvzLc0yA" name="MOD_NAME_PAGE_LIMIT_STATUS" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqNdrTEeWv0eZvzLc0yA" value="&quot;PWA_PAGE_LIMIT_STATUS&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqNtrTEeWv0eZvzLc0yA" name="PAGE_LIMIT_STATUS_ACTIVE" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqN9rTEeWv0eZvzLc0yA" value="&quot;active&quot;"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqONrTEeWv0eZvzLc0yA" name="PAGE_LIMIT_STATUS_EXPIRED" isLeaf="true" isStatic="true" isReadOnly="true">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZUqOdrTEeWv0eZvzLc0yA" value="&quot;expired&quot;"/>
                    </ownedAttribute>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ7jNtrTEeWv0eZvzLc0yA" name="UnitListMapper" isAbstract="true">
                    <ownedComment xmi:id="_xaXzkdrTEeWv0eZvzLc0yA">
                      <body>@author antoine &#xD;
This map a unit list</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZUqOtrTEeWv0eZvzLc0yA" name="_transaction" visibility="protected" type="_xRgLBNrTEeWv0eZvzLc0yA" association="_xbChhtrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZUqPNrTEeWv0eZvzLc0yA" name="_XMLIdGenerator" visibility="protected" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xbChidrTEeWv0eZvzLc0yA"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfcdrTEeWv0eZvzLc0yA" name="UnitListMapper" specification="_xWXc0NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfctrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfc9rTEeWv0eZvzLc0yA" type="_xQ7jNtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_transaction = transaction;&#xD;
     _XMLIdGenerator = XMLIdGenerator.getXMLIdGenerator();&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfdNrTEeWv0eZvzLc0yA" name="getInstance" specification="_xWXc1drTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfddrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfdtrTEeWv0eZvzLc0yA" type="_xQ7jNtrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroUnitListMapper(transaction);&#xD;
&#xD;
     &#xD;
 </body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ7jN9rTEeWv0eZvzLc0yA" name="map" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA _xU75etrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYRhXtrTEeWv0eZvzLc0yA" type="_xV47utrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xWXc0NrTEeWv0eZvzLc0yA" name="UnitListMapper" visibility="protected" method="_xaFfcdrTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xWXc0trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xWXc09rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xWXc0drTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xWXc1NrTEeWv0eZvzLc0yA" type="_xQ7jNtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xWXc1drTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaFfdNrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xWXc1trTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xWXc19rTEeWv0eZvzLc0yA" type="_xQ7jNtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ7jOdrTEeWv0eZvzLc0yA" name="WarningMapper" isAbstract="true">
                    <ownedAttribute xmi:id="_xZUqPtrTEeWv0eZvzLc0yA" name="_cqsWarnings" visibility="protected" type="_xVCAFdrTEeWv0eZvzLc0yA" association="_xbChjNrTEeWv0eZvzLc0yA"/>
                    <ownedAttribute xmi:id="_xZUqP9rTEeWv0eZvzLc0yA" name="_sapRegionDisplayName" visibility="protected">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfd9rTEeWv0eZvzLc0yA" name="WarningMapper" specification="_xYRhX9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfeNrTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFfedrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfetrTEeWv0eZvzLc0yA" type="_xQ7jOdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>_cqsWarnings = cqsWarnings;&#xD;
 	_sapRegionDisplayName = sapRegionDisplayName;&#xD;
 </body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfe9rTEeWv0eZvzLc0yA" name="getInstance" specification="_xYRhZ9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFffNrTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xaFffdrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfftrTEeWv0eZvzLc0yA" type="_xQ7jOdrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>return new MetroWarningMapper(cqsWarnings, sapRegionDisplayName);&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xQ7jO9rTEeWv0eZvzLc0yA" name="map" isAbstract="true" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYRhZtrTEeWv0eZvzLc0yA" type="_xVUUAtrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYRhX9rTEeWv0eZvzLc0yA" name="WarningMapper" method="_xaFfd9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xYRhYtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xYRhY9rTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xYRhYNrTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhYdrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYRhZNrTEeWv0eZvzLc0yA" type="_xQ7jOdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xYRhZ9rTEeWv0eZvzLc0yA" name="getInstance" isStatic="true" method="_xaFfe9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYRhaNrTEeWv0eZvzLc0yA" name="cqsWarnings" type="_xVCAFdrTEeWv0eZvzLc0yA"/>
                      <ownedParameter xmi:id="_xYRhadrTEeWv0eZvzLc0yA" name="sapRegionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xYRhatrTEeWv0eZvzLc0yA" type="_xQ7jOdrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xQ7jPNrTEeWv0eZvzLc0yA" name="WorkingMapper" isLeaf="true">
                    <ownedComment xmi:id="_xaXzktrTEeWv0eZvzLc0yA">
                      <body>This class is mapping working for CQS or ODS</body>
                    </ownedComment>
                    <ownedAttribute xmi:id="_xZUqQNrTEeWv0eZvzLc0yA" name="_sourceSystemStatus" visibility="protected">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedAttribute xmi:id="_xZUqQtrTEeWv0eZvzLc0yA" name="_regionDisplayName" visibility="protected">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFff9rTEeWv0eZvzLc0yA" name="WorkingMapper" specification="_xRBp0NrTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfgNrTEeWv0eZvzLc0yA" name="sourceSystemStatus">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfgdrTEeWv0eZvzLc0yA" name="regionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xaFfgtrTEeWv0eZvzLc0yA" type="_xQ7jPNrTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>super();&#xD;
		_sourceSystemStatus = sourceSystemStatus;&#xD;
		_regionDisplayName = regionDisplayName;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xaFfg9rTEeWv0eZvzLc0yA" name="map" specification="_xRBp1trTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xaFfhNrTEeWv0eZvzLc0yA" type="_xV47strTEeWv0eZvzLc0yA" direction="return"/>
                      <language>java</language>
                      <body>WorkingComplexType working = new WorkingComplexType();&#xD;
		working.setWorkingName(_regionDisplayName);&#xD;
		working.setWorkingValue(_sourceSystemStatus);&#xD;
		return working;&#xD;
	</body>
                    </ownedBehavior>
                    <ownedOperation xmi:id="_xRBp0NrTEeWv0eZvzLc0yA" name="WorkingMapper" method="_xaFff9rTEeWv0eZvzLc0yA">
                      <eAnnotations xmi:id="_xRBp09rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_xRBp1NrTEeWv0eZvzLc0yA" key="create"/>
                      </eAnnotations>
                      <ownedParameter xmi:id="_xRBp0drTEeWv0eZvzLc0yA" name="sourceSystemStatus">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xRBp0trTEeWv0eZvzLc0yA" name="regionDisplayName">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      </ownedParameter>
                      <ownedParameter xmi:id="_xRBp1drTEeWv0eZvzLc0yA" type="_xQ7jPNrTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:id="_xRBp1trTEeWv0eZvzLc0yA" name="map" method="_xaFfg9rTEeWv0eZvzLc0yA">
                      <ownedParameter xmi:id="_xYRhbNrTEeWv0eZvzLc0yA" type="_xV47strTEeWv0eZvzLc0yA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_xXs5q9rTEeWv0eZvzLc0yA" name="Object"/>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNkNrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNkdrTEeWv0eZvzLc0yA _xZIc8NrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNkdrTEeWv0eZvzLc0yA" name="" type="_xQI5F9rTEeWv0eZvzLc0yA" association="_xawNkNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNk9rTEeWv0eZvzLc0yA" name="" memberEnd="_xawNlNrTEeWv0eZvzLc0yA _xZIc8trTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNlNrTEeWv0eZvzLc0yA" name="" type="_xQI5F9rTEeWv0eZvzLc0yA" association="_xawNk9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNltrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNl9rTEeWv0eZvzLc0yA _xZIc9NrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNl9rTEeWv0eZvzLc0yA" name="" type="_xQI5F9rTEeWv0eZvzLc0yA" association="_xawNltrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNmdrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNmtrTEeWv0eZvzLc0yA _xZIc9trTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNmtrTEeWv0eZvzLc0yA" name="" type="_xQI5F9rTEeWv0eZvzLc0yA" association="_xawNmdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNnNrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNndrTEeWv0eZvzLc0yA _xZIc-trTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNndrTEeWv0eZvzLc0yA" name="" type="_xQO_p9rTEeWv0eZvzLc0yA" association="_xawNnNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNn9rTEeWv0eZvzLc0yA" name="" memberEnd="_xawNoNrTEeWv0eZvzLc0yA _xZIc_NrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNoNrTEeWv0eZvzLc0yA" name="" type="_xQO_p9rTEeWv0eZvzLc0yA" association="_xawNn9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNotrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNo9rTEeWv0eZvzLc0yA _xZIc_trTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNo9rTEeWv0eZvzLc0yA" name="" type="_xQO_p9rTEeWv0eZvzLc0yA" association="_xawNotrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNpdrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNptrTEeWv0eZvzLc0yA _xZIdANrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNptrTEeWv0eZvzLc0yA" name="" type="_xQO_p9rTEeWv0eZvzLc0yA" association="_xawNpdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNqNrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNqdrTEeWv0eZvzLc0yA _xZIdAtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNqdrTEeWv0eZvzLc0yA" name="" type="_xQO_qdrTEeWv0eZvzLc0yA" association="_xawNqNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNq9rTEeWv0eZvzLc0yA" name="" memberEnd="_xawNrNrTEeWv0eZvzLc0yA _xZIdBNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNrNrTEeWv0eZvzLc0yA" name="" type="_xQO_qdrTEeWv0eZvzLc0yA" association="_xawNq9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNrtrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNr9rTEeWv0eZvzLc0yA _xZIdBtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNr9rTEeWv0eZvzLc0yA" name="" type="_xQO_qdrTEeWv0eZvzLc0yA" association="_xawNrtrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNsdrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNstrTEeWv0eZvzLc0yA _xZIdCNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNstrTEeWv0eZvzLc0yA" name="" type="_xQO_rtrTEeWv0eZvzLc0yA" association="_xawNsdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xawNtNrTEeWv0eZvzLc0yA" name="" memberEnd="_xawNtdrTEeWv0eZvzLc0yA _xZIdCtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xawNtdrTEeWv0eZvzLc0yA" name="" type="_xQO_rtrTEeWv0eZvzLc0yA" association="_xawNtNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UMdrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UMtrTEeWv0eZvzLc0yA _xZIdDNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UMtrTEeWv0eZvzLc0yA" name="" type="_xQO_rtrTEeWv0eZvzLc0yA" association="_xa2UMdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UNNrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UNdrTEeWv0eZvzLc0yA _xZIdDtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UNdrTEeWv0eZvzLc0yA" name="" type="_xQO_rtrTEeWv0eZvzLc0yA" association="_xa2UNNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UN9rTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UONrTEeWv0eZvzLc0yA _xZIdENrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UONrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UN9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UOtrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UO9rTEeWv0eZvzLc0yA _xZIdEtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UO9rTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UOtrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UPdrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UPtrTEeWv0eZvzLc0yA _xZIdFNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UPtrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UPdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UQNrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UQdrTEeWv0eZvzLc0yA _xZIdFtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UQdrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UQNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UQ9rTEeWv0eZvzLc0yA" name="" memberEnd="_xa2URNrTEeWv0eZvzLc0yA _xZIdGNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2URNrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UQ9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2URtrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UR9rTEeWv0eZvzLc0yA _xZIdGtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UR9rTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2URtrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2USdrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UStrTEeWv0eZvzLc0yA _xZIdHNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UStrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2USdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UTNrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UTdrTEeWv0eZvzLc0yA _xZIdHtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UTdrTEeWv0eZvzLc0yA" name="" type="_xQVGQNrTEeWv0eZvzLc0yA" association="_xa2UTNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UT9rTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UUNrTEeWv0eZvzLc0yA _xZIdINrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UUNrTEeWv0eZvzLc0yA" name="" type="_xQVGS9rTEeWv0eZvzLc0yA" association="_xa2UT9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UUtrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UU9rTEeWv0eZvzLc0yA _xZIdItrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UU9rTEeWv0eZvzLc0yA" name="" type="_xQVGS9rTEeWv0eZvzLc0yA" association="_xa2UUtrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa2UVdrTEeWv0eZvzLc0yA" name="" memberEnd="_xa2UVtrTEeWv0eZvzLc0yA _xZIdJNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa2UVtrTEeWv0eZvzLc0yA" name="" type="_xQVGT9rTEeWv0eZvzLc0yA" association="_xa2UVdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a0drTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a0trTEeWv0eZvzLc0yA _xZIdJ9rTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a0trTEeWv0eZvzLc0yA" name="" type="_xQVGT9rTEeWv0eZvzLc0yA" association="_xa8a0drTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a1NrTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a1drTEeWv0eZvzLc0yA _xZOjk9rTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a1drTEeWv0eZvzLc0yA" name="" type="_xQVGT9rTEeWv0eZvzLc0yA" association="_xa8a1NrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a19rTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a2NrTEeWv0eZvzLc0yA _xZOjl9rTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a2NrTEeWv0eZvzLc0yA" name="" type="_xQVGT9rTEeWv0eZvzLc0yA" association="_xa8a19rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a2trTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a29rTEeWv0eZvzLc0yA _xZOjm9rTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a29rTEeWv0eZvzLc0yA" name="" type="_xQbM4NrTEeWv0eZvzLc0yA" association="_xa8a2trTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a3drTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a3trTEeWv0eZvzLc0yA _xZOjndrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a3trTEeWv0eZvzLc0yA" name="" type="_xQbM4NrTEeWv0eZvzLc0yA" association="_xa8a3drTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a4NrTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a4drTEeWv0eZvzLc0yA _xZOjn9rTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a4drTEeWv0eZvzLc0yA" name="" type="_xQbM4NrTEeWv0eZvzLc0yA" association="_xa8a4NrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a49rTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a5NrTEeWv0eZvzLc0yA _xZOjotrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a5NrTEeWv0eZvzLc0yA" name="" type="_xQbz99rTEeWv0eZvzLc0yA" association="_xa8a49rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a5trTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a59rTEeWv0eZvzLc0yA _xZOjpNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a59rTEeWv0eZvzLc0yA" name="" type="_xQ1ckdrTEeWv0eZvzLc0yA" association="_xa8a5trTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a6drTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a6trTEeWv0eZvzLc0yA _xZOjptrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a6trTEeWv0eZvzLc0yA" name="" type="_xQ1ck9rTEeWv0eZvzLc0yA" association="_xa8a6drTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a7NrTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a7drTEeWv0eZvzLc0yA _xZOjqNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a7drTEeWv0eZvzLc0yA" name="" type="_xQ1ck9rTEeWv0eZvzLc0yA" association="_xa8a7NrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a79rTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a8NrTEeWv0eZvzLc0yA _xZOjqtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a8NrTEeWv0eZvzLc0yA" name="" type="_xQ1ck9rTEeWv0eZvzLc0yA" association="_xa8a79rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a8trTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a89rTEeWv0eZvzLc0yA _xZOjrNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a89rTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xa8a8trTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xa8a9drTEeWv0eZvzLc0yA" name="" memberEnd="_xa8a9trTEeWv0eZvzLc0yA _xZOjrtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xa8a9trTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xa8a9drTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChcdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChctrTEeWv0eZvzLc0yA _xZOjsNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChctrTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xbChcdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChdNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChddrTEeWv0eZvzLc0yA _xZOjstrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChddrTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xbChdNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChd9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbCheNrTEeWv0eZvzLc0yA _xZOjtNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbCheNrTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xbChd9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChetrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChe9rTEeWv0eZvzLc0yA _xZOjttrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChe9rTEeWv0eZvzLc0yA" name="" type="_xQ1cldrTEeWv0eZvzLc0yA" association="_xbChetrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChfdrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChftrTEeWv0eZvzLc0yA _xZOjutrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChftrTEeWv0eZvzLc0yA" name="" type="_xQ7jMNrTEeWv0eZvzLc0yA" association="_xbChfdrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChgNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChgdrTEeWv0eZvzLc0yA _xZOjvNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChgdrTEeWv0eZvzLc0yA" name="" type="_xQ7jMNrTEeWv0eZvzLc0yA" association="_xbChgNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChg9rTEeWv0eZvzLc0yA" name="" memberEnd="_xbChhNrTEeWv0eZvzLc0yA _xZOjvtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChhNrTEeWv0eZvzLc0yA" name="" type="_xQ7jMNrTEeWv0eZvzLc0yA" association="_xbChg9rTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChhtrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChh9rTEeWv0eZvzLc0yA _xZUqOtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChh9rTEeWv0eZvzLc0yA" name="" type="_xQ7jNtrTEeWv0eZvzLc0yA" association="_xbChhtrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChidrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChitrTEeWv0eZvzLc0yA _xZUqPNrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChitrTEeWv0eZvzLc0yA" name="" type="_xQ7jNtrTEeWv0eZvzLc0yA" association="_xbChidrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Association" xmi:id="_xbChjNrTEeWv0eZvzLc0yA" name="" memberEnd="_xbChjdrTEeWv0eZvzLc0yA _xZUqPtrTEeWv0eZvzLc0yA">
                    <ownedEnd xmi:id="_xbChjdrTEeWv0eZvzLc0yA" name="" type="_xQ7jOdrTEeWv0eZvzLc0yA" association="_xbChjNrTEeWv0eZvzLc0yA"/>
                  </packagedElement>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rydrTEeWv0eZvzLc0yA" name="CQSGetContractIntegration">
                  <ownedComment xmi:id="_xaXzdtrTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xVy1GdrTEeWv0eZvzLc0yA" general="_xP8r09rTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SDtrTEeWv0eZvzLc0yA" name="CQSGetContractIntegration" specification="_xP8rytrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SD9rTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SENrTEeWv0eZvzLc0yA" type="_xP8rydrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super(regionName);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SEdrTEeWv0eZvzLc0yA" name="doContractIntegration" specification="_xXmy9drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SEtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SE9rTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SFNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Mapping ES request to CQS request&quot;);&#xD;
		// map ES request to CQS request&#xD;
		Object cqsRequest = mapEsRequest2CQSRequest(request);&#xD;
		&#xD;
		// pass request to the region and get the result&#xD;
		Transaction transaction = null;&#xD;
		try {&#xD;
			ESLog.debug(&quot;Send request to CQS using Region: &quot; + _region.getConfiguration().getRegionName()); &#xD;
				transaction = _region.execute(EsConstants.SAP_FUNCTION_NAME_CQS_CONTRACT_ENT, &#xD;
						cqsRequest, getRegionDisplayName(),isLocal(),handler);&#xD;
				&#xD;
		} catch (Exception e) {&#xD;
			if(ESLog.isDebugLogEnabled())&#xD;
				ESLog.debug(&quot;Exception while connecting to CQS&quot;, e);&#xD;
			&#xD;
			ESLog.error(&quot;Exception while connecting to CQS&quot;+ e.getMessage());&#xD;
			if (e instanceof SifException) {&#xD;
				throw (SifException)e;&#xD;
			}&#xD;
	            throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR, &#xD;
	            		&quot;Exception while connecting to CQS&quot;, e.toString());&#xD;
		}&#xD;
				&#xD;
		// Check which reply we have error, unit list, or normal reply&#xD;
		if(transaction.isSourceSystemError()) {&#xD;
			// CQS ERRORS&#xD;
			mapSourceSystemError2ComposedErrors((ContractTransaction) transaction, request);				&#xD;
			return (ContractTransaction) transaction;&#xD;
		}else if (transaction instanceof ErrorTransaction) {&#xD;
			ESLog.debug(&quot;We have an error ...&quot;);&#xD;
			// ERROR&#xD;
			// There is no need to do anything here, it will be done in the composition layer&#xD;
			// so we simply return the transaction&#xD;
			return mapErrorTransaction2ComposedErrors(EsConstants.SAP_FUNCTION_NAME_CQS_CONTRACT_ENT,(ErrorTransaction)transaction);				&#xD;
		} else  {&#xD;
			ESLog.debug(&quot;We have a reply ...&quot;);&#xD;
			// NORMAL REPLY&#xD;
			mapCQSReply2EsReply((ContractTransaction) transaction, request);&#xD;
			return (ContractTransaction) transaction;&#xD;
		}		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SFdrTEeWv0eZvzLc0yA" name="mapCQSReply2EsReply" specification="_xXmy-drTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SFtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SF9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;start&quot;);&#xD;
		ContractEntitlementMapper mapper = ContractEntitlementMapper.getInstance(transaction, request);&#xD;
		&#xD;
		try {&#xD;
			ESLog.debug(&quot;Creating the reply structure&quot;);&#xD;
			EsReply reply = new EsReply();&#xD;
			reply.setEsHeader(new EsHeader());&#xD;
			reply.getEsHeader().setInputRequest(request);&#xD;
			ESLog.debug(&quot;Warnings will be mapped&quot;);&#xD;
			reply.getEsHeader().setWarnings(mapWarnings(transaction));&#xD;
			reply.setEsReplyChoice(new EsReplyChoice());&#xD;
			ESLog.debug(&quot;A ContractEntitlement will be mapped&quot;);&#xD;
			reply.getEsReplyChoice().setContractEntitlement(mapper.map());&#xD;
			if(request.getEsRequestComplexTypeChoice().getContractRequest().getIncludeWorkings()) {&#xD;
				reply.getEsReplyChoice().getContractEntitlement().addWorking(mapWorking(transaction));&#xD;
			}&#xD;
			transaction.setMappedReply(reply);&#xD;
&#xD;
		}catch(MappingException e) {&#xD;
			ESLog.info(&quot;Exception while mapping&quot;, e);&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;&quot;);&#xD;
		}&#xD;
		&#xD;
		ESLog.debug(&quot;end&quot;);		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SGNrTEeWv0eZvzLc0yA" name="mapEsRequest2CQSRequest" specification="_xXmy_NrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SGdrTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SGtrTEeWv0eZvzLc0yA" type="_xXmy8NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return CQSRequestMapper.getInstance().map(esRequest);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xP8rytrTEeWv0eZvzLc0yA" name="CQSGetContractIntegration" method="_xZ5SDtrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xP8rzNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xP8rzdrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xP8ry9rTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xP8rztrTEeWv0eZvzLc0yA" type="_xP8rydrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmy9drTEeWv0eZvzLc0yA" name="doContractIntegration" method="_xZ5SEdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmy9trTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmy99rTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmy-NrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmy-drTEeWv0eZvzLc0yA" name="mapCQSReply2EsReply" visibility="protected" method="_xZ5SFdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmy-trTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmy-9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmy_NrTEeWv0eZvzLc0yA" name="mapEsRequest2CQSRequest" method="_xZ5SGNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmy_drTEeWv0eZvzLc0yA" name="esRequest" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmy_trTEeWv0eZvzLc0yA" type="_xXmy8NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8rz9rTEeWv0eZvzLc0yA" name="CQSGetContractIntegrationTest">
                  <ownedComment xmi:id="_xaXzd9rTEeWv0eZvzLc0yA">
                    <body>@author gary_w_smith&#xD;
 *&#xD;
&#xD;
Window - Preferences - Java - Code Style - Code Templates</body>
                  </ownedComment>
                  <generalization xmi:id="_xXmy_9rTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SG9rTEeWv0eZvzLc0yA" name="testGoodSAID" specification="_xP8r0NrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>CQSGetContractIntegration cqsInt = new CQSGetContractIntegration(&quot;AM&quot;);&#xD;
		&#xD;
		EsRequestComplexType esRequest = null;		&#xD;
		String xml = &#xD;
			&quot;&lt;EsRequest>&quot; +&#xD;
			    &quot;&lt;Operation>getContractEntitlement&lt;/Operation>&quot; +&#xD;
			    &quot;&lt;ClientAppID>EsTest&lt;/ClientAppID>&quot; +&#xD;
			    &quot;&lt;ContractRequest>&quot; +&#xD;
			        &quot;&lt;ContractIdentifierType>SvcAgreementID&lt;/ContractIdentifierType>&quot; + &#xD;
			        &quot;&lt;DataEntrySite>&lt;/DataEntrySite>&quot; +&#xD;
			        &quot;&lt;SourceCustomerID>&lt;/SourceCustomerID>&quot; +&#xD;
			        &quot;&lt;ActiveContractsOnly>&lt;/ActiveContractsOnly>&quot; +&#xD;
			        &quot;&lt;ActiveServicesOnly>&lt;/ActiveServicesOnly>&quot; +&#xD;
			        &quot;&lt;IncludeAddresses>&lt;/IncludeAddresses>&quot; +&#xD;
			        &quot;&lt;IncludeContacts>&lt;/IncludeContacts>&quot; +&#xD;
			        &quot;&lt;IncludeOffers>&lt;/IncludeOffers>&quot; +&#xD;
			        &quot;&lt;IncludeDeliverables>&lt;/IncludeDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeModifiers>&lt;/IncludeModifiers>&quot; +&#xD;
			        &quot;&lt;ContractIdentifier>101008181172&lt;/ContractIdentifier>&quot; + &#xD;
			        &quot;&lt;ProductID>&lt;/ProductID>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueOffers>&lt;/IncludeUniqueOffers>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueDeliverables>&lt;/IncludeUniqueDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeOOSes>&lt;/IncludeOOSes>&quot; +&#xD;
			        &quot;&lt;IsoCountryCd>&lt;/IsoCountryCd>&quot; +&#xD;
			        &quot;&lt;StandAloneOffersOnly>&lt;/StandAloneOffersOnly>&quot; +&#xD;
			        &quot;&lt;EntitlementCheckDate>&lt;/EntitlementCheckDate>&quot; +&#xD;
			        &quot;&lt;CustomerDefinedID>&lt;/CustomerDefinedID>&quot; +&#xD;
			    &quot;&lt;/ContractRequest>&quot; +&#xD;
			&quot;&lt;/EsRequest>&quot;;&#xD;
			&#xD;
		try{&#xD;
			esRequest = (EsRequestComplexType) MarshalHelper.unmarshal(xml,null,EsRequestComplexType.class);&#xD;
			RequestCleaner.cleanThisRequest(esRequest);&#xD;
&#xD;
			ContractTransaction trans = cqsInt.doContractIntegration(esRequest, new MetricsHandler());&#xD;
			&#xD;
			assertTrue(trans.isSourceSystemStandardReply());&#xD;
&#xD;
			EsReply mappedReply = trans.getMappedReply();&#xD;
			assertNotNull(mappedReply);&#xD;
			&#xD;
			ContractEntitlementComplexType ent = mappedReply.getEsReplyChoice().getContractEntitlement();&#xD;
			assertTrue(ent.getContractCount() >= 1);&#xD;
			&#xD;
			assertEquals(ent.getContract(0).getSvcAgreementID(), &quot;101008181172&quot;);&#xD;
						&#xD;
		}catch(SifException e){&#xD;
			fail(&quot;Should not have thrown a SifException on doContractIntegration&quot;);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SHNrTEeWv0eZvzLc0yA" name="testSAIDwithoutType" specification="_xP8r0drTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>// Use a valid SAID but omit the contract identifier type.  It should be found &#xD;
		CQSGetContractIntegration cqsInt = new CQSGetContractIntegration(&quot;AM&quot;);&#xD;
		&#xD;
		EsRequestComplexType esRequest = null;		&#xD;
		String xml = &#xD;
			&quot;&lt;EsRequest>&quot; +&#xD;
			    &quot;&lt;Operation>getContractEntitlement&lt;/Operation>&quot; +&#xD;
			    &quot;&lt;ClientAppID>EsTest&lt;/ClientAppID>&quot; +&#xD;
			    &quot;&lt;ContractRequest>&quot; +&#xD;
			        &quot;&lt;ContractIdentifierType>&lt;/ContractIdentifierType>&quot; + &#xD;
			        &quot;&lt;DataEntrySite>&lt;/DataEntrySite>&quot; +&#xD;
			        &quot;&lt;SourceCustomerID>&lt;/SourceCustomerID>&quot; +&#xD;
			        &quot;&lt;ActiveContractsOnly>&lt;/ActiveContractsOnly>&quot; +&#xD;
			        &quot;&lt;ActiveServicesOnly>&lt;/ActiveServicesOnly>&quot; +&#xD;
			        &quot;&lt;IncludeAddresses>&lt;/IncludeAddresses>&quot; +&#xD;
			        &quot;&lt;IncludeContacts>&lt;/IncludeContacts>&quot; +&#xD;
			        &quot;&lt;IncludeOffers>&lt;/IncludeOffers>&quot; +&#xD;
			        &quot;&lt;IncludeDeliverables>&lt;/IncludeDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeModifiers>&lt;/IncludeModifiers>&quot; +&#xD;
			        &quot;&lt;ContractIdentifier>101008181172&lt;/ContractIdentifier>&quot; + &#xD;
			        &quot;&lt;ProductID>&lt;/ProductID>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueOffers>&lt;/IncludeUniqueOffers>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueDeliverables>&lt;/IncludeUniqueDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeOOSes>&lt;/IncludeOOSes>&quot; +&#xD;
			        &quot;&lt;IsoCountryCd>&lt;/IsoCountryCd>&quot; +&#xD;
			        &quot;&lt;StandAloneOffersOnly>&lt;/StandAloneOffersOnly>&quot; +&#xD;
			        &quot;&lt;EntitlementCheckDate>&lt;/EntitlementCheckDate>&quot; +&#xD;
			        &quot;&lt;CustomerDefinedID>&lt;/CustomerDefinedID>&quot; +&#xD;
			    &quot;&lt;/ContractRequest>&quot; +&#xD;
			&quot;&lt;/EsRequest>&quot;;&#xD;
			&#xD;
		try{&#xD;
			esRequest = (EsRequestComplexType) MarshalHelper.unmarshal(xml,null,EsRequestComplexType.class);&#xD;
			RequestCleaner.cleanThisRequest(esRequest);&#xD;
&#xD;
			ContractTransaction trans = cqsInt.doContractIntegration(esRequest, new MetricsHandler());&#xD;
			&#xD;
			assertTrue(trans.isSourceSystemStandardReply());&#xD;
&#xD;
			EsReply mappedReply = trans.getMappedReply();&#xD;
			assertNotNull(mappedReply);&#xD;
			&#xD;
			ContractEntitlementComplexType ent = mappedReply.getEsReplyChoice().getContractEntitlement();&#xD;
			assertTrue(ent.getContractCount() >= 1);&#xD;
			&#xD;
			assertEquals(ent.getContract(0).getSvcAgreementID(), &quot;101008181172&quot;);&#xD;
						&#xD;
		}catch(SifException e){&#xD;
			fail(&quot;Should not have thrown a SifException on doContractIntegration&quot;);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SHdrTEeWv0eZvzLc0yA" name="testAllLists" specification="_xP8r0trTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>CQSGetContractIntegration cqsInt = new CQSGetContractIntegration(&quot;AM&quot;);&#xD;
		&#xD;
		EsRequestComplexType esRequest = null;		&#xD;
		String xml = &#xD;
			&quot;&lt;EsRequest>&quot; +&#xD;
			    &quot;&lt;Operation>getContractEntitlement&lt;/Operation>&quot; +&#xD;
			    &quot;&lt;ClientAppID>EsTest&lt;/ClientAppID>&quot; +&#xD;
			    &quot;&lt;ContractRequest>&quot; +&#xD;
			        &quot;&lt;ContractIdentifierType>SvcAgreementID&lt;/ContractIdentifierType>&quot; + &#xD;
			        &quot;&lt;DataEntrySite>&lt;/DataEntrySite>&quot; +&#xD;
			        &quot;&lt;SourceCustomerID>&lt;/SourceCustomerID>&quot; +&#xD;
			        &quot;&lt;ActiveContractsOnly>&lt;/ActiveContractsOnly>&quot; +&#xD;
			        &quot;&lt;ActiveServicesOnly>&lt;/ActiveServicesOnly>&quot; +&#xD;
			        &quot;&lt;IncludeAddresses>true&lt;/IncludeAddresses>&quot; +&#xD;
			        &quot;&lt;IncludeContacts>true&lt;/IncludeContacts>&quot; +&#xD;
			        &quot;&lt;IncludeOffers>true&lt;/IncludeOffers>&quot; +&#xD;
			        &quot;&lt;IncludeDeliverables>true&lt;/IncludeDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeModifiers>true&lt;/IncludeModifiers>&quot; +&#xD;
			        &quot;&lt;ContractIdentifier>101008181172&lt;/ContractIdentifier>&quot; + &#xD;
			        &quot;&lt;ProductID>&lt;/ProductID>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueOffers>&lt;/IncludeUniqueOffers>&quot; +&#xD;
			        &quot;&lt;IncludeUniqueDeliverables>&lt;/IncludeUniqueDeliverables>&quot; +&#xD;
			        &quot;&lt;IncludeOOSes>true&lt;/IncludeOOSes>&quot; +&#xD;
			        &quot;&lt;IsoCountryCd>&lt;/IsoCountryCd>&quot; +&#xD;
			        &quot;&lt;StandAloneOffersOnly>&lt;/StandAloneOffersOnly>&quot; +&#xD;
			        &quot;&lt;EntitlementCheckDate>&lt;/EntitlementCheckDate>&quot; +&#xD;
			        &quot;&lt;CustomerDefinedID>&lt;/CustomerDefinedID>&quot; +&#xD;
			    &quot;&lt;/ContractRequest>&quot; +&#xD;
			&quot;&lt;/EsRequest>&quot;;&#xD;
			&#xD;
		try{&#xD;
			esRequest = (EsRequestComplexType) MarshalHelper.unmarshal(xml,null,EsRequestComplexType.class);&#xD;
			RequestCleaner.cleanThisRequest(esRequest);&#xD;
&#xD;
			ContractTransaction trans = cqsInt.doContractIntegration(esRequest, new MetricsHandler());&#xD;
			assertTrue(trans.isSourceSystemStandardReply());&#xD;
&#xD;
			EsReply mappedReply = trans.getMappedReply();&#xD;
			assertNotNull(mappedReply);&#xD;
&#xD;
			ContractEntitlementComplexType ent = mappedReply.getEsReplyChoice().getContractEntitlement();&#xD;
			assertTrue(ent.getOOSCount() >= 1);&#xD;
			assertTrue(ent.getContactCount() >= 1);&#xD;
			assertTrue(ent.getContractCount() >= 1);&#xD;
			assertTrue(ent.getLocationCount() >= 1);&#xD;
		}catch(SifException e){&#xD;
			fail(&quot;Should not have thrown a SifException on doContractIntegration&quot;);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xP8r0NrTEeWv0eZvzLc0yA" name="testGoodSAID" method="_xZ5SG9rTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP8r0drTEeWv0eZvzLc0yA" name="testSAIDwithoutType" method="_xZ5SHNrTEeWv0eZvzLc0yA"/>
                  <ownedOperation xmi:id="_xP8r0trTEeWv0eZvzLc0yA" name="testAllLists" method="_xZ5SHdrTEeWv0eZvzLc0yA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xP8r09rTEeWv0eZvzLc0yA" name="CQSIntegration" isAbstract="true">
                  <ownedComment xmi:id="_xaXzeNrTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xVy1KtrTEeWv0eZvzLc0yA" general="_xQCycNrTEeWv0eZvzLc0yA"/>
                  <ownedAttribute xmi:id="_xZCWf9rTEeWv0eZvzLc0yA" name="_isLocal" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWgNrTEeWv0eZvzLc0yA" value="false"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_xZCWgtrTEeWv0eZvzLc0yA" name="_region" visibility="protected" type="_xVy1ItrTEeWv0eZvzLc0yA" association="_xaqHMNrTEeWv0eZvzLc0yA">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_xZCWg9rTEeWv0eZvzLc0yA" value="null"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SHtrTEeWv0eZvzLc0yA" name="CQSIntegration" specification="_xQCyYNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SH9rTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SINrTEeWv0eZvzLc0yA" type="_xP8r09rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
		_region = RegionFactory.getInstance().getRegionByName(regionName);&#xD;
		_isLocal = regionName.equals(_region.getConfiguration().getRegionName());&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SIdrTEeWv0eZvzLc0yA" name="isLocal" specification="_xQCyZdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SItrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return _isLocal;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SI9rTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" specification="_xQCyZ9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SJNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return _region.inFailoverMode();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SJdrTEeWv0eZvzLc0yA" name="getRegionName" specification="_xQCyadrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SJtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return _region.getConfiguration().getRegionName();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SJ9rTEeWv0eZvzLc0yA" name="getRegionConfiguration" specification="_xQCya9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SKNrTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return _region.getConfiguration();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SKdrTEeWv0eZvzLc0yA" name="getName" specification="_xQCybNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SKtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return this.getClass().toString() + &quot;-&quot; + _region.getConfiguration().getRegionName();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SK9rTEeWv0eZvzLc0yA" name="getRegionDisplayName" specification="_xQCybtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SLNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return EsConstants.CQS_SYSTEM_NAME +getRegionName();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SLdrTEeWv0eZvzLc0yA" name="mapErrorTransaction2ComposedErrors" specification="_xXmzCNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SLtrTEeWv0eZvzLc0yA" name="sapFunctionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SL9rTEeWv0eZvzLc0yA" name="transaction" type="_xVy1EtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SMNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ContractTransaction ct = new ContractTransaction(_region.getConfiguration(), _region.inFailoverMode(),null, sapFunctionName, getRegionDisplayName(), _isLocal);&#xD;
		Throwable t = transaction.getSourceSystemThrowable();&#xD;
		ArrayList listErrors = new ArrayList();&#xD;
		if(t instanceof SifException) {&#xD;
			listErrors.add((SifException)t);		&#xD;
		}else {&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unkown Exception class:&quot;+ t.getClass().getName() +&quot;, Message: &quot;+t.getMessage());&#xD;
		}&#xD;
		&#xD;
		ct.setMappedErrors(listErrors);&#xD;
		return ct;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SMdrTEeWv0eZvzLc0yA" name="mapSourceSystemError2ComposedErrors" specification="_xXmzDNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SMtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SM9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <language>java</language>
                    <body>Collection cqsErrors = transaction.getSourceSystemErrors();&#xD;
		ErrorMapper mapper = ErrorMapper.getInstance(cqsErrors, request, transaction.getRegionDisplayName());&#xD;
		try {&#xD;
			transaction.setMappedErrors(mapper.map());&#xD;
			&#xD;
		} catch (MappingException e) {&#xD;
			throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Caught runtime exception &quot;+e.getMessage());&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SNNrTEeWv0eZvzLc0yA" name="mapWarnings" specification="_xVy1KNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SNdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SNtrTEeWv0eZvzLc0yA" type="_xVUUAtrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>WarningMapper mapper = WarningMapper.getInstance(transaction.getSourceSystemWarnings(), getRegionDisplayName());&#xD;
		&#xD;
		return mapper.map();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xQCyYNrTEeWv0eZvzLc0yA" name="CQSIntegration" visibility="protected" method="_xZ5SHtrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xQCyYtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xQCyY9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzedrTEeWv0eZvzLc0yA">
                      <body>*</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xQCyYdrTEeWv0eZvzLc0yA" name="regionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xQCyZNrTEeWv0eZvzLc0yA" type="_xP8r09rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyZdrTEeWv0eZvzLc0yA" name="isLocal" method="_xZ5SIdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCyZtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyZ9rTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" method="_xZ5SI9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCyaNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyadrTEeWv0eZvzLc0yA" name="getRegionName" method="_xZ5SJdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCyatrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCya9rTEeWv0eZvzLc0yA" name="getRegionConfiguration" method="_xZ5SJ9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzB9rTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCybNrTEeWv0eZvzLc0yA" name="getName" method="_xZ5SKdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCybdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCybtrTEeWv0eZvzLc0yA" name="getRegionDisplayName" isLeaf="true" method="_xZ5SK9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCyb9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xVy1KNrTEeWv0eZvzLc0yA" name="mapWarnings" visibility="protected" isLeaf="true" method="_xZ5SNNrTEeWv0eZvzLc0yA" raisedException="_xVy1FtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzetrTEeWv0eZvzLc0yA">
                      <body>Map warning</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xVy1KdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzD9rTEeWv0eZvzLc0yA" type="_xVUUAtrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzANrTEeWv0eZvzLc0yA" name="doContractIntegration" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzAdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzAtrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzA9rTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzBNrTEeWv0eZvzLc0yA" name="mapCQSReply2EsReply" visibility="protected" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzBdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzBtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzCNrTEeWv0eZvzLc0yA" name="mapErrorTransaction2ComposedErrors" visibility="protected" isLeaf="true" method="_xZ5SLdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzCdrTEeWv0eZvzLc0yA" name="sapFunctionName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXmzCtrTEeWv0eZvzLc0yA" name="transaction" type="_xVy1EtrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzC9rTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzDNrTEeWv0eZvzLc0yA" name="mapSourceSystemError2ComposedErrors" visibility="protected" isLeaf="true" method="_xZ5SMdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzDdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzDtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xQCycNrTEeWv0eZvzLc0yA" name="ContractIntegration" isAbstract="true">
                  <ownedComment xmi:id="_xaXze9rTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <interfaceRealization xmi:id="_xXmzENrTEeWv0eZvzLc0yA" client="_xQCycNrTEeWv0eZvzLc0yA" supplier="_xV47sNrTEeWv0eZvzLc0yA" contract="_xV47sNrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SN9rTEeWv0eZvzLc0yA" name="ContractIntegration" specification="_xQCycdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SONrTEeWv0eZvzLc0yA" type="_xQCycNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SOdrTEeWv0eZvzLc0yA" name="execute" specification="_xXmzEdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SOtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SO9rTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SPNrTEeWv0eZvzLc0yA" type="_xVy1FNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return doContractIntegration(request, handler);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SPdrTEeWv0eZvzLc0yA" name="mapWorking" specification="_xV47tNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SPtrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SP9rTEeWv0eZvzLc0yA" type="_xV47strTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>WorkingMapper mapper = new WorkingMapper(transaction.getSourceSystemStatus(),getRegionDisplayName());&#xD;
		&#xD;
		return mapper.map();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xQCycdrTEeWv0eZvzLc0yA" name="ContractIntegration" visibility="protected" method="_xZ5SN9rTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xQCyctrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xQCyc9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzfNrTEeWv0eZvzLc0yA">
                      <body>*</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xQCydNrTEeWv0eZvzLc0yA" type="_xQCycNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyddrTEeWv0eZvzLc0yA" name="getName" isAbstract="true">
                    <ownedParameter xmi:id="_xQCydtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xV47tNrTEeWv0eZvzLc0yA" name="mapWorking" visibility="protected" isLeaf="true" method="_xZ5SPdrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzfdrTEeWv0eZvzLc0yA">
                      <body>Map working</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xV47tdrTEeWv0eZvzLc0yA" name="transaction" type="_xRgLBNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5k9rTEeWv0eZvzLc0yA" type="_xV47strTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzEdrTEeWv0eZvzLc0yA" name="execute" method="_xZ5SOdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXmzEtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzE9rTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXmzFNrTEeWv0eZvzLc0yA" type="_xVy1FNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXmzFdrTEeWv0eZvzLc0yA" name="doContractIntegration" visibility="protected" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXs5kNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5kdrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5ktrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xQCyd9rTEeWv0eZvzLc0yA" name="ODSGetContractBySNIntegration">
                  <generalization xmi:id="_xV47vNrTEeWv0eZvzLc0yA" general="_xQI5DdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SQNrTEeWv0eZvzLc0yA" name="ODSGetContractBySNIntegration" specification="_xQCyeNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SQdrTEeWv0eZvzLc0yA" type="_xQCyd9rTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SQtrTEeWv0eZvzLc0yA" name="doContractIntegration" specification="_xXs5lNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SQ9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SRNrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SRdrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ContractTransaction tr = new ContractTransaction(null, false, null, null, &quot;ODS&quot;, false);&#xD;
&#xD;
     // Since 9.0.5 PWA, PSG logic is removed from Service.&#xD;
     //But in backend, the logic is not removed, now we can pass the &quot;false&quot; to db procedure as workaround.&#xD;
     boolean isPsgTransttionalRequest = false;&#xD;
     EntitlementBySnRequest snr = request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest();&#xD;
     OutputDetails details = new OutputDetails(snr);&#xD;
&#xD;
     EsReplyContext ctx = new EsReplyContext(details);&#xD;
     DbContractEntitlementManager dbContractEntitlementManager =DbContractEntitlementManager.getNewInstance();&#xD;
     try {&#xD;
     	ESLog.debug(&quot;Calling database&quot;);&#xD;
     	int errorId = dbContractEntitlementManager.getContractEntitlement(&#xD;
                     ctx,&#xD;
                     snr.getContractIdentifier(),&#xD;
                     snr.getContractIdentifierType(),&#xD;
                     snr.getDataEntrySite(),&#xD;
                     snr.getProductID(),&#xD;
                     snr.getSerialNumber(),&#xD;
                     snr.getSourceCustomerID(),&#xD;
                     snr.getRedAccessID(),&#xD;
                     snr.getRedGroupSerialNo(),&#xD;
                     snr.getMNContractSourceDoc(),&#xD;
                     null, //If SN is available, ISOCountryCode should be ignored for contract search according to WITS1221,&#xD;
                     null,// customer Defined ID is not map&#xD;
                     snr.getEntitlementCheckDate(),&#xD;
                     snr.getActiveContractsOnly(),&#xD;
                     snr.getActiveServicesOnly(),&#xD;
                     false, // standaloneOffersOnly is always set to false&#xD;
                     details,&#xD;
                     true, //for iso_country_code&#xD;
                     handler,&#xD;
                     isPsgTransttionalRequest);&#xD;
&#xD;
         // no error&#xD;
         if (errorId == 0) {&#xD;
             ESLog.debug(&quot;Building Combined XX Entitlement EsReply&quot;);&#xD;
             EsReply reply = buildCombinedEntitlementReply(ctx, request);&#xD;
             tr.setMappedReply(reply);&#xD;
             tr.setStandardizedProductHashMap(ctx.getAggProductIdMapping());&#xD;
             tr.setReplyContext(ctx);&#xD;
 			if(snr.getIncludeWorkings()) {&#xD;
 				reply.getEsReplyChoice().getCombinedUnitEntitlement().addWorking(mapWorking(tr));&#xD;
 			}&#xD;
             return tr;&#xD;
         }&#xD;
         // if the serial number identifies different products,&#xD;
         // this operation returns a unit list&#xD;
         else if (errorId == 202) {&#xD;
             ESLog.debug(&quot;Building UnitList EsReply&quot;);&#xD;
             EsReply reply = buildUnitListReply(ctx, request);&#xD;
             tr.setMappedReply(reply);&#xD;
             tr.setStandardizedProductHashMap(ctx.getAggProductIdMapping());&#xD;
             tr.setReplyContext(ctx);&#xD;
             return tr;&#xD;
         }&#xD;
&#xD;
         // map errorId to SifException&#xD;
         // this probably needs to be enhanced to provide more details&#xD;
         ESLog.debug(&quot;dbContractEntitlementManager returned error code &quot; + errorId);&#xD;
         throw ErrorFactory.getSifException(errorId);&#xD;
     } catch (DataAccessException dae) {&#xD;
         // map to SifException&#xD;
         //ESLog.error(&quot;DataAccessException&quot;, dae);&#xD;
         //throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unknown database exception while processing ContractRequest request.&quot;);&#xD;
         ESLog.debug(&quot;Caught a DataAccessException while processing ContractRequest.&quot;);&#xD;
         ContractTransaction trans = new ContractTransaction(null, false,null, &quot;&quot;, EsConstants.ODS_SYSTEM_NAME,true);&#xD;
         List&lt;SifException> mappedErrors=new ArrayList&lt;SifException>();&#xD;
         SifException sifException = ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unknow database exception while processing ContractRequest&quot;);&#xD;
         mappedErrors.add(sifException);&#xD;
         trans.setMappedErrors(mappedErrors);&#xD;
         return trans;            &#xD;
     } catch (DatabaseDownException e) {&#xD;
         ESLog.debug(&quot;Caught a DatabaseDownException while processing ContractRequest.&quot;);&#xD;
         ContractTransaction trans = new ContractTransaction(null, false,null, &quot;&quot;, EsConstants.ODS_SYSTEM_NAME,true);&#xD;
         List&lt;SifException> mappedErrors=new ArrayList&lt;SifException>();&#xD;
         SifException sifException = ErrorFactory.getSifException(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE,&quot;ES database is down&quot;);&#xD;
         mappedErrors.add(sifException);&#xD;
         trans.setMappedErrors(mappedErrors);&#xD;
         return trans;&#xD;
     } finally {&#xD;
     	dbContractEntitlementManager.destroy();&#xD;
         ESLog.debug(&quot;Exit&quot;);&#xD;
     }&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SRtrTEeWv0eZvzLc0yA" name="buildUnitListReply" specification="_xXs5mNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SR9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SSNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SSdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Enter&quot;);&#xD;
     // merge objects, create ID/IDREFs, caclulate overall start/end dates&#xD;
     ctx.mergeAndCalculateAll();&#xD;
&#xD;
     UnitListComplexType result = new UnitListComplexType();&#xD;
     for (Iterator&lt;?> it=ctx.getOOSes().iterator(); it.hasNext(); ) {&#xD;
         OOSComplexType oos = (OOSComplexType)it.next();&#xD;
         result.addProduct(oos.getProduct());&#xD;
&#xD;
         // all OOSes have exactly one serial number&#xD;
         if (result.getSerialNumber() == null) {&#xD;
             // if we have the SN request we can take the SN from it&#xD;
             if(request.getEsRequestComplexTypeChoice().getEntitlementBySnRequest() != null) {&#xD;
                 result.setSerialNumber(request.getEsRequestComplexTypeChoice().&#xD;
                         getEntitlementBySnRequest().getSerialNumber());&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     ESLog.debug(&quot;Building header&quot;);&#xD;
     EsHeader esHeader = new EsHeader();&#xD;
     esHeader.setInputRequest(request);&#xD;
     // transaction ID is set by service handler&#xD;
&#xD;
     // A default warning because this is a Unit list&#xD;
     Warnings warnings = new Warnings();&#xD;
     warnings.addEIAError(ErrorFactory.getEIAError(ErrorFactory.id202_PRODUCT_NR_NOT_PROVIDED));&#xD;
&#xD;
     esHeader.setWarnings(warnings);&#xD;
&#xD;
&#xD;
     EsReplyChoice esReplyChoice = new EsReplyChoice();&#xD;
     esReplyChoice.setUnitList(result);&#xD;
&#xD;
     EsReply esReply = new EsReply();&#xD;
     esReply.setEsHeader(esHeader);&#xD;
     esReply.setEsReplyChoice(esReplyChoice);&#xD;
&#xD;
&#xD;
     ESLog.debug(&quot;Exit&quot;);&#xD;
     return esReply;&#xD;
&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SStrTEeWv0eZvzLc0yA" name="buildCombinedEntitlementReply" specification="_xXs5nNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SS9rTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5STNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5STdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>EsReply reply = null;&#xD;
		CombinedUnitEntitlementComplexType result = new CombinedUnitEntitlementComplexType();&#xD;
&#xD;
		ESLog.debug(&quot;Enter&quot;);&#xD;
     ctx.mergeAndCalculateAll();&#xD;
&#xD;
&#xD;
     result.setActiveContractEntitlement(ctx.isActiveContractEntitlement());&#xD;
     result.setOverallContractStartDate(ctx.getOverallContractStartDate());&#xD;
     result.setOverallContractEndDate(ctx.getOverallContractEndDate());&#xD;
&#xD;
     // warranty&#xD;
     result.setActiveWarrantyEntitlement(false);&#xD;
&#xD;
     result.setContact((ContactComplexType[])ctx.getContacts().toArray(new ContactComplexType[0]));&#xD;
     result.setContract((ContractComplexType[])ctx.getContracts().toArray(new ContractComplexType[0]));&#xD;
     result.setLocation((LocationComplexType[])ctx.getLocations().toArray(new LocationComplexType[0]));&#xD;
&#xD;
     int oosCount = ctx.getOOSes().size();&#xD;
     if (oosCount==0) {&#xD;
         // NO DATA FOUND&#xD;
         ESLog.debug(&quot;No data found&quot;);&#xD;
         throw ErrorFactory.getSifException(ErrorFactory.id300_NO_DATA_FOUND);&#xD;
     }&#xD;
&#xD;
     ESLog.debug(&quot;Found &quot; + oosCount + &quot; OOS&quot;);&#xD;
&#xD;
	    OOSComplexType[] OOSes = (OOSComplexType[]) ctx.getOOSes().toArray(new OOSComplexType[0]);&#xD;
     OOSComplexType firstOOS = ctx.getFirstOOS(OOSes);&#xD;
     if (firstOOS == null) {&#xD;
         // NO DATA FOUND&#xD;
         ESLog.debug(&quot;No data found&quot;);&#xD;
         throw ErrorFactory.getSifException(ErrorFactory.id300_NO_DATA_FOUND);&#xD;
     }&#xD;
     result.setOOS(firstOOS);&#xD;
&#xD;
     if (oosCount > 1) {&#xD;
         ContractComplexType[] contracts = result.getContract();&#xD;
         for (int i = 0; i &lt; contracts.length; i++) {&#xD;
             OfferComplexType[] offers = contracts[i].getOffer();&#xD;
             for (int j = 0; j &lt; offers.length; j++) {&#xD;
                 AppliesTo[] appliesTos = offers[j].getAppliesTo();&#xD;
                 for (int k = 0; k &lt; appliesTos.length; k++) {&#xD;
                     AppliesTo to = appliesTos[k];&#xD;
                     if (to.getOOSRef() != null) {&#xD;
                         to.setOOSRef(result.getOOS());&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     ESLog.debug(&quot;Building header&quot;);&#xD;
     EsHeader esHeader = new EsHeader();&#xD;
     esHeader.setInputRequest(request);&#xD;
     // transaction ID is set by service handler&#xD;
&#xD;
     EsReplyChoice esReplyChoice = new EsReplyChoice();&#xD;
     esReplyChoice.setCombinedUnitEntitlement(result);&#xD;
&#xD;
     reply = new EsReply();&#xD;
     reply.setEsHeader(esHeader);&#xD;
     reply.setEsReplyChoice(esReplyChoice);&#xD;
&#xD;
		return reply;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5STtrTEeWv0eZvzLc0yA" name="getRegionConfiguration" specification="_xQCyfNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5ST9rTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SUNrTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" specification="_xQCyfdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SUdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SUtrTEeWv0eZvzLc0yA" name="isLocal" specification="_xQCyf9rTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SU9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return true;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xQCyeNrTEeWv0eZvzLc0yA" name="ODSGetContractBySNIntegration" method="_xZ5SQNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xQCyedrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xQCyetrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xQCye9rTEeWv0eZvzLc0yA" type="_xQCyd9rTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyfNrTEeWv0eZvzLc0yA" name="getRegionConfiguration" method="_xZ5STtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzgNrTEeWv0eZvzLc0yA">
                      <body>The 2 following methods do not fully apply for ODS calls&#xD;
	 * They will return Null and false</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXs5oNrTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyfdrTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" method="_xZ5SUNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCyftrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQCyf9rTEeWv0eZvzLc0yA" name="isLocal" method="_xZ5SUtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQCygNrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXs5lNrTEeWv0eZvzLc0yA" name="doContractIntegration" method="_xZ5SQtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzftrTEeWv0eZvzLc0yA">
                      <body>(non-Javadoc)&#xD;
	 * @see com.hp.es.service.contractEntitlement.integration.ContractIntegration#doContractIntegration(com.hp.es.xml.service.EsRequestComplexType, com.hp.ruc.metrics.MetricsHandler)</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXs5ldrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5ltrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5l9rTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXs5mNrTEeWv0eZvzLc0yA" name="buildUnitListReply" visibility="private" method="_xZ5SRtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzf9rTEeWv0eZvzLc0yA">
                      <body>Build a Unit List</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXs5mdrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5mtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5m9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXs5nNrTEeWv0eZvzLc0yA" name="buildCombinedEntitlementReply" visibility="private" method="_xZ5SStrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXs5ndrTEeWv0eZvzLc0yA" name="ctx" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5ntrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5n9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xQI5ANrTEeWv0eZvzLc0yA" name="ODSGetContractIntegration">
                  <generalization xmi:id="_xV47vdrTEeWv0eZvzLc0yA" general="_xQI5DdrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SVNrTEeWv0eZvzLc0yA" name="ODSGetContractIntegration" specification="_xQI5AdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SVdrTEeWv0eZvzLc0yA" type="_xQI5ANrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SVtrTEeWv0eZvzLc0yA" name="doContractIntegration" specification="_xXs5odrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SV9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SWNrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xZ5SWdrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ContractRequest cr = request.getEsRequestComplexTypeChoice().getContractRequest();&#xD;
     DbContractEntitlementManager dbContractEntitlementManager =DbContractEntitlementManager.getNewInstance();&#xD;
     EsReplyContext ctx = null;&#xD;
     try {&#xD;
         OutputDetails details = new OutputDetails(cr);&#xD;
         ctx = new EsReplyContext(details);&#xD;
&#xD;
         // call the database&#xD;
         int errorId = dbContractEntitlementManager.getContractEntitlement(&#xD;
                     ctx,&#xD;
                     cr.getContractIdentifier(),&#xD;
                     cr.getContractIdentifierType(),&#xD;
                     cr.getDataEntrySite(),&#xD;
                     cr.getProductID(),&#xD;
                     null,   // serial# only for GetContractEntBySn&#xD;
                     cr.getSourceCustomerID(),&#xD;
                     cr.getRedAccessID(),&#xD;
                     cr.getRedGroupSerialNo(),&#xD;
                     //null,   // redGroupSerialNo&#xD;
                     cr.getMNContractSourceDoc(),&#xD;
                     cr.getIsoCountryCd(),&#xD;
                     cr.getCustomerDefinedID(),&#xD;
                     cr.getEntitlementCheckDate(),&#xD;
                     cr.getActiveContractsOnly(),&#xD;
                     cr.getActiveServicesOnly(),&#xD;
                     cr.getStandAloneOffersOnly(),&#xD;
                     details,&#xD;
                     false,&#xD;
                     metricsHandler,&#xD;
                     false);&#xD;
&#xD;
         // check for errors returned from the database&#xD;
         if (errorId!=0) {&#xD;
             // map errorId to SifException&#xD;
             // this probably needs to be enhanced to provide more details&#xD;
             throw ErrorFactory.getSifException(errorId);&#xD;
         }&#xD;
&#xD;
         // merge objects, create ID/IDREFs, calculate overall start/end dates&#xD;
         ctx.mergeAndCalculateAll();&#xD;
&#xD;
         ContractEntitlementComplexType result = new ContractEntitlementComplexType();&#xD;
         result.setActiveContractEntitlement(ctx.isActiveContractEntitlement());&#xD;
         result.setOverallContractStartDate(ctx.getOverallContractStartDate());&#xD;
         result.setOverallContractEndDate(ctx.getOverallContractEndDate());&#xD;
&#xD;
         result.setContact( (ContactComplexType[])ctx.getContacts().toArray(new ContactComplexType[0]) );&#xD;
         result.setContract( (ContractComplexType[])ctx.getContracts().toArray(new ContractComplexType[0]) );&#xD;
         result.setLocation( (LocationComplexType[])ctx.getLocations().toArray(new LocationComplexType[0]) );&#xD;
         result.setOOS( (OOSComplexType[])ctx.getOOSes().toArray(new OOSComplexType[0]) );&#xD;
&#xD;
         EsHeader esHeader = new EsHeader();&#xD;
         esHeader.setInputRequest(request);&#xD;
         // transaction ID is set in service handler class&#xD;
&#xD;
         EsReplyChoice esReplyChoice = new EsReplyChoice();&#xD;
         esReplyChoice.setContractEntitlement(result);&#xD;
&#xD;
         EsReply esReply = new EsReply();&#xD;
         esReply.setEsHeader(esHeader);&#xD;
         esReply.setEsReplyChoice(esReplyChoice);&#xD;
&#xD;
         //adding working&#xD;
         &#xD;
         ContractTransaction trans = new ContractTransaction(null, false,null, &quot;&quot;, EsConstants.ODS_SYSTEM_NAME,true);&#xD;
         trans.setODSSucessStatus();&#xD;
         if(request.getEsRequestComplexTypeChoice().getContractRequest().getIncludeWorkings()) {&#xD;
         	esReply.getEsReplyChoice().getContractEntitlement().addWorking(mapWorking(trans));&#xD;
         }&#xD;
         &#xD;
         // For Customer Indicator we need the reference of ObligationHeader to Location&#xD;
         trans.setOHeadLocMap(dbContractEntitlementManager.getOHeadLocMap());&#xD;
         trans.setMappedReply(esReply);&#xD;
         &#xD;
         return trans;&#xD;
     } catch (DataAccessException e) {&#xD;
         // map to SifException&#xD;
//            ESLog.error(&quot;Unexpected Data access exception&quot;, e.getCause());&#xD;
//            throw ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&#xD;
//                &quot;Unknow database exception while processing ContractRequest.&quot;);&#xD;
         ESLog.debug(&quot;Caught a DataAccessException while processing ContractRequest.&quot;);&#xD;
         ContractTransaction trans = new ContractTransaction(null, false,null, &quot;&quot;, EsConstants.ODS_SYSTEM_NAME,true);&#xD;
         List&lt;SifException> mappedErrors=new ArrayList&lt;SifException>();&#xD;
         SifException sifException = ErrorFactory.getSifException(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unknow database exception while processing ContractRequest&quot;);&#xD;
         mappedErrors.add(sifException);&#xD;
         trans.setMappedErrors(mappedErrors);&#xD;
         return trans;&#xD;
     } catch (DatabaseDownException e) {&#xD;
         ESLog.info(&quot;Caught a DatabaseDownException while processing ContractRequest.&quot;,e);&#xD;
         ContractTransaction trans = new ContractTransaction(null, false,null, &quot;&quot;, EsConstants.ODS_SYSTEM_NAME,true);&#xD;
         List&lt;SifException> mappedErrors=new ArrayList&lt;SifException>();&#xD;
         SifException sifException = ErrorFactory.getSifException(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE,&quot;ES database is down&quot;);&#xD;
         mappedErrors.add(sifException);&#xD;
         trans.setMappedErrors(mappedErrors);&#xD;
         return trans;&#xD;
     }finally {&#xD;
     	dbContractEntitlementManager.destroy();&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SWtrTEeWv0eZvzLc0yA" name="getRegionConfiguration" specification="_xQI5BdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SW9rTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>//ALWAYS RETURN NULL&#xD;
		return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SXNrTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" specification="_xQI5BtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SXdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>//		ALWAYS RETURN FALSE&#xD;
		return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SXtrTEeWv0eZvzLc0yA" name="isLocal" specification="_xQI5CNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SX9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return true;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SYNrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" specification="_xQI5CtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SYdrTEeWv0eZvzLc0yA" name="errorId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SYtrTEeWv0eZvzLc0yA" name="errorText">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xZ5SY9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>ESLog.debug(&quot;Enter generateEsReplyWithWarning()&quot;);&#xD;
     EIAError eiaError = ErrorFactory.getEIAError(errorId, errorText);&#xD;
     &#xD;
     Warnings warnings = new Warnings();&#xD;
     warnings.addEIAError(eiaError);&#xD;
     &#xD;
     EsReply esReply = new EsReply();&#xD;
     EsHeader esHeader=new EsHeader();&#xD;
     esReply.setEsHeader(esHeader);&#xD;
     esReply.getEsHeader().setWarnings(warnings);&#xD;
     &#xD;
     ESLog.debug(&quot;Exit createEsReplyWithWarning()&quot;);&#xD;
     return esReply;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xQI5AdrTEeWv0eZvzLc0yA" name="ODSGetContractIntegration" method="_xZ5SVNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xQI5AtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xQI5A9rTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_xQI5BNrTEeWv0eZvzLc0yA" type="_xQI5ANrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5BdrTEeWv0eZvzLc0yA" name="getRegionConfiguration" method="_xZ5SWtrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzgtrTEeWv0eZvzLc0yA">
                      <body>There is no region Configuration for such an integration &#xD;
     *  (non-Javadoc)&#xD;
     * @see com.hp.es.service.IntegrationInterface#getRegionConfiguration()</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXs5pdrTEeWv0eZvzLc0yA" type="_xVy1JNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5BtrTEeWv0eZvzLc0yA" name="isRegionInFailoverMode" method="_xZ5SXNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQI5B9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5CNrTEeWv0eZvzLc0yA" name="isLocal" method="_xZ5SXtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQI5CdrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5CtrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" visibility="private" method="_xZ5SYNrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQI5C9rTEeWv0eZvzLc0yA" name="errorId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xQI5DNrTEeWv0eZvzLc0yA" name="errorText">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_xXs5ptrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXs5odrTEeWv0eZvzLc0yA" name="doContractIntegration" method="_xZ5SVtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzgdrTEeWv0eZvzLc0yA">
                      <body>This method has to be imeplemented by the sub classes. It processes the&#xD;
     * the requests and return an EsReply, which is sent back to the client.&#xD;
     * @param request the request that was sent from the client&#xD;
     * @param metricsHandler&#xD;
     * @throws SifException      Thrown when the request couldn't be processed&#xD;
     *                           successfully.&#xD;
     * @return EsReply the reply that can be sent back to the client&#xD;
     * @roseuid 3E6F2B640149</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xXs5otrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5o9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5pNrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xQI5DdrTEeWv0eZvzLc0yA" name="ODSIntegration" isAbstract="true">
                  <ownedComment xmi:id="_xaXzg9rTEeWv0eZvzLc0yA">
                    <body>@author ANVOI&#xD;
 *</body>
                  </ownedComment>
                  <generalization xmi:id="_xV47vtrTEeWv0eZvzLc0yA" general="_xQCycNrTEeWv0eZvzLc0yA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SZNrTEeWv0eZvzLc0yA" name="ODSIntegration" specification="_xQI5DtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SZdrTEeWv0eZvzLc0yA" type="_xQI5DdrTEeWv0eZvzLc0yA" direction="return"/>
                    <language>java</language>
                    <body>super();&#xD;
		init();		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SZtrTEeWv0eZvzLc0yA" name="getName" specification="_xQI5EtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SZ9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return this.getClass().toString();&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SaNrTEeWv0eZvzLc0yA" name="init" specification="_xQI5FNrTEeWv0eZvzLc0yA">
                    <language>java</language>
                    <body>// just to make sure that the database is initialized when the&#xD;
     // first request comes in&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZ5SadrTEeWv0eZvzLc0yA" name="getRegionDisplayName" specification="_xQI5FdrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xZ5SatrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return EsConstants.ODS_SYSTEM_NAME;&#xD;
		&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_xQI5DtrTEeWv0eZvzLc0yA" name="ODSIntegration" visibility="protected" method="_xZ5SZNrTEeWv0eZvzLc0yA">
                    <eAnnotations xmi:id="_xQI5D9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_xQI5ENrTEeWv0eZvzLc0yA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_xaXzhNrTEeWv0eZvzLc0yA">
                      <body>Constructor</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_xQI5EdrTEeWv0eZvzLc0yA" type="_xQI5DdrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5EtrTEeWv0eZvzLc0yA" name="getName" method="_xZ5SZtrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQI5E9rTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5FNrTEeWv0eZvzLc0yA" name="init" visibility="protected" method="_xZ5SaNrTEeWv0eZvzLc0yA">
                    <ownedComment xmi:id="_xaXzhdrTEeWv0eZvzLc0yA">
                      <body>All time-consuming initializations should be done&#xD;
     * here. &lt;b>Note:&lt;/b> The same object will be used in parallel&#xD;
     * by multiple threads. The access to other resources needs to be&#xD;
     * synchronized if necessary.&#xD;
     *</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xQI5FdrTEeWv0eZvzLc0yA" name="getRegionDisplayName" method="_xZ5SadrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xQI5FtrTEeWv0eZvzLc0yA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_xXs5p9rTEeWv0eZvzLc0yA" name="doContractIntegration" isAbstract="true" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                    <ownedParameter xmi:id="_xXs5qNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5qdrTEeWv0eZvzLc0yA" name="handler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                    <ownedParameter xmi:id="_xXs5qtrTEeWv0eZvzLc0yA" type="_xRgLBNrTEeWv0eZvzLc0yA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_xXmy8NrTEeWv0eZvzLc0yA" name="Object"/>
                <packagedElement xmi:type="uml:Association" xmi:id="_xaqHMNrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHMdrTEeWv0eZvzLc0yA _xZCWgtrTEeWv0eZvzLc0yA">
                  <ownedEnd xmi:id="_xaqHMdrTEeWv0eZvzLc0yA" name="" type="_xP8r09rTEeWv0eZvzLc0yA" association="_xaqHMNrTEeWv0eZvzLc0yA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_xNRyQNrTEeWv0eZvzLc0yA" name="adapters">
                <packagedElement xmi:type="uml:Package" xmi:id="_xNRyQdrTEeWv0eZvzLc0yA" name="metrogenerated">
                  <packagedElement xmi:type="uml:Package" xmi:id="_xNRyQtrTEeWv0eZvzLc0yA" name="CONTRACT_ENT">
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI8NrTEeWv0eZvzLc0yA" name="ZESCQSAPPLIESTO"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI8trTEeWv0eZvzLc0yA" name="ZESCQSOBJECTREF"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI9NrTEeWv0eZvzLc0yA" name="ZESCQSPROFITCENTER"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI-drTEeWv0eZvzLc0yA" name="ZESCONTRACTENTBYSNES10"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI-9rTEeWv0eZvzLc0yA" name="ZESCQSENBYSNREQUESTV1"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFI_trTEeWv0eZvzLc0yA" name="ZESCONTRACTENTES10"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFJANrTEeWv0eZvzLc0yA" name="ZESCQSCONTRACTENREQUESTV1"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFJA9rTEeWv0eZvzLc0yA" name="ZESCQSENTITLEMENTREPLYV1"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFJBtrTEeWv0eZvzLc0yA" name="ZESCQSCONTACT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFJCtrTEeWv0eZvzLc0yA" name="ZESCQSCONTRACTV1"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWFJDNrTEeWv0eZvzLc0yA" name="ZESCQSOBLIGATIONCONTACT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPkdrTEeWv0eZvzLc0yA" name="ZESCQSOBLIGATIONHEADERV1"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPk9rTEeWv0eZvzLc0yA" name="ZESCQSOBLIGATIONLOCATION"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPldrTEeWv0eZvzLc0yA" name="ZESCQSOOS"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPl9rTEeWv0eZvzLc0yA" name="ZESCQSSERVICE"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPmdrTEeWv0eZvzLc0yA" name="ZESPRODUCTTYPE"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPnNrTEeWv0eZvzLc0yA" name="ZESCQSCUSTOMERIDENTITY"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPntrTEeWv0eZvzLc0yA" name="ZESCQSCUSTOMERSEGMENT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPoNrTEeWv0eZvzLc0yA" name="ZESCQSCUSTOMERSEGMENTS"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPptrTEeWv0eZvzLc0yA" name="ZESCQSDELIVERABLE"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPqNrTEeWv0eZvzLc0yA" name="ZESCQSMODIFIER"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWLPq9rTEeWv0eZvzLc0yA" name="ZESCQSMESSAGE"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWRWMNrTEeWv0eZvzLc0yA" name="ZESCQSLOCATION"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWRWNtrTEeWv0eZvzLc0yA" name="ZESCQSMV"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWRWONrTEeWv0eZvzLc0yA" name="ZESCQSMVT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWRWPdrTEeWv0eZvzLc0yA" name="ZESCQSPRODUCT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWRWP9rTEeWv0eZvzLc0yA" name="ZESCQSUNIT"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWpws9rTEeWv0eZvzLc0yA" name="ZESCONTRACTENTBYSNES10Response"/>
                    <packagedElement xmi:type="uml:Class" xmi:id="_xWpwtdrTEeWv0eZvzLc0yA" name="ZESCONTRACTENTES10Response"/>
                  </packagedElement>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xO5i89rTEeWv0eZvzLc0yA" name="EsCheckDateRangeTest">
                <ownedComment xmi:id="_xaXzEdrTEeWv0eZvzLc0yA">
                  <body>EsCheckDateRangeTest</body>
                </ownedComment>
                <generalization xmi:id="_xXCLMdrTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-E9rTEeWv0eZvzLc0yA" name="EsCheckDateRangeTest" specification="_xO5i9NrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-FNrTEeWv0eZvzLc0yA" name="inName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-FdrTEeWv0eZvzLc0yA" type="_xO5i89rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>super(inName);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-FtrTEeWv0eZvzLc0yA" name="suite" specification="_xO5i-drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-F9rTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>// discover test*() methods via reflection:&#xD;
     return new TestSuite(EsCheckDateRangeTest.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-GNrTEeWv0eZvzLc0yA" name="testRange" specification="_xO5i-trTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>assertTrue (&quot;check with 'current day' failed&quot;,      testRange(0));&#xD;
     assertTrue (&quot;check with 'current day + 1' failed&quot;,  testRange(1));&#xD;
     assertFalse(&quot;check with 'current day + 2' failed&quot;,  testRange(2));&#xD;
     assertTrue (&quot;check with 'current day - 90' failed&quot;, testRange(-90));&#xD;
     assertFalse(&quot;check with 'current day - 91' failed&quot;, testRange(-91));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-GdrTEeWv0eZvzLc0yA" name="testRange" specification="_xO5i-9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-GtrTEeWv0eZvzLc0yA" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-G9rTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>try {&#xD;
         Calendar c = Calendar.getInstance();&#xD;
         c.add(Calendar.DATE, offset);&#xD;
         &#xD;
         EsCheckDateRange.verifyDate(&#xD;
                             new org.exolab.castor.types.Date(c.getTime())); &#xD;
     }&#xD;
     catch (SifException e) {&#xD;
         return false;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-HNrTEeWv0eZvzLc0yA" name="main" specification="_xO5i_trTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-HdrTEeWv0eZvzLc0yA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZm-HtrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>EsCheckDateRangeTest t = new EsCheckDateRangeTest(&quot;test&quot;);&#xD;
     t.testRange();&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xO5i9NrTEeWv0eZvzLc0yA" name="EsCheckDateRangeTest" method="_xZm-E9rTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO5i9trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO5i99rTEeWv0eZvzLc0yA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_xO5i9drTEeWv0eZvzLc0yA" name="inName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO5i-NrTEeWv0eZvzLc0yA" type="_xO5i89rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xO5i-drTEeWv0eZvzLc0yA" name="suite" isStatic="true" method="_xZm-FtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXCLMNrTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xO5i-trTEeWv0eZvzLc0yA" name="testRange" method="_xZm-GNrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xO5i-9rTEeWv0eZvzLc0yA" name="testRange" visibility="private" method="_xZm-GdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xO5i_NrTEeWv0eZvzLc0yA" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO5i_drTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO5i_trTEeWv0eZvzLc0yA" name="main" isStatic="true" method="_xZm-HNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xO5i_9rTEeWv0eZvzLc0yA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xO5jANrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xO5jAdrTEeWv0eZvzLc0yA" name="EsReplyContext">
                <ownedComment xmi:id="_xaXzEtrTEeWv0eZvzLc0yA">
                  <body>This class stores all objects (classes created by Castor based on the&#xD;
XML schema of the EsReply) for one EsReply. The database managers can&#xD;
use the addXXX(Key, Object) methods to store that data. Note that the&#xD;
class is not thread-save but the addXXX(Key, Object) methods could be&#xD;
called in parallel because there is no interaction between the different&#xD;
objects. The class that calls the addXXX(Key, Object) method has to make&#xD;
sure that no duplicates are added. In the case of Contracts, only one&#xD;
contract per service agreement ID should be added.&lt;p>&#xD;
When all data are available, the related objects can be merged together,&#xD;
e.g. all Modifiers are merged into the Offers. This will be done by the&#xD;
class that creates the EsReply. The corresponding mergeXXX() methods&#xD;
have to be called for this.&lt;p>&#xD;
If necessary, the ID/IDREF relations have to be created by calling the&#xD;
createXXXRefs() methods. This must be done only if the corresponding&#xD;
objects are included in the reply, e.g. call the createAppliesToOOSRefs()&#xD;
method only if the OOS is part of the EsReply.&lt;p>&#xD;
When all the relations are created, the top-level objects of the reply&#xD;
(Contact, Contract, Location, OOS) can ge accessed by the getXXX() method&#xD;
and put into the EsReply object.&lt;p>&#xD;
Since only the top-level objects are accessed when the reply is generated,&#xD;
only related objects will be part of the reply. E.g. if a modifier was read&#xD;
from the database (and stored in the EsReplyContext) which had no relation&#xD;
to an offer, it won't be part of the reply.&lt;p>&#xD;
For the top-level objects of type Contact and Location you can choose if&#xD;
only objects that are referenced (by IDREF in OOS or Contract) or if all&#xD;
available Contact and Location will be part of the reply.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_xYwCctrTEeWv0eZvzLc0yA" name="EMPTY_STRING" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xYwCc9rTEeWv0eZvzLc0yA" value="&quot;&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xYwCdNrTEeWv0eZvzLc0yA" name="BLUE_PORTFOLIO_FLAG" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xYwCddrTEeWv0eZvzLc0yA" value="&quot;S&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JENrTEeWv0eZvzLc0yA" name="RED_PORTFOLIO_FLAG" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JEdrTEeWv0eZvzLc0yA" value="&quot;C&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JEtrTEeWv0eZvzLc0yA" name="PURPLE_PORTFOLIO_FLAG" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JE9rTEeWv0eZvzLc0yA" value="&quot;G&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JFNrTEeWv0eZvzLc0yA" name="BLUE_KEY_PREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JFdrTEeWv0eZvzLc0yA" value="&quot;S-&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JFtrTEeWv0eZvzLc0yA" name="RED_KEY_PREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JF9rTEeWv0eZvzLc0yA" value="&quot;C-&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JGNrTEeWv0eZvzLc0yA" name="PURPLE_KEY_PREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JGdrTEeWv0eZvzLc0yA" value="&quot;G-&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JGtrTEeWv0eZvzLc0yA" name="CARE_PACK_KEY_PREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JG9rTEeWv0eZvzLc0yA" value="&quot;CP_&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JHNrTEeWv0eZvzLc0yA" name="INTERNAL_PREFIX" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY2JHdrTEeWv0eZvzLc0yA" value="&quot;INTERNAL_ID_&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY2JHtrTEeWv0eZvzLc0yA" name="locationMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xakAUNrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JIdrTEeWv0eZvzLc0yA" name="allContractMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xakAU9rTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JJNrTEeWv0eZvzLc0yA" name="contractMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xakAVtrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JJ9rTEeWv0eZvzLc0yA" name="uniqueContractMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqG8drTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JKtrTEeWv0eZvzLc0yA" name="contactMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqG9NrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JLdrTEeWv0eZvzLc0yA" name="oosMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqG99rTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JMNrTEeWv0eZvzLc0yA" name="obligationHeaderMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqG-trTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JM9rTEeWv0eZvzLc0yA" name="serviceItemMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqG_drTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JNtrTEeWv0eZvzLc0yA" name="offerMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqHANrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JOdrTEeWv0eZvzLc0yA" name="modifierMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqHA9rTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JPNrTEeWv0eZvzLc0yA" name="deliverableMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqHBtrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JP9rTEeWv0eZvzLc0yA" name="delivModifierMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqHCdrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JQtrTEeWv0eZvzLc0yA" name="appliesToMap" visibility="private" type="_xVCAI9rTEeWv0eZvzLc0yA" association="_xaqHDNrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY2JRdrTEeWv0eZvzLc0yA" name="aggProductIdMap" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xaqHD9rTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8PstrTEeWv0eZvzLc0yA" name="serviceStartDateElgibilityMap" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xaqHEtrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8PtdrTEeWv0eZvzLc0yA" name="oosWtyStartDateMap" visibility="private" type="_xVCAG9rTEeWv0eZvzLc0yA" association="_xaqHFdrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8PuNrTEeWv0eZvzLc0yA" name="overallContractStartDate" type="_xU75cNrTEeWv0eZvzLc0yA" isReadOnly="true" association="_xaqHGNrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8PudrTEeWv0eZvzLc0yA" name="overallContractEndDate" type="_xU75cNrTEeWv0eZvzLc0yA" isReadOnly="true" association="_xaqHG9rTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8PutrTEeWv0eZvzLc0yA" name="isActiveContractEntitlement" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8PvNrTEeWv0eZvzLc0yA" name="currentChunkSize" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8PvdrTEeWv0eZvzLc0yA" name="totalResultSize" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8PvtrTEeWv0eZvzLc0yA" name="uniqueId" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_xY8Pv9rTEeWv0eZvzLc0yA" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8PwdrTEeWv0eZvzLc0yA" name="outputDetails" visibility="private" type="_xPwegtrTEeWv0eZvzLc0yA" association="_xaqHHtrTEeWv0eZvzLc0yA"/>
                <ownedAttribute xmi:id="_xY8Pw9rTEeWv0eZvzLc0yA" name="XMLIdGenerator" visibility="private" type="_xVCAKdrTEeWv0eZvzLc0yA" association="_xaqHIdrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-H9rTEeWv0eZvzLc0yA" name="EsReplyContext" specification="_xVIGtdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-INrTEeWv0eZvzLc0yA" name="outputDetails" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-IdrTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>this.outputDetails = outputDetails;&#xD;
&#xD;
     locationMap = new TreeMap&lt;Key, Object>();&#xD;
     allContractMap = new TreeMap&lt;ObligationHeaderKey, ContractComplexType>();&#xD;
     contractMap = new TreeMap&lt;ObligationHeaderKey, String>();&#xD;
     uniqueContractMap = new TreeMap&lt;String, ContractComplexType>();&#xD;
     contactMap = new TreeMap&lt;Key, Object>();&#xD;
     oosMap = new TreeMap&lt;Key, Object>();&#xD;
     obligationHeaderMap = new TreeMap&lt;Key, Object>();&#xD;
     serviceItemMap = new TreeMap&lt;Key, Object>();&#xD;
     offerMap = new TreeMap&lt;Key, Object>();&#xD;
     modifierMap = new TreeMap&lt;Key, Object>();&#xD;
     deliverableMap = new TreeMap&lt;Key, Object>();&#xD;
     delivModifierMap = new TreeMap&lt;Key, Object>();&#xD;
     appliesToMap = new TreeMap&lt;Key, Object>();&#xD;
     aggProductIdMap = new HashMap&lt;String, String>();&#xD;
     serviceStartDateElgibilityMap = new HashMap&lt;Key, Object>();&#xD;
     oosWtyStartDateMap = new HashMap&lt;Key, Object>();&#xD;
&#xD;
     isActiveContractEntitlement = false;&#xD;
     overallContractStartDate = null;&#xD;
     overallContractEndDate = null;&#xD;
&#xD;
     XMLIdGenerator = XMLIdGenerator.getXMLIdGenerator('C');&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-ItrTEeWv0eZvzLc0yA" name="isActiveContractEntitlement" specification="_xO_pgNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-I9rTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return isActiveContractEntitlement;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-JNrTEeWv0eZvzLc0yA" name="mergeAndCalculateAll" specification="_xO_pgtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>if (outputDetails.isIncludeModifiers()) {&#xD;
         mergeDelivModifierToDeliverable();&#xD;
         mergeModifierToOffer();&#xD;
     }&#xD;
     // Note: deliverables are need to calculate the unique deliverables&#xD;
     //       they will be removed later&#xD;
     if (outputDetails.isIncludeDeliverables() || outputDetails.isIncludeUniqueDeliverables()) {&#xD;
         mergeDeliverableToOffer();&#xD;
     }&#xD;
&#xD;
     // Note: offers are need to calculate the unique offers&#xD;
     //       they will be removed later&#xD;
     if (outputDetails.isIncludeOffers() || outputDetails.isIncludeUniqueOffers() ) {&#xD;
         mergeAppliesToToOffer();&#xD;
         mergeOfferToContract();&#xD;
     }&#xD;
&#xD;
     mergeServiceItemToObligationHeader();&#xD;
     mergeObligationHeaderToContract();&#xD;
&#xD;
     if (outputDetails.isIncludeContacts()) {&#xD;
         createContactRefs(true, outputDetails.isIncludeOOSes(), true);&#xD;
     }&#xD;
&#xD;
     if (outputDetails.isIncludeAddresses()) {&#xD;
         createLocationRefs(true, outputDetails.isIncludeOOSes(), true);&#xD;
     }&#xD;
&#xD;
     if (outputDetails.isIncludeOffers() &amp;&amp; outputDetails.isIncludeOOSes()) {&#xD;
         createAppliesToOOSRefs();&#xD;
     }&#xD;
&#xD;
     if (outputDetails.isIncludeOffers()) {&#xD;
         createServiceItemOfferRefs();&#xD;
     }&#xD;
&#xD;
     // unique offers and deliverables&#xD;
     if (outputDetails.isIncludeUniqueOffers()) {&#xD;
         createUniqueOffersAndDeliverables(&#xD;
                     outputDetails.isIncludeUniqueDeliverables());&#xD;
&#xD;
         // if only the unique offers or deliverables are included&#xD;
         // remove source offer or deliverable references&#xD;
         if (!outputDetails.isIncludeOffers()){&#xD;
             Iterator&lt;Key> it = obligationHeaderMap.keySet().iterator();&#xD;
             while (it.hasNext()){&#xD;
                 ObligationHeaderKey key = (ObligationHeaderKey)it.next();&#xD;
                 ObligationHeader ohdr = (ObligationHeader)obligationHeaderMap.get(key);&#xD;
                 ohdr.removeAllServiceItem();&#xD;
&#xD;
                 ContractComplexType contr = getUniqueContract(key);&#xD;
                 if (contr != null) {&#xD;
                    contr.removeAllOffer();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         else {&#xD;
             if (!outputDetails.isIncludeDeliverables()){&#xD;
                 // offers are included but deliverable not&#xD;
                 Iterator&lt;Key> it = offerMap.keySet().iterator();&#xD;
                 while (it.hasNext()){&#xD;
                     ServiceKey key = (ServiceKey)it.next();&#xD;
                     OfferComplexType offer = (OfferComplexType)offerMap.get(key);&#xD;
                     offer.removeAllDeliverable();&#xD;
                     offer.removeAllModifier();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     calculateAggregatedValues();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-JdrTEeWv0eZvzLc0yA" name="getLocations" specification="_xO_pg9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-JtrTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZm-J9rTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return locationMap.values();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-KNrTEeWv0eZvzLc0yA" name="getContacts" specification="_xO_piNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-KdrTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZm-KtrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return contactMap.values();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-K9rTEeWv0eZvzLc0yA" name="getContact" specification="_xVIGutrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-LNrTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-LdrTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>return (ContactComplexType)contactMap.get(key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-LtrTEeWv0eZvzLc0yA" name="getUniqueContract" specification="_xVIGvNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-L9rTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-MNrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>Object o = contractMap.get(key);&#xD;
 if (o != null) {&#xD;
     return uniqueContractMap.get(o);&#xD;
 }&#xD;
 return null;&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-MdrTEeWv0eZvzLc0yA" name="getContract" specification="_xVIGvtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-MtrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-M9rTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>return allContractMap.get(key);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-NNrTEeWv0eZvzLc0yA" name="getContracts" specification="_xO_pjdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-NdrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZm-NtrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return uniqueContractMap.values();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-N9rTEeWv0eZvzLc0yA" name="getOOS" specification="_xVIGwNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-ONrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-OdrTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>return (OOSComplexType)oosMap.get(key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-OtrTEeWv0eZvzLc0yA" name="getOOSes" specification="_xO_pktrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-O9rTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZm-PNrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return oosMap.values();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-PdrTEeWv0eZvzLc0yA" name="getAppliesTo" specification="_xO_pl9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-PtrTEeWv0eZvzLc0yA" type="_xVCAI9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>return appliesToMap;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-P9rTEeWv0eZvzLc0yA" name="getSvcWtyStartDateEligibility" specification="_xVIGwtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-QNrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-QdrTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (String)serviceStartDateElgibilityMap.get(key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-QtrTEeWv0eZvzLc0yA" name="getOosWarrantyStartDate" specification="_xO_pmdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-Q9rTEeWv0eZvzLc0yA" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-RNrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>//NPE HERE&#xD;
     java.sql.Date result = (java.sql.Date)oosWtyStartDateMap.get(new OOSKey(key));&#xD;
     if (result == null) {&#xD;
         return null;&#xD;
     }&#xD;
     return (new org.exolab.castor.types.Date(new java.util.Date(result.getYear(), result.getMonth(), result.getDate())));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-RdrTEeWv0eZvzLc0yA" name="addLocation" specification="_xXCLOdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-RtrTEeWv0eZvzLc0yA" name="key" type="_xRHwoNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-R9rTEeWv0eZvzLc0yA" name="o" type="_xVCAM9rTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>o.setId(XMLIdGenerator.nextId());&#xD;
     storeObject(key, o, locationMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-SNrTEeWv0eZvzLc0yA" name="setAggProductId" specification="_xO_pm9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-SdrTEeWv0eZvzLc0yA" name="prodId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-StrTEeWv0eZvzLc0yA" name="aggProdId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>aggProductIdMap.put(prodId, aggProdId);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-S9rTEeWv0eZvzLc0yA" name="getAggProductIdMapping" specification="_xO_pntrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-TNrTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>return aggProductIdMap;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-TdrTEeWv0eZvzLc0yA" name="addContract" specification="_xXCLPdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-TtrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-T9rTEeWv0eZvzLc0yA" name="o" type="_xVCAL9rTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>if (key==null) {&#xD;
         throw new NullPointerException(&quot;The key must never be null&quot;);&#xD;
     }&#xD;
&#xD;
     if (o==null) {&#xD;
         throw new NullPointerException(&quot;The object must never be null&quot;);&#xD;
     }&#xD;
&#xD;
     // in order to be able to merge different types of contract&#xD;
     // (blue, red, purple), different keys have to be created depending&#xD;
     // on the portfolio&#xD;
     String key2 = null;&#xD;
     if (o.getPortfolioFlag()!=null) {&#xD;
         if (o.getHPCarePackSerialNumber() != null){&#xD;
            key2 = CARE_PACK_KEY_PREFIX + o.getHPCarePackSerialNumber()&#xD;
            + '-' + o.getProductShipToCountryCode()&#xD;
            + '-' + o.getPortfolioFlag();&#xD;
         }&#xD;
         else if (o.getPortfolioFlag().equals(PURPLE_PORTFOLIO_FLAG)) {&#xD;
             key2 = PURPLE_KEY_PREFIX + o.getSvcAgreementID();&#xD;
         }&#xD;
         else if (o.getPortfolioFlag().equals(BLUE_PORTFOLIO_FLAG)) {&#xD;
             key2 = BLUE_KEY_PREFIX + o.getOOSGroupID() + '-' + o.getDataEntrySite();&#xD;
         }&#xD;
         else if (o.getPortfolioFlag().equals(RED_PORTFOLIO_FLAG)) {&#xD;
             // SRS 6.0 - There is no aggregation for red contracts.&#xD;
             key2 = INTERNAL_PREFIX +  produceUniqueId();&#xD;
         }&#xD;
     }&#xD;
     // no merge&#xD;
     if (key2==null) {&#xD;
         key2 = INTERNAL_PREFIX + produceUniqueId();&#xD;
     }&#xD;
&#xD;
     // The unique ContractComplexTypes are stored in the uniqueContractMap.&#xD;
     // The contractMap contains a mapping between the ObligationHeaderKey&#xD;
     // and the key in uniqueContractMap&#xD;
     ContractComplexType tmp = uniqueContractMap.get(key2);&#xD;
     if (tmp==null) {&#xD;
         uniqueContractMap.put(key2, o);&#xD;
     }&#xD;
     else {&#xD;
         // The newest contract is stored in the uniqueContractMap.&#xD;
         // Note: The special handling flag is set to true if at least&#xD;
         // one of the contracts has the flag set to true!!!&#xD;
         String tmpPublishDate = tmp.getCdoPublishDate();&#xD;
         String ctrPublishDate = o.getCdoPublishDate();&#xD;
&#xD;
         if (ctrPublishDate==null || ctrPublishDate.compareTo(tmpPublishDate)>0 ) {&#xD;
             // if newer than replace&#xD;
             uniqueContractMap.put(key2, o);&#xD;
             o.setSpecialHandling(o.getSpecialHandling() || tmp.getSpecialHandling());&#xD;
         }&#xD;
         else {&#xD;
             tmp.setSpecialHandling(o.getSpecialHandling() || tmp.getSpecialHandling());&#xD;
         }&#xD;
     }&#xD;
&#xD;
     contractMap.put(key, key2);&#xD;
     allContractMap.put(key, o);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-UNrTEeWv0eZvzLc0yA" name="addContact" specification="_xXCLQNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-UdrTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-UtrTEeWv0eZvzLc0yA" name="o" type="_xVCALdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>o.setId(XMLIdGenerator.nextId());&#xD;
     storeObject(key, o, contactMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-U9rTEeWv0eZvzLc0yA" name="addOOS" specification="_xXCLQ9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-VNrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-VdrTEeWv0eZvzLc0yA" name="o" type="_xVCAN9rTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>o.setId(XMLIdGenerator.nextId());&#xD;
     storeObject(key, o, oosMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-VtrTEeWv0eZvzLc0yA" name="addObligationHeader" specification="_xXCLRtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-V9rTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-WNrTEeWv0eZvzLc0yA" name="o" type="_xVCAOdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, obligationHeaderMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-WdrTEeWv0eZvzLc0yA" name="addServiceItem" specification="_xXCLSdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-WtrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-W9rTEeWv0eZvzLc0yA" name="o" type="_xVCAPdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, serviceItemMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-XNrTEeWv0eZvzLc0yA" name="addOffer" specification="_xXCLTNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-XdrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-XtrTEeWv0eZvzLc0yA" name="o" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>o.setId(XMLIdGenerator.nextId());&#xD;
     storeObject(key, o, offerMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-X9rTEeWv0eZvzLc0yA" name="addModifier" specification="_xXCLT9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-YNrTEeWv0eZvzLc0yA" name="key" type="_xRN3GNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-YdrTEeWv0eZvzLc0yA" name="o" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, modifierMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-YtrTEeWv0eZvzLc0yA" name="addDeliverable" specification="_xXCLUtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-Y9rTEeWv0eZvzLc0yA" name="key" type="_xRBp-9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-ZNrTEeWv0eZvzLc0yA" name="o" type="_xVCAMdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, deliverableMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-ZdrTEeWv0eZvzLc0yA" name="addDelivModifier" specification="_xXCLVdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-ZtrTEeWv0eZvzLc0yA" name="key" type="_xRBp7drTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-Z9rTEeWv0eZvzLc0yA" name="o" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, delivModifierMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-aNrTEeWv0eZvzLc0yA" name="addAppliesTo" specification="_xXCLWNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-adrTEeWv0eZvzLc0yA" name="key" type="_xRBp19rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-atrTEeWv0eZvzLc0yA" name="o" type="_xVCAK9rTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>storeObject(key, o, appliesToMap);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-a9rTEeWv0eZvzLc0yA" name="addSvcWtyStartDateEligibility" specification="_xVIGxtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-bNrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-bdrTEeWv0eZvzLc0yA" name="s">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (s != null) {&#xD;
         storeObject(key, s, serviceStartDateElgibilityMap);&#xD;
     } else {&#xD;
         storeObject(key, &quot;F&quot;, serviceStartDateElgibilityMap);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-btrTEeWv0eZvzLc0yA" name="addOosWarrantyStartDate" specification="_xVIGy9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-b9rTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-cNrTEeWv0eZvzLc0yA" name="d" type="_xVIGydrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>if (d != null) {&#xD;
         storeObject(key, d, oosWtyStartDateMap);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-cdrTEeWv0eZvzLc0yA" name="storeObject" specification="_xXCLW9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-ctrTEeWv0eZvzLc0yA" name="key" type="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-c9rTEeWv0eZvzLc0yA" name="o" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZm-dNrTEeWv0eZvzLc0yA" name="target" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>if (key==null) {&#xD;
         throw new NullPointerException(&quot;The key must never be null&quot;);&#xD;
     }&#xD;
&#xD;
     if (o==null) {&#xD;
         throw new NullPointerException(&quot;The object must never be null&quot;);&#xD;
     }&#xD;
     target.put(key, o);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-ddrTEeWv0eZvzLc0yA" name="mergeDelivModifierToDeliverable" specification="_xO_poNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = delivModifierMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         DelivModifierKey key = (DelivModifierKey)it.next();&#xD;
         DeliverableKey parent = (DeliverableKey)key.getParent();&#xD;
         Deliverable o = (Deliverable)deliverableMap.get(parent);&#xD;
         if (o != null) {&#xD;
             o.addDelivModifier((ModifierComplexType)delivModifierMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-dtrTEeWv0eZvzLc0yA" name="mergeDeliverableToOffer" specification="_xO_podrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = deliverableMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         DeliverableKey key = (DeliverableKey)it.next();&#xD;
         ServiceKey parent = (ServiceKey)key.getParent();&#xD;
         OfferComplexType o = (OfferComplexType)offerMap.get(parent);&#xD;
         if (o!=null) {&#xD;
             o.addDeliverable((Deliverable)deliverableMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-d9rTEeWv0eZvzLc0yA" name="mergeModifierToOffer" specification="_xO_potrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = modifierMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         ModifierKey key = (ModifierKey)it.next();&#xD;
         ServiceKey parent = (ServiceKey)key.getParent();&#xD;
         OfferComplexType o = (OfferComplexType)offerMap.get(parent);&#xD;
         if (o!=null) {&#xD;
             o.addModifier((ModifierComplexType)modifierMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-eNrTEeWv0eZvzLc0yA" name="mergeAppliesToToOffer" specification="_xO_po9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = appliesToMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         AppliesToKey key = (AppliesToKey)it.next();&#xD;
         ServiceKey parent =(ServiceKey)key.getParent();&#xD;
         OfferComplexType o = (OfferComplexType)offerMap.get(parent);&#xD;
         if (o!=null) {&#xD;
             o.addAppliesTo((AppliesTo)appliesToMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-edrTEeWv0eZvzLc0yA" name="mergeOfferToContract" specification="_xO_ppNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = offerMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         ServiceKey key = (ServiceKey)it.next();&#xD;
         // note: key is ObligationHeaderKey not ContractKey&#xD;
         ObligationHeaderKey parent = (ObligationHeaderKey)key.getParent();&#xD;
         ContractComplexType o = getUniqueContract(parent);&#xD;
         if (o!=null) {&#xD;
             o.addOffer((OfferComplexType)offerMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-etrTEeWv0eZvzLc0yA" name="mergeObligationHeaderToContract" specification="_xO_ppdrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = obligationHeaderMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         ObligationHeaderKey key = (ObligationHeaderKey)it.next();&#xD;
         ObligationHeaderKey parent = key;&#xD;
         ContractComplexType o = getUniqueContract(parent);&#xD;
         if (o!=null) {&#xD;
             o.addObligationHeader((ObligationHeader)obligationHeaderMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-e9rTEeWv0eZvzLc0yA" name="mergeServiceItemToObligationHeader" specification="_xO_pptrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = serviceItemMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         ServiceKey key = (ServiceKey)it.next();&#xD;
         ObligationHeaderKey parent = (ObligationHeaderKey)key.getParent();&#xD;
         ObligationHeader o = (ObligationHeader)obligationHeaderMap.get(parent);&#xD;
         if (o!=null) {&#xD;
             o.addServiceItem((ServiceItem)serviceItemMap.get(key));&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZm-fNrTEeWv0eZvzLc0yA" name="createLocationRefs" specification="_xO_pp9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZm-fdrTEeWv0eZvzLc0yA" name="removeUnusedLocations">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-ftrTEeWv0eZvzLc0yA" name="createOOSRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZm-f9rTEeWv0eZvzLc0yA" name="createContractRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>TreeMap&lt;Key, Object> map = new TreeMap&lt;Key, Object>();&#xD;
     if (createContractRefs) {&#xD;
         // referenced from contract&#xD;
         for (Iterator&lt;ContractComplexType> it=uniqueContractMap.values().iterator(); it.hasNext();) {&#xD;
             ContractComplexType c = it.next();&#xD;
             c.setSoldToCustomerRef  ( addLocation(map, c.getSoldToCustomerID()) );&#xD;
             c.setSWShipToCustomerRef( addLocation(map, c.getSWShipToCustomerID()) );&#xD;
             c.setProductShipToCustomerRef( addLocation(map, c.getProductShipToCustomerID()) );&#xD;
             c.setPSPCustomerRef(addLocation(map, c.getPSPCustomerID()));&#xD;
             c.setOrderingPartyCustomerRef( addLocation(map, c.getOrderingPartyCustomerID()));&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (createOOSRefs) {&#xD;
         // referenced from OOS&#xD;
         for (Iterator&lt;Object> it=oosMap.values().iterator(); it.hasNext();) {&#xD;
             OOSComplexType c = (OOSComplexType)it.next();&#xD;
             c.setSWShipToCustomerRef( addLocation(map, c.getSWShipToCustomerID()) );&#xD;
             c.setProductShipToCustomerRef( addLocation(map, c.getProductShipToCustomerID()) );&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // just overwrite the locationMap&#xD;
     if (removeUnusedLocations) {&#xD;
         locationMap = map;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEsNrTEeWv0eZvzLc0yA" name="addLocation" specification="_xXCLYNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEsdrTEeWv0eZvzLc0yA" name="map" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEstrTEeWv0eZvzLc0yA" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtEs9rTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>if (id==null) {&#xD;
         return null;&#xD;
     }&#xD;
     LocationKey key = new LocationKey(id);&#xD;
     LocationComplexType location = (LocationComplexType)locationMap.get(key);&#xD;
     if (location!=null) {&#xD;
         map.put(key, location);&#xD;
     }&#xD;
     return location;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEtNrTEeWv0eZvzLc0yA" name="createContactRefs" specification="_xO_pq9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEtdrTEeWv0eZvzLc0yA" name="removeUnusedContact">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtEttrTEeWv0eZvzLc0yA" name="createOOSRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtEt9rTEeWv0eZvzLc0yA" name="createContractRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>TreeMap&lt;Key, Object> map = new TreeMap&lt;Key, Object>();&#xD;
     if (createContractRefs) {&#xD;
         // referenced from contract&#xD;
         for (Iterator&lt;ContractComplexType> it=uniqueContractMap.values().iterator(); it.hasNext();) {&#xD;
             ContractComplexType c = it.next();&#xD;
             c.setSystemMgrPersonRef( addContact(map, c.getSystemMgrPersonID()) );&#xD;
             c.setSWShipToPersonRef ( addContact(map, c.getSWShipToPersonID()) );&#xD;
             c.setHWShipToPersonRef ( addContact(map, c.getHWShipToPersonID()) );&#xD;
             c.setPSPCustomerRef(addContact(map, c.getPSPCustomerID()) );&#xD;
             c.setHPAdminPersonRef ( addContact(map, c.getHPAdminPersonID()) );&#xD;
             c.setOrdererPersonRef( addContact(map, c.getOrdererPersonID()));&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (createOOSRefs) {&#xD;
         // referenced from OOS&#xD;
         for (Iterator&lt;Object> it=oosMap.values().iterator(); it.hasNext();) {&#xD;
             OOSComplexType c = (OOSComplexType)it.next();&#xD;
             c.setSystemMgrPersonRef( addContact(map, c.getSystemMgrPersonID()) );&#xD;
             c.setSWShipToPersonRef ( addContact(map, c.getSWShipToPersonID()) );&#xD;
             c.setHWShipToPersonRef ( addContact(map, c.getHWShipToPersonID()) );&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // just overwrite the locationMap&#xD;
     if (removeUnusedContact) {&#xD;
         contactMap = map;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEuNrTEeWv0eZvzLc0yA" name="addContact" specification="_xXIR0NrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEudrTEeWv0eZvzLc0yA" name="map" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEutrTEeWv0eZvzLc0yA" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtEu9rTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>if (id==null) {&#xD;
         return null;&#xD;
     }&#xD;
     ContactKey key = new ContactKey(id);&#xD;
     ContactComplexType contact = (ContactComplexType)contactMap.get(key);&#xD;
     if (contact!=null) {&#xD;
         map.put(key, contact);&#xD;
     }&#xD;
     return contact;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEvNrTEeWv0eZvzLc0yA" name="createAppliesToOOSRefs" specification="_xO_pr9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = appliesToMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         AppliesToKey key = (AppliesToKey)it.next();&#xD;
         String oosKeyString = key.getOOSKey();&#xD;
         if (oosKeyString != null) {&#xD;
             OOSKey oosKey = new OOSKey(oosKeyString);&#xD;
             AppliesTo val1 = (AppliesTo) appliesToMap.get(key);&#xD;
             OOSComplexType val2 = (OOSComplexType) oosMap.get(oosKey);&#xD;
             if (val1 != null &amp;&amp; val2 != null) {&#xD;
                 val1.setOOSRef(val2);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEvdrTEeWv0eZvzLc0yA" name="createServiceItemOfferRefs" specification="_xO_psNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>Iterator&lt;Key> it = serviceItemMap.keySet().iterator();&#xD;
     while (it.hasNext()) {&#xD;
         ServiceKey key = (ServiceKey)it.next();&#xD;
         ServiceItem      val1 = (ServiceItem)serviceItemMap.get(key);&#xD;
         OfferComplexType val2 = (OfferComplexType)offerMap.get(key);&#xD;
         if (val1!=null &amp;&amp; val2!=null) {&#xD;
             val1.setOfferRef(val2);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEvtrTEeWv0eZvzLc0yA" name="calculateAggregatedValues" specification="_xO_psdrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>// used to calculate the max header end date&#xD;
     boolean firstContract = true;&#xD;
&#xD;
     // iterate over all contracts that already have the offers assigned&#xD;
     for (Iterator&lt;ContractComplexType> it=getContracts().iterator(); it.hasNext(); ) {&#xD;
         ContractComplexType c = it.next();&#xD;
         org.exolab.castor.types.Date startDate = null;&#xD;
         org.exolab.castor.types.Date endDate = null;&#xD;
         HashSet&lt;String> ccrn = new HashSet&lt;String>();&#xD;
         boolean isActiveContract = false;&#xD;
&#xD;
         Enumeration&lt;?> obligationHeaderEnum = c.enumerateObligationHeader();&#xD;
         if (obligationHeaderEnum!=null) {&#xD;
             boolean firstObligation = true;&#xD;
             while (obligationHeaderEnum.hasMoreElements()) {&#xD;
                 ObligationHeader oh = (ObligationHeader)&#xD;
                                 obligationHeaderEnum.nextElement();&#xD;
                 // min start date&#xD;
                 startDate = minDate(startDate, oh.getHeaderStartDate());&#xD;
&#xD;
                 // max end date&#xD;
                 // (will be null if at least one header end date is null)&#xD;
                 if (firstObligation) {&#xD;
                     endDate = oh.getHeaderEndDate();&#xD;
                     firstObligation = false;&#xD;
                 }&#xD;
                 else {&#xD;
                     endDate = maxDate(endDate, oh.getHeaderEndDate());&#xD;
                 }&#xD;
&#xD;
                 // CCRN&#xD;
                 if (oh.getCCRN()!=null) {&#xD;
                     ccrn.add(oh.getCCRN());&#xD;
                 }&#xD;
&#xD;
                 // isActiveContract: Shows whether any of the underlying&#xD;
                 // Obligationheaders is active&#xD;
                 isActiveContract = isActiveContract || oh.getActiveObligation();&#xD;
&#xD;
                 // global &quot;active entitlement flag&quot; for all contracts:&#xD;
                 // Shows whether any of the underlying contracts is active&#xD;
                 isActiveContractEntitlement = isActiveContractEntitlement ||&#xD;
                                               isActiveContract;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         c.setActiveContractEntitlement(isActiveContract);&#xD;
         c.setHeaderStartDate(startDate);&#xD;
         c.setHeaderEndDate(endDate);&#xD;
         // check if CCRN is unique accross obligation header&#xD;
         if (ccrn.size()==1) {&#xD;
             c.setCCRN(ccrn.iterator().next());&#xD;
         }&#xD;
&#xD;
         // overallContractStartDate/overallContractEndDate&#xD;
         overallContractStartDate = minDate(overallContractStartDate, startDate);&#xD;
         if (firstContract) {&#xD;
             overallContractEndDate = endDate;&#xD;
             firstContract = false;&#xD;
         }&#xD;
         else {&#xD;
             overallContractEndDate = maxDate(overallContractEndDate, endDate);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEv9rTEeWv0eZvzLc0yA" name="createUniqueOffersAndDeliverables" specification="_xO_pstrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEwNrTEeWv0eZvzLc0yA" name="calculateUniqueDeliverables">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// iterate over all contracts that already have the offers assigned&#xD;
     for (Iterator&lt;ContractComplexType> it=getContracts().iterator(); it.hasNext(); ) {&#xD;
         ContractComplexType c = it.next();&#xD;
         Enumeration&lt;?> allOffersEnum = c.enumerateOffer();&#xD;
         if (allOffersEnum!=null) {&#xD;
             TreeMap&lt;String, UniqueOffer> uniqueOffers = new TreeMap&lt;String, UniqueOffer>();&#xD;
             TreeMap&lt;String, TreeMap&lt;String, UniqueDeliverable>> uniqueDeliverablesForOfferCode = new TreeMap&lt;String, TreeMap&lt;String, UniqueDeliverable>>();&#xD;
&#xD;
             while (allOffersEnum.hasMoreElements()) {&#xD;
                 OfferComplexType o = (OfferComplexType)allOffersEnum.nextElement();&#xD;
                 UniqueOffer tmp = uniqueOffers.get(o.getOfferCode());&#xD;
                 if (tmp==null) {&#xD;
                     // it is the first offer for that offer code&#xD;
                     tmp = new UniqueOffer();&#xD;
                     tmp.setOfferCode(o.getOfferCode());&#xD;
                     tmp.setOfferDescription(o.getOfferDescription());&#xD;
                     tmp.setSvcProductType(o.getSvcProductType());&#xD;
                     tmp.setServiceStartDate(getServiceStartDate(null, o));&#xD;
                     tmp.setServiceEndDate(getServiceEndDate(null, o));&#xD;
                     uniqueOffers.put(o.getOfferCode(), tmp);&#xD;
                 }&#xD;
                 else {&#xD;
                     // take the existin unique offer and update the dates&#xD;
                     tmp.setServiceStartDate(getServiceStartDate(tmp, o));&#xD;
                     tmp.setServiceEndDate(getServiceEndDate(tmp, o));&#xD;
                 }&#xD;
&#xD;
                 // now create the unique deliverables for the offer code&#xD;
                 if (calculateUniqueDeliverables) {&#xD;
                     TreeMap&lt;String, UniqueDeliverable> uniqueDeliverables = uniqueDeliverablesForOfferCode.get(o.getOfferCode());&#xD;
                     if (uniqueDeliverables==null) {&#xD;
                         uniqueDeliverables = new TreeMap&lt;String, UniqueDeliverable>();&#xD;
                         uniqueDeliverablesForOfferCode.put(o.getOfferCode(),&#xD;
                                                            uniqueDeliverables);&#xD;
                     }&#xD;
&#xD;
                     Enumeration&lt;?> delivEnum = o.enumerateDeliverable();&#xD;
                     while (delivEnum.hasMoreElements()) {&#xD;
                         Deliverable d = (Deliverable)delivEnum.nextElement();&#xD;
                         UniqueDeliverable ud = uniqueDeliverables.get(d.getDelivCode());&#xD;
                         if (ud==null) {&#xD;
                             ud = new UniqueDeliverable();&#xD;
                             // not set according to definition in SRS&#xD;
                             // ud.setAvailableQuantity(d.getAvailableQuantity());&#xD;
                             ud.setDelivCode(d.getDelivCode());&#xD;
                             ud.setDelivName(d.getDelivName());&#xD;
                             ud.setDelivValue(d.getDelivValue());&#xD;
                             uniqueDeliverables.put(ud.getDelivCode(), ud);&#xD;
                         }&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // now put the unique offeres and deliverables into the contract&#xD;
             for (Iterator&lt;UniqueOffer> itUo=uniqueOffers.values().iterator(); itUo.hasNext();) {&#xD;
                 UniqueOffer uo = itUo.next();&#xD;
                 TreeMap&lt;?, ?> uniqueDeliverables = uniqueDeliverablesForOfferCode.get(uo.getOfferCode());&#xD;
                 if (uniqueDeliverables!=null) {&#xD;
                     for (Iterator&lt;?> itUd=uniqueDeliverables.values().iterator(); itUd.hasNext();) {&#xD;
                         uo.addUniqueDeliverable((UniqueDeliverable)itUd.next());&#xD;
                     }&#xD;
                 }&#xD;
                 c.addUniqueOffer(uo);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEwdrTEeWv0eZvzLc0yA" name="getServiceStartDate" specification="_xXIR1drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEwtrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEw9rTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtExNrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>org.exolab.castor.types.Date date = null;&#xD;
     // find the earlies start date from all appliesTo of this offer&#xD;
     if (offer!=null &amp;&amp; offer.enumerateAppliesTo()!=null) {&#xD;
         Enumeration&lt;?> enumeration = offer.enumerateAppliesTo();&#xD;
         while (enumeration.hasMoreElements()) {&#xD;
             AppliesTo a = (AppliesTo)enumeration.nextElement();&#xD;
             if (a.getStartDate()!=null) {&#xD;
                 if (date==null || date.compareTo(a.getStartDate())==&#xD;
                                 org.exolab.castor.types.DateTimeBase.GREATER_THAN) {&#xD;
                     date = a.getStartDate();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (uniqueOffer!=null) {&#xD;
         return minDate(date, uniqueOffer.getServiceStartDate());&#xD;
     }&#xD;
     return date;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtExdrTEeWv0eZvzLc0yA" name="getServiceEndDate" specification="_xXIR2drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtExtrTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEx9rTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEyNrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>org.exolab.castor.types.Date date = null;&#xD;
     // find the earlies end date from all appliesTo of this offer&#xD;
     if (offer!=null &amp;&amp; offer.enumerateAppliesTo()!=null) {&#xD;
         Enumeration&lt;?> enumeration = offer.enumerateAppliesTo();&#xD;
         while (enumeration.hasMoreElements()) {&#xD;
             AppliesTo a = (AppliesTo)enumeration.nextElement();&#xD;
             if (a.getEndDate()!=null) {&#xD;
                 if (date==null || date.compareTo(a.getEndDate())==&#xD;
                                 org.exolab.castor.types.DateTimeBase.LESS_THAN) {&#xD;
                     date = a.getEndDate();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (uniqueOffer!=null) {&#xD;
         return maxDate(date, uniqueOffer.getServiceEndDate());&#xD;
     }&#xD;
     return date;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEydrTEeWv0eZvzLc0yA" name="minDate" specification="_xVIGztrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEytrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEy9rTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEzNrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>if (date1==null) {&#xD;
         return date2;&#xD;
     }&#xD;
     if (date2==null) {&#xD;
         return date1;&#xD;
     }&#xD;
     if (date1.compareTo(date2)==org.exolab.castor.types.DateTimeBase.LESS_THAN) {&#xD;
         return date1;&#xD;
     }&#xD;
     return date2;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtEzdrTEeWv0eZvzLc0yA" name="maxDate" specification="_xVIG0trTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtEztrTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtEz9rTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtE0NrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>if (date1==null || date2==null) {&#xD;
         return null;&#xD;
     }&#xD;
     if (date1.compareTo(date2)==org.exolab.castor.types.DateTimeBase.GREATER_THAN) {&#xD;
         return date1;&#xD;
     }&#xD;
     return date2;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE0drTEeWv0eZvzLc0yA" name="setCurrentChunkSize" specification="_xPFwINrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE0trTEeWv0eZvzLc0yA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>currentChunkSize = i;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE09rTEeWv0eZvzLc0yA" name="setTotalResultSize" specification="_xPFwItrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE1NrTEeWv0eZvzLc0yA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>totalResultSize = i;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE1drTEeWv0eZvzLc0yA" name="produceUniqueId" specification="_xPFwJNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE1trTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return uniqueId++;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE19rTEeWv0eZvzLc0yA" name="getFirstOOS" specification="_xXIR3drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE2NrTEeWv0eZvzLc0yA" name="OOSes" type="_xVCAN9rTEeWv0eZvzLc0yA">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZtE2drTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE2trTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>OOSComplexType firstOOS = null;&#xD;
     for(int i = 0; i &lt; OOSes.length - 1; i ++) {&#xD;
         for(int j = i + 1; j &lt; OOSes.length; j++) {&#xD;
             if (OOSes[i].getOOSKey() != null &amp;&amp; OOSes[j].getOOSKey() != null &amp;&amp;&#xD;
                 OOSes[i].getOOSKey().compareTo(OOSes[j].getOOSKey()) > 0) {&#xD;
                 OOSComplexType tempOOS = OOSes[i];&#xD;
                 OOSes[i] = OOSes[j];&#xD;
                 OOSes[j] = tempOOS;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     for(int i = 0; i &lt; OOSes.length; i ++) {&#xD;
         if (OOSes[i].getProduct() != null) {&#xD;
             if (OOSes[i].getProduct().getProductID() != null &amp;&amp;&#xD;
                 !&quot;&quot;.equals(OOSes[i].getProduct().getProductID())) {&#xD;
                 firstOOS = OOSes[i];&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (firstOOS == null &amp;&amp; OOSes.length > 0 &amp;&amp; OOSes[0] != null) {&#xD;
         firstOOS = OOSes[0];&#xD;
     }&#xD;
     return firstOOS;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE29rTEeWv0eZvzLc0yA" name="mergeWith" specification="_xVIG1trTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE3NrTEeWv0eZvzLc0yA" name="replyContext" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>locationMap.putAll(replyContext.locationMap);&#xD;
	    allContractMap.putAll(replyContext.allContractMap);;     // keys=ObligationHeaderKey, values=ContractComplexType&#xD;
	    contractMap.putAll(replyContext.contractMap);        // keys=ObligationHeaderKey, values=key from uniqueContractMap&#xD;
	    uniqueContractMap.putAll(replyContext.uniqueContractMap); ;  // keys=Strings (e.g. SAID), values=ContractComplexType&#xD;
	    contactMap.putAll(replyContext.contactMap); ;&#xD;
	    oosMap.putAll(replyContext.oosMap); ;&#xD;
	    obligationHeaderMap.putAll(replyContext.obligationHeaderMap);&#xD;
	    serviceItemMap.putAll(replyContext.serviceItemMap);&#xD;
	    offerMap.putAll(replyContext.offerMap);&#xD;
	    modifierMap.putAll(replyContext.modifierMap);&#xD;
	    deliverableMap.putAll(replyContext.deliverableMap);&#xD;
	    delivModifierMap.putAll(replyContext.delivModifierMap);&#xD;
	    appliesToMap.putAll(replyContext.appliesToMap);&#xD;
	    aggProductIdMap.putAll(replyContext.aggProductIdMap);&#xD;
&#xD;
	    // The following two elements are for PoP&#xD;
	    serviceStartDateElgibilityMap.putAll(replyContext.serviceStartDateElgibilityMap);&#xD;
	    oosWtyStartDateMap.putAll(replyContext.oosWtyStartDateMap);&#xD;
	    Date d1 = DateHelper.mapCastorDate2Java(replyContext.overallContractStartDate);&#xD;
	    Date d2 = DateHelper.mapCastorDate2Java(overallContractStartDate);&#xD;
	    &#xD;
	    if(DateHelper.isGreater(d1,d2)) {&#xD;
	    	overallContractStartDate =replyContext.overallContractStartDate; &#xD;
	    }&#xD;
	 //   if(overallContractStartDate.&#xD;
	    &#xD;
	    if(!isActiveContractEntitlement &amp;&amp; replyContext.isActiveContractEntitlement) {&#xD;
	    	isActiveContractEntitlement = replyContext.isActiveContractEntitlement;&#xD;
	    }&#xD;
&#xD;
	    /*No merge of above&#xD;
	     * &#xD;
&#xD;
	    private int currentChunkSize;&#xD;
	    private int totalResultSize;&#xD;
	    private int uniqueId = 1;		&#xD;
	     */		&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE3drTEeWv0eZvzLc0yA" name="destroy" specification="_xPFwJtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>ESLog.debug(&quot;Destroy all, we finished using Context&quot;);&#xD;
		   if(locationMap!=null) {&#xD;
			   locationMap.clear();&#xD;
			   locationMap=null;&#xD;
		   }&#xD;
		   if(allContractMap!=null) {&#xD;
			   allContractMap.clear();&#xD;
			   allContractMap=null;&#xD;
		   }&#xD;
		   if(contractMap!=null) {&#xD;
			   contractMap.clear();&#xD;
			   contractMap=null;&#xD;
		   }&#xD;
		   if(uniqueContractMap!=null) {&#xD;
			   uniqueContractMap.clear();&#xD;
			   uniqueContractMap=null;&#xD;
		   }&#xD;
		   if(contactMap!=null) {&#xD;
			   contactMap.clear();&#xD;
			   contactMap=null;&#xD;
		   }&#xD;
		   if(oosMap!=null) {&#xD;
			   oosMap.clear();&#xD;
			   oosMap=null;&#xD;
		   }&#xD;
		   if(obligationHeaderMap!=null) {&#xD;
			   obligationHeaderMap.clear();&#xD;
			   obligationHeaderMap=null;&#xD;
		   }&#xD;
		   if(serviceItemMap!=null) {&#xD;
			   serviceItemMap.clear();&#xD;
			   serviceItemMap=null;&#xD;
		   }&#xD;
		   if(offerMap!=null) {&#xD;
			   offerMap.clear();&#xD;
			   offerMap=null;&#xD;
		   }&#xD;
		   if(modifierMap!=null) {&#xD;
			   modifierMap.clear();&#xD;
			   modifierMap=null;&#xD;
		   }&#xD;
		   if(deliverableMap!=null) {&#xD;
			   deliverableMap.clear();&#xD;
			   deliverableMap=null;&#xD;
		   }&#xD;
		   if(delivModifierMap!=null) {&#xD;
			   delivModifierMap.clear();&#xD;
			   delivModifierMap=null;&#xD;
		   }&#xD;
		   if(appliesToMap!=null) {&#xD;
			   appliesToMap.clear();&#xD;
			   appliesToMap=null;&#xD;
		   }&#xD;
		   if(aggProductIdMap!=null) {&#xD;
			   aggProductIdMap.clear();&#xD;
			   aggProductIdMap=null;&#xD;
		   }&#xD;
&#xD;
		   if(oosWtyStartDateMap!=null) {&#xD;
			   oosWtyStartDateMap.clear();&#xD;
			   oosWtyStartDateMap=null;&#xD;
		   }&#xD;
			&#xD;
&#xD;
		   overallContractStartDate= null;&#xD;
		   overallContractEndDate = null;&#xD;
		   ESLog.debug(&quot;Done with Destroy all, we finished using Context&quot;);&#xD;
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xO_pgNrTEeWv0eZvzLc0yA" name="isActiveContractEntitlement" method="_xZm-ItrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzFNrTEeWv0eZvzLc0yA">
                    <body>@returns true if at least one active AppliesTo was found</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pgdrTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pgtrTEeWv0eZvzLc0yA" name="mergeAndCalculateAll" method="_xZm-JNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzFdrTEeWv0eZvzLc0yA">
                    <body>This is a helper method to finalize the context. Since the current&#xD;
     * implementation puts only object into the context that will be available&#xD;
     * in the output, we have to merge everything.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pg9rTEeWv0eZvzLc0yA" name="getLocations" method="_xZm-JdrTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO_phtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO_ph9rTEeWv0eZvzLc0yA" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_xaXzFtrTEeWv0eZvzLc0yA">
                    <body>Method to access the Locations for the current reply. This method should&#xD;
     * be called after all appropriate mergeXXX() and createXXXRefs() methods&#xD;
     * were called.&#xD;
     * @return Collection of LocationComplexType</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_phNrTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xO_phdrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_piNrTEeWv0eZvzLc0yA" name="getContacts" method="_xZm-KNrTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO_pi9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO_pjNrTEeWv0eZvzLc0yA" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_xaXzF9rTEeWv0eZvzLc0yA">
                    <body>Method to access the Contacts for the current reply. This method should&#xD;
     * be called after all appropriate mergeXXX() and createXXXRefs() methods&#xD;
     * were called.&#xD;
     * @return Collection of ContactComplexType</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pidrTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xO_pitrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pjdrTEeWv0eZvzLc0yA" name="getContracts" method="_xZm-NNrTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO_pkNrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO_pkdrTEeWv0eZvzLc0yA" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_xaXzG9rTEeWv0eZvzLc0yA">
                    <body>Method to access the Contracts for the current reply. This method should&#xD;
     * be called after all appropriate mergeXXX() and createXXXRefs() methods&#xD;
     * were called.&lt;p>&#xD;
     * The method returns one ContractComplexType per service agreement ID!&lt;ul>&#xD;
     * &lt;li>see also {@link getContract(ObligationHeaderKey)}&#xD;
     * &lt;li>see also {@link addContract(ObligationHeaderKey, ContractComplexType)}&#xD;
     * &lt;/ul>&#xD;
     * @return Collection of ContractComplexType</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pjtrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xO_pj9rTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pktrTEeWv0eZvzLc0yA" name="getOOSes" method="_xZm-OtrTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xO_pldrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xO_pltrTEeWv0eZvzLc0yA" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_xaXzHdrTEeWv0eZvzLc0yA">
                    <body>Method to access the OOSes for the current reply. This method should&#xD;
     * be called after all appropriate mergeXXX() and createXXXRefs() methods&#xD;
     * were called.&#xD;
     * @return Collection of OOSComplexType</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pk9rTEeWv0eZvzLc0yA" type="_xXCLMtrTEeWv0eZvzLc0yA" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xO_plNrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pl9rTEeWv0eZvzLc0yA" name="getAppliesTo" method="_xZm-PdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzHtrTEeWv0eZvzLc0yA">
                    <body>Method to access the AppliesTo for the current reply. This method should&#xD;
     * be called for PoP date alignment&#xD;
     * were called.&#xD;
     * @return Collection of AppliesTo</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLONrTEeWv0eZvzLc0yA" type="_xVCAI9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pmdrTEeWv0eZvzLc0yA" name="getOosWarrantyStartDate" method="_xZm-QtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzINrTEeWv0eZvzLc0yA">
                    <body>@return the org.exolab.castor.types.Date indentified by the OOSKey</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pmtrTEeWv0eZvzLc0yA" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xVIGxdrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pm9rTEeWv0eZvzLc0yA" name="setAggProductId" method="_xZm-SNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzItrTEeWv0eZvzLc0yA">
                    <body>Store the relation between the &quot;real&quot; product ID and the mapped&#xD;
     * product ID.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pnNrTEeWv0eZvzLc0yA" name="prodId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO_pndrTEeWv0eZvzLc0yA" name="aggProdId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pntrTEeWv0eZvzLc0yA" name="getAggProductIdMapping" method="_xZm-S9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzI9rTEeWv0eZvzLc0yA">
                    <body>Return a HashMap that cointains the mapping the &quot;real&quot; product ID&#xD;
     * and the mapped product ID.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLPNrTEeWv0eZvzLc0yA" type="_xVCAG9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_poNrTEeWv0eZvzLc0yA" name="mergeDelivModifierToDeliverable" visibility="package" method="_xZm-ddrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzMdrTEeWv0eZvzLc0yA">
                    <body>Assign DelivModifier to Deliverable</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_podrTEeWv0eZvzLc0yA" name="mergeDeliverableToOffer" visibility="package" method="_xZm-dtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzMtrTEeWv0eZvzLc0yA">
                    <body>Assign Deliverable to Offer</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_potrTEeWv0eZvzLc0yA" name="mergeModifierToOffer" visibility="package" method="_xZm-d9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzM9rTEeWv0eZvzLc0yA">
                    <body>Assign Modifier to Offer</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_po9rTEeWv0eZvzLc0yA" name="mergeAppliesToToOffer" visibility="package" method="_xZm-eNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzNNrTEeWv0eZvzLc0yA">
                    <body>Assign AppliesTo to Offer</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_ppNrTEeWv0eZvzLc0yA" name="mergeOfferToContract" visibility="package" method="_xZm-edrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzNdrTEeWv0eZvzLc0yA">
                    <body>Assign Offer to Contract</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_ppdrTEeWv0eZvzLc0yA" name="mergeObligationHeaderToContract" visibility="package" method="_xZm-etrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzNtrTEeWv0eZvzLc0yA">
                    <body>Assign ObligationHeader to Contract</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pptrTEeWv0eZvzLc0yA" name="mergeServiceItemToObligationHeader" visibility="package" method="_xZm-e9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzN9rTEeWv0eZvzLc0yA">
                    <body>Assign ServiceItem to ObligationHeader</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pp9rTEeWv0eZvzLc0yA" name="createLocationRefs" visibility="package" method="_xZm-fNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzONrTEeWv0eZvzLc0yA">
                    <body>This method fills the IDs for the locations and the location-IDREFs for&#xD;
     * OOS and contracts. This method must only be called if the Locations&#xD;
     * will be part of the EsReply!&#xD;
     * @param removeUnusedLocations 'true' if the location should contain only&#xD;
     *                              Locations that were references somewhere else&#xD;
     * @param createOOSRefs 'true' if the reference should be created for OOSes&#xD;
     * @param createContractRefs 'true' if the reference should be created for&#xD;
     *                              Contract</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_pqNrTEeWv0eZvzLc0yA" name="removeUnusedLocations">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO_pqdrTEeWv0eZvzLc0yA" name="createOOSRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO_pqtrTEeWv0eZvzLc0yA" name="createContractRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pq9rTEeWv0eZvzLc0yA" name="createContactRefs" visibility="package" method="_xZtEtNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzOtrTEeWv0eZvzLc0yA">
                    <body>This method fills the IDs for the locations and the location-IDREFs for&#xD;
     * OOS and contracts.&#xD;
     * @param removeUnusedLocations 'true' if the location should contain only&#xD;
     *                              Locations that were references somewhere else&#xD;
     * @param createOOSRefs 'true' if the reference should be created for OOSes&#xD;
     * @param createContractRefs 'true' if the reference should be created for&#xD;
     *                              Contract</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_prNrTEeWv0eZvzLc0yA" name="removeUnusedContact">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO_prdrTEeWv0eZvzLc0yA" name="createOOSRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xO_prtrTEeWv0eZvzLc0yA" name="createContractRefs">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pr9rTEeWv0eZvzLc0yA" name="createAppliesToOOSRefs" visibility="package" method="_xZtEvNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzPNrTEeWv0eZvzLc0yA">
                    <body>Create references (ID/IDREF in XML schema) for AppliesTo and OOS.&#xD;
     * &lt;b>Note:&lt;/b> Currently one AppliesTo will contain 0 or 1 OOSes</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_psNrTEeWv0eZvzLc0yA" name="createServiceItemOfferRefs" visibility="package" method="_xZtEvdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzPdrTEeWv0eZvzLc0yA">
                    <body>Create references (ID/IDREF in XML schema) for offers and service items.&#xD;
     * &lt;b>Note:&lt;/b> Currently this is a one-to-one relation</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_psdrTEeWv0eZvzLc0yA" name="calculateAggregatedValues" method="_xZtEvtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzPtrTEeWv0eZvzLc0yA">
                    <body>Following values are calculated:&#xD;
     * &lt;table>&#xD;
     * &lt;tr>&lt;td>global&lt;/td>&lt;td>overallContractStartDate&lt;/td>&lt;/tr>&#xD;
     * &lt;tr>&lt;td>global&lt;/td>&lt;td>overallContractEndDate&lt;/td>&lt;/tr>&#xD;
     * &lt;tr>&lt;td>Contract&lt;/td>&lt;td>ActiveContractEntitlement&lt;/td>&lt;/tr>&#xD;
     * &lt;tr>&lt;td>Contract&lt;/td>&lt;td>HeaderStartDate&lt;/td>&lt;/tr>&#xD;
     * &lt;tr>&lt;td>Contract&lt;/td>&lt;td>HeaderEndDate&lt;/td>&lt;/tr>&#xD;
     * &lt;tr>&lt;td>Contract&lt;/td>&lt;td>CCRN&lt;/td>&lt;/tr>&#xD;
     * &lt;/table></body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_xO_pstrTEeWv0eZvzLc0yA" name="createUniqueOffersAndDeliverables" visibility="package" method="_xZtEv9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzP9rTEeWv0eZvzLc0yA">
                    <body>Assign UniqueDeliverables to Contract. This method requires that the&#xD;
     * mergeOffersToContract() was called before!!!</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xO_ps9rTEeWv0eZvzLc0yA" name="calculateUniqueDeliverables">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPFwINrTEeWv0eZvzLc0yA" name="setCurrentChunkSize" method="_xZtE0drTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzQ9rTEeWv0eZvzLc0yA">
                    <body>@param i amount of obligations returned by the last DB access</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xPFwIdrTEeWv0eZvzLc0yA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPFwItrTEeWv0eZvzLc0yA" name="setTotalResultSize" method="_xZtE09rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzRNrTEeWv0eZvzLc0yA">
                    <body>@param i amount of obligations found by the last DB access&#xD;
     *         that fits the search criteria.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xPFwI9rTEeWv0eZvzLc0yA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPFwJNrTEeWv0eZvzLc0yA" name="produceUniqueId" visibility="private" method="_xZtE1drTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzRdrTEeWv0eZvzLc0yA">
                    <body>return a &quot;unique&quot; ID which is used to distinguish contracts that&#xD;
     * should not be merged together.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xPFwJdrTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPFwJtrTEeWv0eZvzLc0yA" name="destroy" method="_xZtE3drTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xVIGtdrTEeWv0eZvzLc0yA" name="EsReplyContext" method="_xZm-H9rTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xVIGt9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xVIGuNrTEeWv0eZvzLc0yA" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_xaXzE9rTEeWv0eZvzLc0yA">
                    <body>public Constructor</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGttrTEeWv0eZvzLc0yA" name="outputDetails" type="_xPwegtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIGudrTEeWv0eZvzLc0yA" type="_xO5jAdrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGutrTEeWv0eZvzLc0yA" name="getContact" method="_xZm-K9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzGNrTEeWv0eZvzLc0yA">
                    <body>@return ContactComplexType</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGu9rTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLNNrTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGvNrTEeWv0eZvzLc0yA" name="getUniqueContract" method="_xZm-LtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzGdrTEeWv0eZvzLc0yA">
                    <body>The addContract() method automatically combines contracts with the same&#xD;
    * service agreement ID etc., i.e. if there are two contracts from the same&#xD;
    * portfolio (R,B,P) with the same identifier, only the contract with the&#xD;
    * newest CdoPublishedDate is stored.&#xD;
    * This means the getContract(ObligationHeaderKey) not necessarily return&#xD;
    * the same ContractComplexType that was added by the addContract() method.&#xD;
    * @return the ContractComplexType indentified by the ObligationHeaderKey</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGvdrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLNdrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGvtrTEeWv0eZvzLc0yA" name="getContract" method="_xZm-MdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzGtrTEeWv0eZvzLc0yA">
                    <body>Contrary to the getUniqueContract() method, this method returns exactly&#xD;
    * the same contract as stored for the current ObligationHeaderKey&#xD;
    * @return the ContractComplexType indentified by the ObligationHeaderKey</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGv9rTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLNtrTEeWv0eZvzLc0yA" type="_xVCAL9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGwNrTEeWv0eZvzLc0yA" name="getOOS" method="_xZm-N9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzHNrTEeWv0eZvzLc0yA">
                    <body>@return the OOSComplexType indentified by the OOSKey</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGwdrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLN9rTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGwtrTEeWv0eZvzLc0yA" name="getSvcWtyStartDateEligibility" method="_xZm-P9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzH9rTEeWv0eZvzLc0yA">
                    <body>@return the String indentified by the ServiceKey</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGw9rTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIGxNrTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGxtrTEeWv0eZvzLc0yA" name="addSvcWtyStartDateEligibility" method="_xZm-a9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzLtrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGx9rTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIGyNrTEeWv0eZvzLc0yA" name="s">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGy9rTEeWv0eZvzLc0yA" name="addOosWarrantyStartDate" method="_xZm-btrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzL9rTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIGzNrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIGzdrTEeWv0eZvzLc0yA" name="d" type="_xVIGydrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIGztrTEeWv0eZvzLc0yA" name="minDate" visibility="private" method="_xZtEydrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xVIGz9rTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIG0NrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIG0drTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIG0trTEeWv0eZvzLc0yA" name="maxDate" visibility="private" method="_xZtEzdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzQtrTEeWv0eZvzLc0yA">
                    <body>*&#xD;
     * @param date1&#xD;
     * @param date2&#xD;
     * @return null if date1 or date2 is null; otherwise return the max&#xD;
     *               of both dates</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xVIG09rTEeWv0eZvzLc0yA" name="date1" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIG1NrTEeWv0eZvzLc0yA" name="date2" type="_xU75cNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xVIG1drTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xVIG1trTEeWv0eZvzLc0yA" name="mergeWith" method="_xZtE29rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xVIG19rTEeWv0eZvzLc0yA" name="replyContext" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLOdrTEeWv0eZvzLc0yA" name="addLocation" method="_xZm-RdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzIdrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLOtrTEeWv0eZvzLc0yA" name="key" type="_xRHwoNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLO9rTEeWv0eZvzLc0yA" name="o" type="_xVCAM9rTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLPdrTEeWv0eZvzLc0yA" name="addContract" method="_xZm-TdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzJNrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.&lt;p>&#xD;
     * &lt;b>Note: &lt;/b> The keys are of the type ObligationHeaderKey not&#xD;
     * ContractKey because several contracts might be combined to one single&#xD;
     * contract (e.g. based on the svcAgreementID).</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLPtrTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLP9rTEeWv0eZvzLc0yA" name="o" type="_xVCAL9rTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLQNrTEeWv0eZvzLc0yA" name="addContact" method="_xZm-UNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzJdrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLQdrTEeWv0eZvzLc0yA" name="key" type="_xRBp5NrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLQtrTEeWv0eZvzLc0yA" name="o" type="_xVCALdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLQ9rTEeWv0eZvzLc0yA" name="addOOS" method="_xZm-U9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzJtrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLRNrTEeWv0eZvzLc0yA" name="key" type="_xRN3I9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLRdrTEeWv0eZvzLc0yA" name="o" type="_xVCAN9rTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLRtrTEeWv0eZvzLc0yA" name="addObligationHeader" method="_xZm-VtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzJ9rTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLR9rTEeWv0eZvzLc0yA" name="key" type="_xRN3LtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLSNrTEeWv0eZvzLc0yA" name="o" type="_xVCAOdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLSdrTEeWv0eZvzLc0yA" name="addServiceItem" method="_xZm-WdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzKNrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLStrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLS9rTEeWv0eZvzLc0yA" name="o" type="_xVCAPdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLTNrTEeWv0eZvzLc0yA" name="addOffer" method="_xZm-XNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzKdrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLTdrTEeWv0eZvzLc0yA" name="key" type="_xRN3N9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLTtrTEeWv0eZvzLc0yA" name="o" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLT9rTEeWv0eZvzLc0yA" name="addModifier" method="_xZm-X9rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzKtrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLUNrTEeWv0eZvzLc0yA" name="key" type="_xRN3GNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLUdrTEeWv0eZvzLc0yA" name="o" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLUtrTEeWv0eZvzLc0yA" name="addDeliverable" method="_xZm-YtrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzK9rTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLU9rTEeWv0eZvzLc0yA" name="key" type="_xRBp-9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLVNrTEeWv0eZvzLc0yA" name="o" type="_xVCAMdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLVdrTEeWv0eZvzLc0yA" name="addDelivModifier" method="_xZm-ZdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzLNrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLVtrTEeWv0eZvzLc0yA" name="key" type="_xRBp7drTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLV9rTEeWv0eZvzLc0yA" name="o" type="_xVCANdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLWNrTEeWv0eZvzLc0yA" name="addAppliesTo" method="_xZm-aNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzLdrTEeWv0eZvzLc0yA">
                    <body>Store the given object identified by the key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLWdrTEeWv0eZvzLc0yA" name="key" type="_xRBp19rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLWtrTEeWv0eZvzLc0yA" name="o" type="_xVCAK9rTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLW9rTEeWv0eZvzLc0yA" name="storeObject" visibility="private" method="_xZm-cdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzMNrTEeWv0eZvzLc0yA">
                    <body>Just put the key-object pair into the map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLXNrTEeWv0eZvzLc0yA" name="key" type="_xRHwe9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLXdrTEeWv0eZvzLc0yA" name="o" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLXtrTEeWv0eZvzLc0yA" name="target" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXCLYNrTEeWv0eZvzLc0yA" name="addLocation" visibility="private" method="_xZtEsNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzOdrTEeWv0eZvzLc0yA">
                    <body>Helper method that inserts the Location identified by the given id into&#xD;
     * the map and returns the current Location object</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXCLYdrTEeWv0eZvzLc0yA" name="map" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXCLYtrTEeWv0eZvzLc0yA" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXCLY9rTEeWv0eZvzLc0yA" type="_xVCAM9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR0NrTEeWv0eZvzLc0yA" name="addContact" visibility="private" method="_xZtEuNrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzO9rTEeWv0eZvzLc0yA">
                    <body>Helper method that inserts the Contact identified by the given id into&#xD;
     * the map and returns the current Contact object</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXIR0drTEeWv0eZvzLc0yA" name="map" type="_xVCAIdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR0trTEeWv0eZvzLc0yA" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXIR09rTEeWv0eZvzLc0yA" type="_xVCALdrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR1drTEeWv0eZvzLc0yA" name="getServiceStartDate" visibility="private" method="_xZtEwdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzQNrTEeWv0eZvzLc0yA">
                    <body>@return the earlies service start date from all AppliesTo from the&#xD;
     * offer or from the given unique offer object</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXIR1trTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR19rTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR2NrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR2drTEeWv0eZvzLc0yA" name="getServiceEndDate" visibility="private" method="_xZtExdrTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzQdrTEeWv0eZvzLc0yA">
                    <body>@return the latest service end date from all AppliesTo from the&#xD;
     * offer or from the given unique offer object</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXIR2trTEeWv0eZvzLc0yA" name="uniqueOffer" type="_xVIGs9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR29rTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR3NrTEeWv0eZvzLc0yA" type="_xU75cNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR3drTEeWv0eZvzLc0yA" name="getFirstOOS" method="_xZtE19rTEeWv0eZvzLc0yA">
                  <ownedComment xmi:id="_xaXzRtrTEeWv0eZvzLc0yA">
                    <body>return first OOS with ProductID when we meet multiple OOSs&#xD;
     * if no OOS has ProductID, we return the first OOS&#xD;
     * to make the return result constant, we sort the OOSes first&#xD;
     * this logic is new since 8.2.0</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_xXIR3trTEeWv0eZvzLc0yA" name="OOSes" type="_xVCAN9rTEeWv0eZvzLc0yA">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xXIR4NrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXIR39rTEeWv0eZvzLc0yA" type="_xVCAN9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPL2wNrTEeWv0eZvzLc0yA" name="EsReplyContextTest">
                <ownedComment xmi:id="_xaXzR9rTEeWv0eZvzLc0yA">
                  <body>JUnit test case for EsReplyContext&#xD;
 *&#xD;
Todo:&#xD;
   testCreateOosLocationRefs&#xD;
   testCreateOosContactRefs&#xD;
   test that the contract with the latest getCdoPublishDate is used</body>
                </ownedComment>
                <generalization xmi:id="_xXIR5trTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE3trTEeWv0eZvzLc0yA" name="EsReplyContextTest" specification="_xPL2wdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE39rTEeWv0eZvzLc0yA" name="inName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE4NrTEeWv0eZvzLc0yA" type="_xPL2wNrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>super(inName);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE4drTEeWv0eZvzLc0yA" name="suite" specification="_xPL2xtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE4trTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>// discover test*() methods via reflection:&#xD;
     return new TestSuite(EsReplyContextTest.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE49rTEeWv0eZvzLc0yA" name="main" specification="_xPL2x9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE5NrTEeWv0eZvzLc0yA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xZtE5drTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>EsReplyContextTest t = new EsReplyContextTest(&quot;test&quot;);&#xD;
   t.testThatNewestContractIsUsed();&#xD;
     //junit.textui.TestRunner.run(suite());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE5trTEeWv0eZvzLc0yA" name="testMergeDelivModifierToDeliverable" specification="_xPL2ytrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeDelivModifierToDeliverable();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     Deliverable t1 = new Deliverable();&#xD;
     Deliverable t2 = new Deliverable();&#xD;
     Deliverable t3 = new Deliverable();&#xD;
     c.addDeliverable(new DeliverableKey(&quot;x&quot;, &quot;y&quot;, &quot;z&quot;, &quot;0&quot;), t1);&#xD;
     c.addDeliverable(new DeliverableKey(&quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;), t2);&#xD;
     c.addDeliverable(new DeliverableKey(&quot;2&quot;, &quot;2&quot;, &quot;2&quot;, &quot;2&quot;), t3);&#xD;
&#xD;
     ModifierComplexType s1 = new ModifierComplexType();&#xD;
     ModifierComplexType s2 = new ModifierComplexType();&#xD;
     ModifierComplexType s3 = new ModifierComplexType();&#xD;
     c.addDelivModifier(new DelivModifierKey(&quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1.5&quot;, &quot;1.6&quot;), s1);&#xD;
     c.addDelivModifier(new DelivModifierKey(&quot;2&quot;, &quot;2&quot;, &quot;2&quot;, &quot;2&quot;, &quot;2.5&quot;, &quot;2.6&quot;), s2);&#xD;
     c.addDelivModifier(new DelivModifierKey(&quot;2&quot;, &quot;2&quot;, &quot;2&quot;, &quot;2&quot;, &quot;3.5&quot;, &quot;3.6&quot;), s3);&#xD;
&#xD;
     c.mergeDelivModifierToDeliverable();&#xD;
     verifyCounts(&quot;Deliverable.getDelivModifierCount()&quot;,&#xD;
                t1.getDelivModifierCount(), t2.getDelivModifierCount(), t3.getDelivModifierCount());&#xD;
     verifyContainment(t2.enumerateDelivModifier(), s1, null);&#xD;
     verifyContainment(t3.enumerateDelivModifier(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE59rTEeWv0eZvzLc0yA" name="testMergeAppliesToToOffer" specification="_xPL2y9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeAppliesToToOffer();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     OfferComplexType t1 = new OfferComplexType();&#xD;
     OfferComplexType t2 = new OfferComplexType();&#xD;
     OfferComplexType t3 = new OfferComplexType();&#xD;
     c.addOffer(new ServiceKey(&quot;x&quot;, &quot;y&quot;), t1);&#xD;
     c.addOffer(new ServiceKey(&quot;1&quot;, &quot;1&quot;), t2);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;2&quot;), t3);&#xD;
&#xD;
     AppliesTo s1 = new AppliesTo();&#xD;
     AppliesTo s2 = new AppliesTo();&#xD;
     AppliesTo s3 = new AppliesTo();&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;1&quot;, &quot;1&quot;, &quot;1.3&quot;), s1);&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;2&quot;, &quot;2&quot;, &quot;2.3&quot;), s2);&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;2&quot;, &quot;2&quot;, &quot;3.3&quot;), s3);&#xD;
&#xD;
     c.mergeAppliesToToOffer();&#xD;
     verifyCounts(&quot;OfferComplexType.getAppliesToCount()&quot;,&#xD;
                t1.getAppliesToCount(), t2.getAppliesToCount(), t3.getAppliesToCount());&#xD;
     verifyContainment(t2.enumerateAppliesTo(), s1, null);&#xD;
     verifyContainment(t3.enumerateAppliesTo(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE6NrTEeWv0eZvzLc0yA" name="testMergeDeliverableToOffer" specification="_xPL2zNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeDeliverableToOffer();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     OfferComplexType t1 = new OfferComplexType();&#xD;
     OfferComplexType t2 = new OfferComplexType();&#xD;
     OfferComplexType t3 = new OfferComplexType();&#xD;
     c.addOffer(new ServiceKey(&quot;x&quot;, &quot;y&quot;), t1);&#xD;
     c.addOffer(new ServiceKey(&quot;1&quot;, &quot;1&quot;), t2);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;2&quot;), t3);&#xD;
&#xD;
     Deliverable s1 = new Deliverable();&#xD;
     Deliverable s2 = new Deliverable();&#xD;
     Deliverable s3 = new Deliverable();&#xD;
     c.addDeliverable(new DeliverableKey(&quot;1&quot;, &quot;1&quot;, &quot;1.3&quot;, &quot;1.4&quot;), s1);&#xD;
     c.addDeliverable(new DeliverableKey(&quot;2&quot;, &quot;2&quot;, &quot;2.3&quot;, &quot;2.4&quot;), s2);&#xD;
     c.addDeliverable(new DeliverableKey(&quot;2&quot;, &quot;2&quot;, &quot;3.3&quot;, &quot;3.4&quot;), s3);&#xD;
&#xD;
     c.mergeDeliverableToOffer();&#xD;
     verifyCounts(&quot;OfferComplexType.getDeliverableCount()&quot;,&#xD;
                t1.getDeliverableCount(), t2.getDeliverableCount(), t3.getDeliverableCount());&#xD;
     verifyContainment(t2.enumerateDeliverable(), s1, null);&#xD;
     verifyContainment(t3.enumerateDeliverable(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE6drTEeWv0eZvzLc0yA" name="testMergeModifierToOffer" specification="_xPL2zdrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeModifierToOffer();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     OfferComplexType t1 = new OfferComplexType();&#xD;
     OfferComplexType t2 = new OfferComplexType();&#xD;
     OfferComplexType t3 = new OfferComplexType();&#xD;
     c.addOffer(new ServiceKey(&quot;x&quot;, &quot;y&quot;), t1);&#xD;
     c.addOffer(new ServiceKey(&quot;1&quot;, &quot;1&quot;), t2);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;2&quot;), t3);&#xD;
&#xD;
     ModifierComplexType s1 = new ModifierComplexType();&#xD;
     ModifierComplexType s2 = new ModifierComplexType();&#xD;
     ModifierComplexType s3 = new ModifierComplexType();&#xD;
     c.addModifier(new ModifierKey(&quot;1&quot;, &quot;1&quot;, &quot;1.3&quot;), s1);&#xD;
     c.addModifier(new ModifierKey(&quot;2&quot;, &quot;2&quot;, &quot;2.3&quot;), s2);&#xD;
     c.addModifier(new ModifierKey(&quot;2&quot;, &quot;2&quot;, &quot;3.3&quot;), s3);&#xD;
&#xD;
     c.mergeModifierToOffer();&#xD;
     verifyCounts(&quot;OfferComplexType.getModifierCount()&quot;,&#xD;
                t1.getModifierCount(), t2.getModifierCount(), t3.getModifierCount());&#xD;
     verifyContainment(t2.enumerateModifier(), s1, null);&#xD;
     verifyContainment(t3.enumerateModifier(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE6trTEeWv0eZvzLc0yA" name="testMergeOfferToContract" specification="_xPL2ztrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeOfferToContract();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     ContractComplexType t1 = new ContractComplexType();&#xD;
     t1.setSvcAgreementID(&quot;1&quot;);&#xD;
     t1.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType t2 = new ContractComplexType();&#xD;
     t2.setSvcAgreementID(&quot;2&quot;);&#xD;
     t2.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType t3 = new ContractComplexType();&#xD;
     t3.setSvcAgreementID(&quot;3&quot;);&#xD;
     t3.setPortfolioFlag(&quot;G&quot;);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;x&quot;), t1);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;1&quot;), t2);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;2&quot;), t3);&#xD;
&#xD;
     OfferComplexType s1 = new OfferComplexType();&#xD;
     OfferComplexType s2 = new OfferComplexType();&#xD;
     OfferComplexType s3 = new OfferComplexType();&#xD;
     c.addOffer(new ServiceKey(&quot;1&quot;, &quot;1.2&quot;), s1);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;2.2&quot;), s2);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;3.2&quot;), s3);&#xD;
&#xD;
     c.mergeOfferToContract();&#xD;
     verifyCounts(&quot;ContractComplexType.getOfferCount()&quot;,&#xD;
                t1.getOfferCount(), t2.getOfferCount(), t3.getOfferCount());&#xD;
     verifyContainment(t2.enumerateOffer(), s1, null);&#xD;
     verifyContainment(t3.enumerateOffer(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE69rTEeWv0eZvzLc0yA" name="testMergeObligationHeaderToContract" specification="_xPL2z9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeObligationHeaderToContract();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     ContractComplexType t1 = new ContractComplexType();&#xD;
     t1.setSvcAgreementID(&quot;1&quot;);&#xD;
     t1.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType t2 = new ContractComplexType();&#xD;
     t2.setSvcAgreementID(&quot;2&quot;);&#xD;
     t2.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType t3 = new ContractComplexType();&#xD;
     t3.setSvcAgreementID(&quot;3&quot;);&#xD;
     t3.setPortfolioFlag(&quot;G&quot;);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;x&quot;), t1);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;1&quot;), t2);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;2&quot;), t3);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;3&quot;), t3); // note: again t3 !!!&#xD;
&#xD;
     ObligationHeader s1 = new ObligationHeader();&#xD;
     ObligationHeader s2 = new ObligationHeader();&#xD;
     ObligationHeader s3 = new ObligationHeader();&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;1&quot;), s1); // linked to t2&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;2&quot;), s2); // linked to t3&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;3&quot;), s3); // linked to t3&#xD;
&#xD;
     c.mergeObligationHeaderToContract();&#xD;
     verifyCounts(&quot;ContractComplexType.getOfferCount()&quot;,&#xD;
                t1.getObligationHeaderCount(), t2.getObligationHeaderCount(), t3.getObligationHeaderCount());&#xD;
     verifyContainment(t2.enumerateObligationHeader(), s1, null);&#xD;
     verifyContainment(t3.enumerateObligationHeader(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE7NrTEeWv0eZvzLc0yA" name="testMergeServiceItemToObligationHeader" specification="_xPL20NrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.mergeServiceItemToObligationHeader();&#xD;
&#xD;
     // insert objects and verify that they are merged correctly&#xD;
     ObligationHeader t1 = new ObligationHeader();&#xD;
     ObligationHeader t2 = new ObligationHeader();&#xD;
     ObligationHeader t3 = new ObligationHeader();&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;x&quot;), t1);&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;1&quot;), t2);&#xD;
     c.addObligationHeader(new ObligationHeaderKey(&quot;2&quot;), t3);&#xD;
&#xD;
     ServiceItem s1 = new ServiceItem();&#xD;
     ServiceItem s2 = new ServiceItem();&#xD;
     ServiceItem s3 = new ServiceItem();&#xD;
     c.addServiceItem(new ServiceKey(&quot;1&quot;, &quot;1.2&quot;), s1);&#xD;
     c.addServiceItem(new ServiceKey(&quot;2&quot;, &quot;2.2&quot;), s2);&#xD;
     c.addServiceItem(new ServiceKey(&quot;2&quot;, &quot;3.2&quot;), s3);&#xD;
&#xD;
     c.mergeServiceItemToObligationHeader();&#xD;
     verifyCounts(&quot;ObligationHeader.getServiceItemCount()&quot;,&#xD;
                t1.getServiceItemCount(), t2.getServiceItemCount(), t3.getServiceItemCount());&#xD;
     verifyContainment(t2.enumerateServiceItem(), s1, null);&#xD;
     verifyContainment(t3.enumerateServiceItem(), s2, s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE7drTEeWv0eZvzLc0yA" name="testCreateAppliesToOOSRefs" specification="_xPL20drTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.createAppliesToOOSRefs();&#xD;
&#xD;
     AppliesTo t1 = new AppliesTo();&#xD;
     AppliesTo t2 = new AppliesTo();&#xD;
     AppliesTo t3 = new AppliesTo();&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;1.1&quot;, &quot;1.2&quot;, &quot;x&quot;), t1);&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;2.1&quot;, &quot;2.2&quot;, &quot;1&quot;), t2);&#xD;
     c.addAppliesTo(new AppliesToKey(&quot;3.1&quot;, &quot;3.2&quot;, &quot;2&quot;), t3);&#xD;
&#xD;
     OOSComplexType s1 = new OOSComplexType();&#xD;
     OOSComplexType s2 = new OOSComplexType();&#xD;
     OOSComplexType s3 = new OOSComplexType();&#xD;
     c.addOOS(new OOSKey(&quot;y&quot;), s1);&#xD;
     c.addOOS(new OOSKey(&quot;1&quot;), s2);&#xD;
     c.addOOS(new OOSKey(&quot;2&quot;), s3);&#xD;
&#xD;
     c.createAppliesToOOSRefs();&#xD;
&#xD;
     verifyIds(&quot;OOSComplexType.getId()&quot;, s1.getId(), s2.getId(), s3.getId());&#xD;
     assertTrue(&quot;t1.getOOSRef() should be null&quot;, t1.getOOSRef()==null);&#xD;
     assertTrue(&quot;t2.getOOSRef() should be s2&quot;,   t2.getOOSRef()==s2);&#xD;
     assertTrue(&quot;t3.getOOSRef() should be s3&quot;,   t3.getOOSRef()==s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE7trTEeWv0eZvzLc0yA" name="testCreateServiceItemOfferRefs" specification="_xPR9YNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     c.createServiceItemOfferRefs();&#xD;
&#xD;
     ServiceItem t1 = new ServiceItem();&#xD;
     ServiceItem t2 = new ServiceItem();&#xD;
     ServiceItem t3 = new ServiceItem();&#xD;
     c.addServiceItem(new ServiceKey(&quot;x&quot;, &quot;y&quot;), t1);&#xD;
     c.addServiceItem(new ServiceKey(&quot;2&quot;, &quot;2&quot;), t2);&#xD;
     c.addServiceItem(new ServiceKey(&quot;3&quot;, &quot;3&quot;), t3);&#xD;
&#xD;
     OfferComplexType s1 = new OfferComplexType();&#xD;
     OfferComplexType s2 = new OfferComplexType();&#xD;
     OfferComplexType s3 = new OfferComplexType();&#xD;
     c.addOffer(new ServiceKey(&quot;1&quot;, &quot;1&quot;), s1);&#xD;
     c.addOffer(new ServiceKey(&quot;2&quot;, &quot;2&quot;), s2);&#xD;
     c.addOffer(new ServiceKey(&quot;3&quot;, &quot;3&quot;), s3);&#xD;
&#xD;
     c.createServiceItemOfferRefs();&#xD;
&#xD;
     verifyIds(&quot;OfferComplexType.getId()&quot;, s1.getId(), s2.getId(), s3.getId());&#xD;
     assertTrue(&quot;getOfferRef() for t1 should be null&quot;, t1.getOfferRef()==null);&#xD;
     assertTrue(&quot;getOfferRef() for t2 should be s2&quot;, t2.getOfferRef()==s2);&#xD;
     assertTrue(&quot;getOfferRef() for t3 should be s3&quot;, t3.getOfferRef()==s3);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE79rTEeWv0eZvzLc0yA" name="testContactRefs" specification="_xPR9YdrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     assertTrue(&quot;c.getContracts() should return an empty collection&quot;,&#xD;
                c.getContracts().isEmpty());&#xD;
     // contracts with different contacts&#xD;
     ContractComplexType t1 = new ContractComplexType();&#xD;
     t1.setSvcAgreementID(&quot;1&quot;);&#xD;
     t1.setPortfolioFlag(&quot;G&quot;);&#xD;
     t1.setHWShipToPersonID(&quot;PersonID1&quot;);&#xD;
     ContractComplexType t2 = new ContractComplexType();&#xD;
     t2.setSvcAgreementID(&quot;2&quot;);&#xD;
     t2.setPortfolioFlag(&quot;G&quot;);&#xD;
     t2.setSWShipToPersonID(&quot;PersonID2&quot;);&#xD;
     ContractComplexType t3 = new ContractComplexType();&#xD;
     t3.setSvcAgreementID(&quot;3&quot;);&#xD;
     t3.setPortfolioFlag(&quot;G&quot;);&#xD;
     t3.setSystemMgrPersonID(&quot;PersonID3&quot;);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t1&quot;), t1);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t2&quot;), t2);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t3&quot;), t3);&#xD;
&#xD;
     // OOOSes with different contacts&#xD;
     OOSComplexType t4 = new OOSComplexType();&#xD;
     t4.setOOSKey(&quot;1&quot;);&#xD;
     t4.setHWShipToPersonID(&quot;PersonID4&quot;);&#xD;
     OOSComplexType t5 = new OOSComplexType();&#xD;
     t5.setOOSKey(&quot;2&quot;);&#xD;
     t5.setSWShipToPersonID(&quot;PersonID5&quot;);&#xD;
     OOSComplexType t6 = new OOSComplexType();&#xD;
     t6.setOOSKey(&quot;3&quot;);&#xD;
     t6.setSystemMgrPersonID(&quot;PersonID6&quot;);&#xD;
     c.addOOS(new OOSKey(&quot;t4&quot;), t4);&#xD;
     c.addOOS(new OOSKey(&quot;t5&quot;), t5);&#xD;
     c.addOOS(new OOSKey(&quot;t6&quot;), t6);&#xD;
&#xD;
     // all contacts&#xD;
     ContactComplexType s1 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID1&quot;);&#xD;
     ContactComplexType s2 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID2&quot;);&#xD;
     ContactComplexType s3 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID3&quot;);&#xD;
     ContactComplexType s4 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID4&quot;);&#xD;
     ContactComplexType s5 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID5&quot;);&#xD;
     ContactComplexType s6 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;PersonID6&quot;);&#xD;
     ContactComplexType s7 = new ContactComplexType();&#xD;
     s1.setSourcePersonID(&quot;unknown&quot;);&#xD;
     c.addContact(new ContactKey(&quot;PersonID1&quot;), s1);&#xD;
     c.addContact(new ContactKey(&quot;PersonID2&quot;), s2);&#xD;
     c.addContact(new ContactKey(&quot;PersonID3&quot;), s3);&#xD;
     c.addContact(new ContactKey(&quot;PersonID4&quot;), s4);&#xD;
     c.addContact(new ContactKey(&quot;PersonID5&quot;), s5);&#xD;
     c.addContact(new ContactKey(&quot;PersonID6&quot;), s6);&#xD;
     c.addContact(new ContactKey(&quot;unknown&quot;), s7);&#xD;
&#xD;
     // don't remove unused contacts&#xD;
     c.createContactRefs(false, true, true);&#xD;
     Collection result = c.getContacts();&#xD;
     assertTrue(&quot;contact collection should have 7 elements&quot;, result.size()==7);&#xD;
     assertTrue(&quot;PersonID1 is not part of the result&quot;, result.contains(s1));&#xD;
     assertTrue(&quot;PersonID2 is not part of the result&quot;, result.contains(s2));&#xD;
     assertTrue(&quot;PersonID3 is not part of the result&quot;, result.contains(s3));&#xD;
     assertTrue(&quot;PersonID4 is not part of the result&quot;, result.contains(s4));&#xD;
     assertTrue(&quot;PersonID5 is not part of the result&quot;, result.contains(s5));&#xD;
     assertTrue(&quot;PersonID6 is not part of the result&quot;, result.contains(s6));&#xD;
     assertTrue(&quot;unknown is not part of the result&quot;, result.contains(s7));&#xD;
&#xD;
     // remove duplicates unused contacts&#xD;
     c.createContactRefs(true, true, true);&#xD;
     result = c.getContacts();&#xD;
     assertTrue(&quot;contact collection should have 6 elements&quot;, result.size()==6);&#xD;
     assertTrue(&quot;PersonID1 is not part of the result&quot;, result.contains(s1));&#xD;
     assertTrue(&quot;PersonID2 is not part of the result&quot;, result.contains(s2));&#xD;
     assertTrue(&quot;PersonID3 is not part of the result&quot;, result.contains(s3));&#xD;
     assertTrue(&quot;PersonID4 is not part of the result&quot;, result.contains(s4));&#xD;
     assertTrue(&quot;PersonID5 is not part of the result&quot;, result.contains(s5));&#xD;
     assertTrue(&quot;PersonID6 is not part of the result&quot;, result.contains(s6));&#xD;
&#xD;
     // check if the IDs are generated correctly&#xD;
     assertTrue(&quot;s1.getId() should not be null&quot;, s1.getId()!=null);&#xD;
     assertTrue(&quot;s2.getId() should not be null&quot;, s2.getId()!=null);&#xD;
     assertTrue(&quot;s3.getId() should not be null&quot;, s3.getId()!=null);&#xD;
     assertTrue(&quot;s4.getId() should not be null&quot;, s4.getId()!=null);&#xD;
     assertTrue(&quot;s5.getId() should not be null&quot;, s5.getId()!=null);&#xD;
     assertTrue(&quot;s6.getId() should not be null&quot;, s6.getId()!=null);&#xD;
     assertTrue(&quot;s7.getId() should not be null&quot;, s7.getId()!=null);&#xD;
     HashSet set = new HashSet();&#xD;
     set.add(s1.getId());&#xD;
     set.add(s2.getId());&#xD;
     set.add(s3.getId());&#xD;
     set.add(s4.getId());&#xD;
     set.add(s5.getId());&#xD;
     set.add(s6.getId());&#xD;
     set.add(s7.getId());&#xD;
     assertTrue(&quot;s1.getId() are not unique&quot;, set.size()==7);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE8NrTEeWv0eZvzLc0yA" name="testLocationRefs" specification="_xPR9YtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     assertTrue(&quot;c.getContracts() should return an empty collection&quot;,&#xD;
                c.getContracts().isEmpty());&#xD;
     // Contracts with different Locations&#xD;
     ContractComplexType t1 = new ContractComplexType();&#xD;
     t1.setSvcAgreementID(&quot;1&quot;);&#xD;
     t1.setPortfolioFlag(&quot;G&quot;);&#xD;
     t1.setProductShipToCustomerID(&quot;CustomerID1&quot;);&#xD;
     ContractComplexType t2 = new ContractComplexType();&#xD;
     t2.setSvcAgreementID(&quot;2&quot;);&#xD;
     t2.setPortfolioFlag(&quot;G&quot;);&#xD;
     t2.setSWShipToCustomerID(&quot;CustomerID2&quot;);&#xD;
     ContractComplexType t3 = new ContractComplexType();&#xD;
     t3.setSvcAgreementID(&quot;3&quot;);&#xD;
     t3.setPortfolioFlag(&quot;G&quot;);&#xD;
     t3.setSoldToCustomerID(&quot;CustomerID3&quot;);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t1&quot;), t1);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t2&quot;), t2);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;t3&quot;), t3);&#xD;
&#xD;
     // OOOSes with different Locations&#xD;
     OOSComplexType t4 = new OOSComplexType();&#xD;
     t4.setOOSKey(&quot;1&quot;);&#xD;
     t4.setProductShipToCustomerID(&quot;CustomerID4&quot;);&#xD;
     OOSComplexType t5 = new OOSComplexType();&#xD;
     t5.setOOSKey(&quot;2&quot;);&#xD;
     t5.setSWShipToCustomerID(&quot;CustomerID5&quot;);&#xD;
     OOSComplexType t6 = new OOSComplexType();&#xD;
     t6.setOOSKey(&quot;3&quot;);&#xD;
     t6.setProductShipToCustomerID(&quot;CustomerID6&quot;);&#xD;
     c.addOOS(new OOSKey(&quot;t4&quot;), t4);&#xD;
     c.addOOS(new OOSKey(&quot;t5&quot;), t5);&#xD;
     c.addOOS(new OOSKey(&quot;t6&quot;), t6);&#xD;
&#xD;
     // all Locations&#xD;
     LocationComplexType s1 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID1&quot;);&#xD;
     LocationComplexType s2 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID2&quot;);&#xD;
     LocationComplexType s3 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID3&quot;);&#xD;
     LocationComplexType s4 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID4&quot;);&#xD;
     LocationComplexType s5 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID5&quot;);&#xD;
     LocationComplexType s6 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;CustomerID6&quot;);&#xD;
     LocationComplexType s7 = new LocationComplexType();&#xD;
     s1.setSourceCustomerID(&quot;unknown&quot;);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID1&quot;), s1);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID2&quot;), s2);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID3&quot;), s3);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID4&quot;), s4);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID5&quot;), s5);&#xD;
     c.addLocation(new LocationKey(&quot;CustomerID6&quot;), s6);&#xD;
     c.addLocation(new LocationKey(&quot;unknown&quot;), s7);&#xD;
&#xD;
     // don't remove unused Locations&#xD;
     c.createLocationRefs(false, true, true);&#xD;
     Collection result = c.getLocations();&#xD;
     assertTrue(&quot;Location collection should have 7 elements&quot;, result.size()==7);&#xD;
     assertTrue(&quot;CustomerID1 is not part of the result&quot;, result.contains(s1));&#xD;
     assertTrue(&quot;CustomerID2 is not part of the result&quot;, result.contains(s2));&#xD;
     assertTrue(&quot;CustomerID3 is not part of the result&quot;, result.contains(s3));&#xD;
     assertTrue(&quot;CustomerID4 is not part of the result&quot;, result.contains(s4));&#xD;
     assertTrue(&quot;CustomerID5 is not part of the result&quot;, result.contains(s5));&#xD;
     assertTrue(&quot;CustomerID6 is not part of the result&quot;, result.contains(s6));&#xD;
     assertTrue(&quot;unknown is not part of the result&quot;, result.contains(s7));&#xD;
&#xD;
     // remove duplicates unused Locations&#xD;
     c.createLocationRefs(true, true, true);&#xD;
     result = c.getLocations();&#xD;
     assertTrue(&quot;Location collection should have 6 elements&quot;, result.size()==6);&#xD;
     assertTrue(&quot;CustomerID1 is not part of the result&quot;, result.contains(s1));&#xD;
     assertTrue(&quot;CustomerID2 is not part of the result&quot;, result.contains(s2));&#xD;
     assertTrue(&quot;CustomerID3 is not part of the result&quot;, result.contains(s3));&#xD;
     assertTrue(&quot;CustomerID4 is not part of the result&quot;, result.contains(s4));&#xD;
     assertTrue(&quot;CustomerID5 is not part of the result&quot;, result.contains(s5));&#xD;
     assertTrue(&quot;CustomerID6 is not part of the result&quot;, result.contains(s6));&#xD;
&#xD;
     // check if the IDs are generated correctly&#xD;
     assertTrue(&quot;s1.getId() should not be null&quot;, s1.getId()!=null);&#xD;
     assertTrue(&quot;s2.getId() should not be null&quot;, s2.getId()!=null);&#xD;
     assertTrue(&quot;s3.getId() should not be null&quot;, s3.getId()!=null);&#xD;
     assertTrue(&quot;s4.getId() should not be null&quot;, s4.getId()!=null);&#xD;
     assertTrue(&quot;s5.getId() should not be null&quot;, s5.getId()!=null);&#xD;
     assertTrue(&quot;s6.getId() should not be null&quot;, s6.getId()!=null);&#xD;
     assertTrue(&quot;s7.getId() should not be null&quot;, s7.getId()!=null);&#xD;
     HashSet set = new HashSet();&#xD;
     set.add(s1.getId());&#xD;
     set.add(s2.getId());&#xD;
     set.add(s3.getId());&#xD;
     set.add(s4.getId());&#xD;
     set.add(s5.getId());&#xD;
     set.add(s6.getId());&#xD;
     set.add(s7.getId());&#xD;
     assertTrue(&quot;s1.getId() are not unique&quot;, set.size()==7);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE8drTEeWv0eZvzLc0yA" name="testGetContract" specification="_xPR9Y9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>EsReplyContext c = new EsReplyContext(new OutputDetails());&#xD;
     // make sure the method can be called when no objects are available&#xD;
     assertTrue(&quot;c.getContracts() is not empty&quot;, c.getContracts().size()==0);&#xD;
&#xD;
     // make sure that non-identical objects are merged correctly&#xD;
     ContractComplexType c1 = new ContractComplexType();&#xD;
     c1.setSvcAgreementID(&quot;SvcAgreementID1&quot;);&#xD;
     c1.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType c2 = new ContractComplexType();&#xD;
     c2.setSvcAgreementID(&quot;SvcAgreementID2&quot;);&#xD;
     c2.setPortfolioFlag(&quot;G&quot;);&#xD;
     ContractComplexType c3 = new ContractComplexType();&#xD;
     c3.setSvcAgreementID(&quot;SvcAgreementID2&quot;);  // same key as c2&#xD;
     c3.setPortfolioFlag(&quot;G&quot;);&#xD;
&#xD;
     c.addContract(new ObligationHeaderKey(&quot;1&quot;), c1);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;2&quot;), c2);&#xD;
     c.addContract(new ObligationHeaderKey(&quot;3&quot;), c3);&#xD;
&#xD;
     Collection result = c.getContracts();&#xD;
     assertTrue(&quot;The result collection must not be null&quot;, result!=null);&#xD;
     assertTrue(&quot;The size result collection must be 2&quot;, result.size()==2);&#xD;
&#xD;
     Iterator it = result.iterator();&#xD;
     ContractComplexType res1 = (ContractComplexType)it.next();&#xD;
     ContractComplexType res2 = (ContractComplexType)it.next();&#xD;
     assertTrue(&quot;The c.getContracts() method returned two identical objects&quot;,&#xD;
                res1!=res2);&#xD;
&#xD;
     // make sure that &quot;c1 and (c2 or c3)&quot; are returned&#xD;
     assertTrue(&quot;c1 is not part of the result&quot;, (res1==c1 || res2==c1));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE8trTEeWv0eZvzLc0yA" name="testUniqueOffersAndDeliverables" specification="_xPR9ZNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>OutputDetails details = new OutputDetails();&#xD;
     details.setIncludeContracts(true);&#xD;
     details.setIncludeOffers(true);&#xD;
     details.setIncludeUniqueOffers(true);&#xD;
     details.setIncludeUniqueDeliverables(true);&#xD;
     EsReplyContext c = new EsReplyContext(details);&#xD;
&#xD;
     ServiceKey key1 = new ServiceKey(&quot;1&quot;, &quot;1&quot;);&#xD;
     ServiceKey key2 = new ServiceKey(&quot;1&quot;, &quot;2&quot;);&#xD;
     ServiceKey key3 = new ServiceKey(&quot;1&quot;, &quot;3&quot;);&#xD;
     ContractComplexType contract = new ContractComplexType();&#xD;
     c.addContract((ObligationHeaderKey)key1.getParent(), contract);&#xD;
&#xD;
     OfferComplexType o1 = new OfferComplexType();&#xD;
     o1.setOfferCode(&quot;code1&quot;);&#xD;
     {&#xD;
         Deliverable d1 = new Deliverable();&#xD;
         d1.setDelivCode(&quot;d1&quot;);&#xD;
         o1.addDeliverable(d1);&#xD;
         Deliverable d2 = new Deliverable();&#xD;
         d2.setDelivCode(&quot;d2&quot;);&#xD;
         o1.addDeliverable(d2);&#xD;
     }&#xD;
     c.addOffer(key1, o1);&#xD;
     OfferComplexType o2 = new OfferComplexType();&#xD;
     o2.setOfferCode(&quot;code1&quot;);&#xD;
     {&#xD;
         Deliverable d1 = new Deliverable();&#xD;
         d1.setDelivCode(&quot;d1&quot;);&#xD;
         o1.addDeliverable(d1);&#xD;
         Deliverable d2 = new Deliverable();&#xD;
         d2.setDelivCode(&quot;d3&quot;);&#xD;
         o1.addDeliverable(d2);&#xD;
     }&#xD;
     c.addOffer(key2, o2);&#xD;
     OfferComplexType o3 = new OfferComplexType();&#xD;
     o3.setOfferCode(&quot;code2&quot;);&#xD;
     c.addOffer(key3, o3);&#xD;
&#xD;
     c.mergeAndCalculateAll();&#xD;
     ContractComplexType contract2 =&#xD;
                 (ContractComplexType)c.getContracts().iterator().next();&#xD;
     assertTrue(&quot;Contracts are not identical&quot;, contract==contract2);&#xD;
&#xD;
     Enumeration enumeration = contract2.enumerateUniqueOffer();&#xD;
     UniqueOffer offer1 = null;&#xD;
     UniqueOffer offer2 = null;&#xD;
     if (enumeration.hasMoreElements()) {&#xD;
         offer1 = (UniqueOffer)enumeration.nextElement();&#xD;
     }&#xD;
     if (enumeration.hasMoreElements()) {&#xD;
         offer2 = (UniqueOffer)enumeration.nextElement();&#xD;
     }&#xD;
&#xD;
     assertTrue(&quot;two unique offers expected&quot;, (offer1!=null &amp;&amp; offer2!=null));&#xD;
     assertTrue(&quot;there are more unique offeres than expected&quot;, !enumeration.hasMoreElements());&#xD;
     assertTrue(&quot;unexcpected offer codes&quot;,&#xD;
                 (offer1.getOfferCode().equals(&quot;code1&quot;) &amp;&amp; offer2.getOfferCode().equals(&quot;code2&quot;)) ||&#xD;
                 (offer1.getOfferCode().equals(&quot;code2&quot;) &amp;&amp; offer2.getOfferCode().equals(&quot;code1&quot;))&#xD;
                 );&#xD;
&#xD;
     // test unique deliverables&#xD;
     if (offer1.getOfferCode().equals(&quot;code1&quot;)) {&#xD;
         enumeration = offer1.enumerateUniqueDeliverable();&#xD;
     }&#xD;
     else {&#xD;
         enumeration = offer2.enumerateUniqueDeliverable();&#xD;
     }&#xD;
&#xD;
     HashSet result = new HashSet();&#xD;
     result.add(&quot;d1&quot;);&#xD;
     result.add(&quot;d2&quot;);&#xD;
     result.add(&quot;d3&quot;);&#xD;
     while (enumeration.hasMoreElements()) {&#xD;
         UniqueDeliverable ud = (UniqueDeliverable)enumeration.nextElement();&#xD;
         if ( !result.remove(ud.getDelivCode())) {&#xD;
             fail(&quot;missing deliverable code '&quot; + ud.getDelivCode() +&#xD;
                  &quot;'for unique deliverable&quot; );&#xD;
         }&#xD;
     }&#xD;
     // finally, the result-set must be empty&#xD;
     assertTrue(&quot;Following deliverable codes are missing: &quot; +result.toString(),&#xD;
                 result.size()==0);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE89rTEeWv0eZvzLc0yA" name="testAggregatedValues" specification="_xPR9ZdrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>try {&#xD;
         OutputDetails details = new OutputDetails();&#xD;
         details.setIncludeContracts(true);&#xD;
&#xD;
         org.exolab.castor.types.Date date1 = new org.exolab.castor.types.Date(&quot;2002-01-01&quot;);&#xD;
         org.exolab.castor.types.Date date2 = new org.exolab.castor.types.Date(&quot;2002-02-02&quot;);&#xD;
         org.exolab.castor.types.Date date3 = new org.exolab.castor.types.Date(&quot;2002-03-03&quot;);&#xD;
         org.exolab.castor.types.Date date4 = new org.exolab.castor.types.Date(&quot;2002-04-04&quot;);&#xD;
&#xD;
         ContractComplexType c = new ContractComplexType();&#xD;
         c.setSvcAgreementID(&quot;1&quot;);&#xD;
         c.setPortfolioFlag(&quot;G&quot;);&#xD;
&#xD;
         ObligationHeader oh1 = new ObligationHeader();&#xD;
         oh1.setHeaderStartDate(date1);&#xD;
         oh1.setHeaderEndDate(date2);&#xD;
         oh1.setCCRN(&quot;ccrn&quot;);&#xD;
         oh1.setActiveObligation(true);&#xD;
&#xD;
         ObligationHeader oh2 = new ObligationHeader();&#xD;
         oh2.setHeaderStartDate(date3);&#xD;
         oh2.setHeaderEndDate(date4);&#xD;
         oh2.setCCRN(&quot;ccrn&quot;);&#xD;
         oh2.setActiveObligation(false);&#xD;
&#xD;
         EsReplyContext ctx = new EsReplyContext(details);&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;1&quot;), c);&#xD;
         ctx.addObligationHeader(new ObligationHeaderKey(&quot;1&quot;), oh1);&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;2&quot;), c);    // same contract&#xD;
         ctx.addObligationHeader(new ObligationHeaderKey(&quot;2&quot;), oh2);&#xD;
         ctx.mergeAndCalculateAll();&#xD;
&#xD;
         Collection coll = ctx.getContracts();&#xD;
         assertTrue(&quot;Only one contract should be returned&quot;, coll.size()==1);&#xD;
         assertTrue(&quot;getOverallContractStartDate() is wrong&quot;,&#xD;
                     ctx.getOverallContractStartDate().compareTo(date1)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;getOverallContractEndDate() is wrong&quot;,&#xD;
                     ctx.getOverallContractEndDate().compareTo(date4)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;getHeaderStartDate() is wrong&quot;,&#xD;
                     c.getHeaderStartDate().compareTo(date1)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;getHeaderEndDate() is wrong&quot;,&#xD;
                     c.getHeaderEndDate().compareTo(date4)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;CCRN must be 'ccrn'&quot;, c.getCCRN().equals(&quot;ccrn&quot;));&#xD;
         assertTrue(&quot;Contract should be active if one OH is active&quot;,&#xD;
                     c.getActiveContractEntitlement());&#xD;
         assertTrue(&quot;ctx.isActiveContractEntitlement() should return true&quot; +&#xD;
                    &quot; if one contract is active&quot;,&#xD;
                     ctx.isActiveContractEntitlement());&#xD;
&#xD;
         // verify what happens if one header end date is null and if the CCRN&#xD;
         // string is not unique&#xD;
         c.setCCRN(null);&#xD;
         oh1.setHeaderEndDate(null);&#xD;
         oh1.setCCRN(&quot;blabla&quot;);&#xD;
         ctx.mergeAndCalculateAll();&#xD;
         assertTrue(&quot;Only one contract should be returned&quot;, coll.size()==1);&#xD;
         assertTrue(&quot;getOverallContractStartDate() is wrong&quot;,&#xD;
                     ctx.getOverallContractStartDate().compareTo(date1)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;getOverallContractEndDate() must be null&quot;,&#xD;
                     ctx.getOverallContractEndDate()==null);&#xD;
         assertTrue(&quot;getHeaderStartDate() is wrong&quot;,&#xD;
                     c.getHeaderStartDate().compareTo(date1)&#xD;
                     ==org.exolab.castor.types.DateTimeBase.EQUALS);&#xD;
         assertTrue(&quot;getHeaderEndDate() must be null&quot;,&#xD;
                     c.getHeaderEndDate()==null);&#xD;
         assertTrue(&quot;CCRN must be null&quot;, c.getCCRN()==null);&#xD;
     }&#xD;
     catch (java.text.ParseException e) {&#xD;
         fail(e.toString());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE9NrTEeWv0eZvzLc0yA" name="testThatNewestContractIsUsed" specification="_xPR9ZtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>ContractComplexType c1 = new ContractComplexType();&#xD;
         c1.setSvcAgreementID(&quot;1&quot;);&#xD;
         c1.setPortfolioFlag(&quot;G&quot;);&#xD;
         c1.setCdoPublishDate(&quot;01-01-2002T08:41:35:023Z&quot;);&#xD;
&#xD;
         ContractComplexType c2 = new ContractComplexType();&#xD;
         c2.setSvcAgreementID(&quot;1&quot;);&#xD;
         c2.setPortfolioFlag(&quot;G&quot;);&#xD;
         c2.setCdoPublishDate(&quot;01-01-2002T08:41:35:024Z&quot;);&#xD;
&#xD;
         EsReplyContext ctx = new EsReplyContext(new OutputDetails());&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;1&quot;), c1);&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;1&quot;), c2);&#xD;
         assertTrue(&quot;only one contract must be available&quot;, ctx.getContracts().size()==1);&#xD;
         assertTrue(&quot;The newest contract was not used&quot;,&#xD;
                     ((ContractComplexType)ctx.getContracts().iterator().next())==c2);&#xD;
         // try it again with different insert order&#xD;
         ctx = new EsReplyContext(new OutputDetails());&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;1&quot;), c2);&#xD;
         ctx.addContract(new ObligationHeaderKey(&quot;1&quot;), c1);&#xD;
         assertTrue(&quot;only one contract must be available&quot;, ctx.getContracts().size()==1);&#xD;
         assertTrue(&quot;The newest contract was not used&quot;,&#xD;
                     ((ContractComplexType)ctx.getContracts().iterator().next())==c2);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE9drTEeWv0eZvzLc0yA" name="verifyCounts" specification="_xPR9Z9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE9trTEeWv0eZvzLc0yA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE99rTEeWv0eZvzLc0yA" name="cnt0">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE-NrTEeWv0eZvzLc0yA" name="cnt1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE-drTEeWv0eZvzLc0yA" name="cnt2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>assertTrue(method + &quot; returned unexpected value (cnt0 should be 0)&quot;, cnt0==0);&#xD;
     assertTrue(method + &quot; returned unexpected value (cnt1 should be 1)&quot;, cnt1==1);&#xD;
     assertTrue(method + &quot; returned unexpected value (cnt2 should be 2)&quot;, cnt2==2);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE-trTEeWv0eZvzLc0yA" name="verifyIds" specification="_xPR9bNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtE-9rTEeWv0eZvzLc0yA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE_NrTEeWv0eZvzLc0yA" name="id0">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE_drTEeWv0eZvzLc0yA" name="id1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtE_trTEeWv0eZvzLc0yA" name="id2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>assertTrue(method + &quot; returned unexpected value (id0 shouldn't be null)&quot;, id0!=null);&#xD;
     assertTrue(method + &quot; returned unexpected value (id1 shouldn't be null)&quot;, id1!=null);&#xD;
     assertTrue(method + &quot; returned unexpected value (id2 shouldn't be null)&quot;, id2!=null);&#xD;
     assertTrue(method + &quot; returned the same ID for different objects&quot;,&#xD;
                 (! id0.equals(id1)) &amp;&amp; (! id0.equals(id2)) &amp;&amp; (! id1.equals(id2)));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtE_9rTEeWv0eZvzLc0yA" name="verifyContainment" specification="_xXIR4trTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFANrTEeWv0eZvzLc0yA" name="enumeration" type="_xVCAGdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFAdrTEeWv0eZvzLc0yA" name="o1" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFAtrTEeWv0eZvzLc0yA" name="o2" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>if (enumeration==null) {&#xD;
         fail(&quot;&lt;castorObject>.enumerateXXX() should not be null&quot;);&#xD;
     }&#xD;
     else {&#xD;
         Object x1 = null;&#xD;
         Object x2 = null;&#xD;
         if (enumeration.hasMoreElements()) {&#xD;
             x1 = enumeration.nextElement();&#xD;
         }&#xD;
         if (enumeration.hasMoreElements()) {&#xD;
             x2 = enumeration.nextElement();&#xD;
         }&#xD;
&#xD;
         if (o1!=null &amp;&amp; o1!=x1 &amp;&amp; o1!=x2) {&#xD;
             fail(&quot;First object o1 is not in the enumeration.&quot;);&#xD;
         }&#xD;
         if (o2!=null &amp;&amp; o2!=x1 &amp;&amp; o2!=x2) {&#xD;
             fail(&quot;First object o2 is not in the enumeration.&quot;);&#xD;
         }&#xD;
         if (x1!=null &amp;&amp; x1==x2) {&#xD;
             fail(&quot;The enumeration contained identical objects&quot;);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xPL2wdrTEeWv0eZvzLc0yA" name="EsReplyContextTest" method="_xZtE3trTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xPL2w9rTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xPL2xNrTEeWv0eZvzLc0yA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_xPL2wtrTEeWv0eZvzLc0yA" name="inName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPL2xdrTEeWv0eZvzLc0yA" type="_xPL2wNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xPL2xtrTEeWv0eZvzLc0yA" name="suite" isStatic="true" method="_xZtE4drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR4drTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xPL2x9rTEeWv0eZvzLc0yA" name="main" isStatic="true" method="_xZtE49rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xPL2yNrTEeWv0eZvzLc0yA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xPL2ydrTEeWv0eZvzLc0yA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPL2ytrTEeWv0eZvzLc0yA" name="testMergeDelivModifierToDeliverable" method="_xZtE5trTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL2y9rTEeWv0eZvzLc0yA" name="testMergeAppliesToToOffer" method="_xZtE59rTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL2zNrTEeWv0eZvzLc0yA" name="testMergeDeliverableToOffer" method="_xZtE6NrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL2zdrTEeWv0eZvzLc0yA" name="testMergeModifierToOffer" method="_xZtE6drTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL2ztrTEeWv0eZvzLc0yA" name="testMergeOfferToContract" method="_xZtE6trTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL2z9rTEeWv0eZvzLc0yA" name="testMergeObligationHeaderToContract" method="_xZtE69rTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL20NrTEeWv0eZvzLc0yA" name="testMergeServiceItemToObligationHeader" method="_xZtE7NrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPL20drTEeWv0eZvzLc0yA" name="testCreateAppliesToOOSRefs" method="_xZtE7drTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9YNrTEeWv0eZvzLc0yA" name="testCreateServiceItemOfferRefs" method="_xZtE7trTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9YdrTEeWv0eZvzLc0yA" name="testContactRefs" method="_xZtE79rTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9YtrTEeWv0eZvzLc0yA" name="testLocationRefs" method="_xZtE8NrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9Y9rTEeWv0eZvzLc0yA" name="testGetContract" method="_xZtE8drTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9ZNrTEeWv0eZvzLc0yA" name="testUniqueOffersAndDeliverables" method="_xZtE8trTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9ZdrTEeWv0eZvzLc0yA" name="testAggregatedValues" method="_xZtE89rTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9ZtrTEeWv0eZvzLc0yA" name="testThatNewestContractIsUsed" method="_xZtE9NrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPR9Z9rTEeWv0eZvzLc0yA" name="verifyCounts" visibility="private" method="_xZtE9drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xPR9aNrTEeWv0eZvzLc0yA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9adrTEeWv0eZvzLc0yA" name="cnt0">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9atrTEeWv0eZvzLc0yA" name="cnt1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9a9rTEeWv0eZvzLc0yA" name="cnt2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xPR9bNrTEeWv0eZvzLc0yA" name="verifyIds" visibility="private" method="_xZtE-trTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xPR9bdrTEeWv0eZvzLc0yA" name="method">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9btrTEeWv0eZvzLc0yA" name="id0">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9b9rTEeWv0eZvzLc0yA" name="id1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPR9cNrTEeWv0eZvzLc0yA" name="id2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR4trTEeWv0eZvzLc0yA" name="verifyContainment" visibility="private" method="_xZtE_9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR49rTEeWv0eZvzLc0yA" name="enumeration" type="_xVCAGdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR5NrTEeWv0eZvzLc0yA" name="o1" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR5drTEeWv0eZvzLc0yA" name="o2" type="_xXCLMtrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPR9cdrTEeWv0eZvzLc0yA" name="GetAssociatedContractsOperation">
                <ownedComment xmi:id="_xaXzSNrTEeWv0eZvzLc0yA">
                  <body>Handle the AssociatedContractsRequests</body>
                </ownedComment>
                <generalization xmi:id="_xXIR99rTEeWv0eZvzLc0yA" general="_xVUT8NrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFA9rTEeWv0eZvzLc0yA" name="execute" specification="_xXIR59rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFBNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFBdrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFBtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFB9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>AssociatedContractsRequest acr = request.getEsRequestComplexTypeChoice()&#xD;
                                             .getAssociatedContractsRequest();&#xD;
     DbContractEntitlementManager dbContractEntitlementManager =DbContractEntitlementManager.getNewInstance();&#xD;
     EsReplyContext ctx =null;&#xD;
     try {&#xD;
         OutputDetails details = new OutputDetails(acr);&#xD;
         ctx = new EsReplyContext(details);&#xD;
         &#xD;
         // call the database&#xD;
         int errorId = dbContractEntitlementManager.getAssociatedContracts(&#xD;
                             ctx,&#xD;
                             acr.getAssociatedContractIdentifier(),&#xD;
                             acr.getAssociatedContractIdentifierType(),&#xD;
                             getContactSearchString(acr),&#xD;
                             acr.getIsoCountryCd(),&#xD;
                             acr.getActiveContractsOnly(),&#xD;
                             acr.getChunkSize(),&#xD;
                             acr.getChunkPosition(),&#xD;
                             metricsHandler);&#xD;
&#xD;
         // check for errors returned from the database&#xD;
         // Note: This operation ignores the NO DATA FOUND (300)&#xD;
         if (errorId!=0 &amp;&amp; errorId!=300) {&#xD;
             // map errorId to SifException&#xD;
             // this probably needs to be enhanced to provide more details&#xD;
             throw ErrorFactory.getSifException(errorId);&#xD;
         }&#xD;
&#xD;
         // merge objects, create ID/IDREFs, calculate overall start/end dates&#xD;
         ctx.mergeAndCalculateAll();&#xD;
&#xD;
         AssociatedContractsComplexType result = new AssociatedContractsComplexType();&#xD;
&#xD;
         result.setContract( (ContractComplexType[])ctx.getContracts().toArray(new ContractComplexType[0]) );&#xD;
         result.setActualChunkSize(ctx.getCurrentChunkSize());&#xD;
         result.setChunkPosition(acr.getChunkPosition());&#xD;
         result.setChunkSize(acr.getChunkSize());&#xD;
         result.setTotalResultSize(ctx.getTotalResultSize());&#xD;
&#xD;
         EsHeader esHeader = new EsHeader();&#xD;
         esHeader.setInputRequest(request);&#xD;
         // transaction ID is set in service handler class&#xD;
&#xD;
         EsReplyChoice esReplyChoice = new EsReplyChoice();&#xD;
         esReplyChoice.setAssociatedContracts(result);&#xD;
&#xD;
         EsReply esReply = new EsReply();&#xD;
         esReply.setEsHeader(esHeader);&#xD;
         esReply.setEsReplyChoice(esReplyChoice);&#xD;
&#xD;
         return esReply;&#xD;
     } catch (DataAccessException e) {&#xD;
         ESLog.info(&quot;Caught a DataAccessException.&quot;);&#xD;
         return generateEsReplyWithWarning(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unknow database exception while processing AssociatedContractsRequest.&quot;,request);           &#xD;
&#xD;
     } catch (DatabaseDownException e) {&#xD;
         ESLog.info(&quot;Caught a DatabaseDownException.&quot;);&#xD;
         return generateEsReplyWithWarning(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE,&quot;ODS&quot;,request);           &#xD;
     }finally {&#xD;
     	dbContractEntitlementManager.destroy();&#xD;
     	/*if(ctx != null) &#xD;
     		ctx.destroy();*/&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFCNrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" specification="_xXIR7NrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFCdrTEeWv0eZvzLc0yA" name="errorId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFCtrTEeWv0eZvzLc0yA" name="errorText">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFC9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFDNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>ESLog.debug(&quot;Enter createEsReplyWithWarning()&quot;);&#xD;
     EIAError eiaError = ErrorFactory.getEIAError(errorId, errorText);&#xD;
     &#xD;
     Warnings warnings = new Warnings();&#xD;
     warnings.addEIAError(eiaError);&#xD;
     &#xD;
     EsReply esReply = new EsReply();&#xD;
     EsHeader esHeader=new EsHeader();&#xD;
     esHeader.setInputRequest(request);        &#xD;
     esReply.setEsHeader(esHeader);&#xD;
     esReply.getEsHeader().setWarnings(warnings);&#xD;
     &#xD;
     ESLog.debug(&quot;Exit createEsReplyWithWarning()&quot;);&#xD;
     return esReply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFDdrTEeWv0eZvzLc0yA" name="init" specification="_xPR9ctrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>// just to make sure that the database is initialized when the&#xD;
     // first request comes in&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFDtrTEeWv0eZvzLc0yA" name="verifyRequest" specification="_xXIR8drTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFD9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFENrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>AssociatedContractsRequest cr = request.getEsRequestComplexTypeChoice().getAssociatedContractsRequest();&#xD;
     if (cr==null) {&#xD;
         throw ErrorFactory.getSifException(ErrorFactory.id120_INVALID_REQUEST,&#xD;
             &quot;The GetAssociatedContracts operation requires an &quot; +&#xD;
             &quot;AssociatedContractsRequest request.&quot;);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFEdrTEeWv0eZvzLc0yA" name="getContactSearchString" specification="_xXIR9NrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFEtrTEeWv0eZvzLc0yA" name="acr" type="_xVUT9trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFE9rTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer personIds = new StringBuffer();&#xD;
     for (int i = 0; i &lt; acr.getPersonIDCount(); i++) {&#xD;
         if (i != 0) {&#xD;
             personIds.append(';');&#xD;
         }&#xD;
         personIds.append(acr.getPersonID(i));&#xD;
     }&#xD;
     return personIds.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xPR9ctrTEeWv0eZvzLc0yA" name="init" visibility="protected" method="_xZtFDdrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xXIR59rTEeWv0eZvzLc0yA" name="execute" visibility="protected" method="_xZtFA9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR6NrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR6drTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR6trTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR69rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR7NrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" visibility="private" method="_xZtFCNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR7drTEeWv0eZvzLc0yA" name="errorId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXIR7trTEeWv0eZvzLc0yA" name="errorText">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXIR79rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR8NrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR8drTEeWv0eZvzLc0yA" name="verifyRequest" visibility="protected" method="_xZtFDtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR8trTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR89rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXIR9NrTEeWv0eZvzLc0yA" name="getContactSearchString" visibility="private" method="_xZtFEdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR9drTEeWv0eZvzLc0yA" name="acr" type="_xVUT9trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR9trTEeWv0eZvzLc0yA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPR9c9rTEeWv0eZvzLc0yA" name="GetContractEntitlementOperation">
                <ownedComment xmi:id="_xaXzSdrTEeWv0eZvzLc0yA">
                  <body>@author gary_w_smith</body>
                </ownedComment>
                <generalization xmi:id="_xXOYddrTEeWv0eZvzLc0yA" general="_xVUT8NrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFFNrTEeWv0eZvzLc0yA" name="verifyRequest" specification="_xXIR-NrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFFdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFFtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>ContractRequest cr = request.getEsRequestComplexTypeChoice()&#xD;
				.getContractRequest();&#xD;
		if (cr == null) {&#xD;
			throw ErrorFactory.getSifException(&#xD;
					ErrorFactory.id120_INVALID_REQUEST,&#xD;
					&quot;The GetContractEntitlement operation requires an &quot;&#xD;
							+ &quot;ContractRequest request.&quot;);&#xD;
		}&#xD;
&#xD;
		checkMandatoryParameter(&#xD;
				cr.getContractIdentifier(),&#xD;
				&quot;ContractIdentifier&quot;,&#xD;
				&quot;The parameter ContractIdentifier is missing in GetContractEntitlementOperation&quot;);&#xD;
&#xD;
		EsCheckDateRange.verifyDate(cr.getEntitlementCheckDate());&#xD;
		if( (cr.getProductID()!=null) &amp;&amp; (cr.getProductID().trim().length()!=0)){&#xD;
			int maximum=Configuration.getInstance().getProperties().getIntegerProperty(EsConstants.ES_PN_MAXLENGTH,20);&#xD;
			ProductNumberValidator.verifyProductNumberGreaterThan(cr.getProductID(), maximum);&#xD;
		}&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFF9rTEeWv0eZvzLc0yA" name="execute" specification="_xXOYcNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFGNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFGdrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFGtrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFG9rTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>EsReply reply = null;&#xD;
		ESLog.debug(&quot;Enter&quot;);&#xD;
&#xD;
		ESLog.debug(&quot;Sending request to orchestration&quot;);&#xD;
		reply = ContractOrchestration.getInstance().execute(request, context, metricsHandler);&#xD;
&#xD;
		ESLog.debug(&quot;End&quot;);&#xD;
		return reply;&#xD;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFHNrTEeWv0eZvzLc0yA" name="init" specification="_xPYEANrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>ContractOrchestration.getInstance();&#xD;
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xPYEANrTEeWv0eZvzLc0yA" name="init" visibility="protected" method="_xZtFHNrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xXIR-NrTEeWv0eZvzLc0yA" name="verifyRequest" visibility="protected" method="_xZtFFNrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXIR-drTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXIR-trTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYcNrTEeWv0eZvzLc0yA" name="execute" visibility="protected" method="_xZtFF9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYcdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYctrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYc9rTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYdNrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPYEAdrTEeWv0eZvzLc0yA" name="GetPrintAdvantageEntitlementOperation">
                <ownedComment xmi:id="_xaXzStrTEeWv0eZvzLc0yA">
                  <body>Handle the GetPrintAdvantageEntitlement request&#xD;
@author Thorsten Koevi</body>
                </ownedComment>
                <generalization xmi:id="_xXOYh9rTEeWv0eZvzLc0yA" general="_xVUT8NrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFHdrTEeWv0eZvzLc0yA" name="execute" specification="_xXOYdtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFHtrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFH9rTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFINrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFIdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>PrintAdvantageRequest paRequest = request.getEsRequestComplexTypeChoice().getPrintAdvantageRequest();&#xD;
     OutputDetails outputDetails = new OutputDetails(paRequest);&#xD;
     EsReplyContext replyContext = new EsReplyContext(outputDetails);&#xD;
     DbContractEntitlementManager dbContractEntitlementManager =DbContractEntitlementManager.getNewInstance();&#xD;
     try {&#xD;
         int errorID = dbContractEntitlementManager.getPrintAdvantageEntitlement(&#xD;
                     replyContext,&#xD;
                     paRequest.getContractIdentifier(),&#xD;
                     paRequest.getContractIdentifierType(),&#xD;
                     paRequest.getIsoCountryCd(),&#xD;
                     outputDetails,&#xD;
                     metricsHandler);&#xD;
&#xD;
         // check for errors returned from the database&#xD;
         if (errorID!=0) {&#xD;
             // map errorId to SifException&#xD;
             // this probably needs to be enhanced to provide more details&#xD;
            throw ErrorFactory.getSifException(errorID);&#xD;
         }&#xD;
&#xD;
         // merge objects, create ID/IDREFs, calculate overall start/end dates&#xD;
         replyContext.mergeAndCalculateAll();&#xD;
&#xD;
         return generateReply(replyContext, request);&#xD;
&#xD;
     }&#xD;
     catch (DataAccessException e) {&#xD;
         ESLog.info(&quot;Caught a DataAccessException while processing PrintAdvantageRequest.&quot;);&#xD;
         return generateEsReplyWithWarning(ErrorFactory.id9999_INTERNAL_ERROR,&quot;Unknow database exception while processing PrintAdvantageRequest.&quot;,request);           &#xD;
         &#xD;
     } catch (DatabaseDownException e) {&#xD;
         ESLog.info(&quot;Caught a DatabaseDownException while processing PrintAdvantageRequest.&quot;);&#xD;
         return generateEsReplyWithWarning(ErrorFactory.id434_SYSTEMS_NOT_AVAILABLE,&quot;ODS&quot;,request);           &#xD;
     }finally {&#xD;
     	dbContractEntitlementManager.destroy();&#xD;
     	/*if(replyContext != null) &#xD;
     		replyContext.destroy();*/&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFItrTEeWv0eZvzLc0yA" name="init" specification="_xPYEAtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>// just to make sure that the database is initialized when the&#xD;
     // first request comes in&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFI9rTEeWv0eZvzLc0yA" name="verifyRequest" specification="_xXOYe9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFJNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFJdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>PrintAdvantageRequest paRequest = request.getEsRequestComplexTypeChoice().getPrintAdvantageRequest();&#xD;
 if(paRequest == null) {&#xD;
     throw ErrorFactory.getSifException(ErrorFactory.id120_INVALID_REQUEST,&#xD;
             &quot;The GetPrintAdvantageEntitlement operation requires a &quot; +&#xD;
             &quot;PrintAdvantage request.&quot;);&#xD;
 }&#xD;
 else if (!paRequest.getContractIdentifier().startsWith(&quot;PA&quot;)) {&#xD;
     throw ErrorFactory.getSifException(ErrorFactory.id201_PARAMETER_HAS_INVALID_DATA,&#xD;
             &quot;ContractIdentifier&quot;, &quot;The ContractIdentifier has to start with PA &quot; +&#xD;
             &quot;for the PrintAdvantageEntitlement operation.&quot;);&#xD;
 }&#xD;
 else if (!paRequest.getContractIdentifierType().equals(ContractIdentifierTypeType.FUNCTIONALLOCATION)) {&#xD;
     throw ErrorFactory.getSifException(ErrorFactory.id201_PARAMETER_HAS_INVALID_DATA,&#xD;
             &quot;ContractIdentifierType&quot;, &quot;The ContractIdentifierType has to be set to &quot;+&#xD;
             &quot;FunctionalLocation for the PrintAdvantageEntitlement operation.&quot;);&#xD;
 }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFJtrTEeWv0eZvzLc0yA" name="generateReply" specification="_xXOYftrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFJ9rTEeWv0eZvzLc0yA" name="replyContext" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFKNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFKdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>PrintAdvantageEntitlementComplexType result = new PrintAdvantageEntitlementComplexType();&#xD;
&#xD;
     for (Iterator it = replyContext.getContracts().iterator(); it.hasNext();) {&#xD;
         ContractComplexType contract = (ContractComplexType)it.next();&#xD;
         result.addContract(contract);&#xD;
&#xD;
         // Remove all ServiceItems for the obligation headers because the offers are&#xD;
         // merged together. The items wouldn't be meaningful anymore.&#xD;
         for (Enumeration enumOhdr=contract.enumerateObligationHeader(); enumOhdr.hasMoreElements(); ) {&#xD;
             ObligationHeader ohdr = (ObligationHeader)enumOhdr.nextElement();&#xD;
             ohdr.removeAllServiceItem();&#xD;
         }&#xD;
&#xD;
         // First merge all offers with the same offer code together&#xD;
         TreeMap tmpMap = new TreeMap();&#xD;
         for (Enumeration enumOffer=contract.enumerateOffer(); enumOffer.hasMoreElements(); ) {&#xD;
             OfferComplexType nextOffer = (OfferComplexType)enumOffer.nextElement();&#xD;
&#xD;
             // For PrintAdvantage contracts, each offer should have exactly one&#xD;
             // AppliesTo with one OOS.&#xD;
             if (nextOffer.getAppliesToCount()>1) {&#xD;
                 ESLog.info(&quot;PrintAdvantage contracts shouldn't have more than one &quot; +&#xD;
                             &quot;AppliesTos, but the offer &quot; + nextOffer.getOfferCode() +&#xD;
                             &quot; has &quot; + nextOffer.getAppliesToCount() + &quot; AppliesTo.&quot;);&#xD;
             }&#xD;
&#xD;
             if (nextOffer.getAppliesToCount()>0) {&#xD;
                 // create a new deliverable (always use the first applies-to)&#xD;
                 AppliesTo appliesTo = nextOffer.getAppliesTo(0);&#xD;
                 OOSComplexType oos  = (OOSComplexType)appliesTo.getOOSRef();&#xD;
                 if (oos!=null &amp;&amp; oos.getProduct()!=null ) {&#xD;
                     Deliverable deliv = new Deliverable();&#xD;
                     deliv.setDelivCode(oos.getProduct().getProductID());&#xD;
                     deliv.setDelivName(oos.getProduct().getProductDescription());&#xD;
                     deliv.setAvailableQuantity(nextOffer.getAvailableQuantity());&#xD;
                     deliv.setDeliverableQuantity(nextOffer.getServiceQuantity());&#xD;
                     nextOffer.addDeliverable(deliv);&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // check if we already have an offer for the same&#xD;
             // offer code/service product type&#xD;
             String key = nextOffer.getOfferCode()==null ? &quot;&quot; : nextOffer.getOfferCode();&#xD;
             if (nextOffer.getSvcProductType()!=null) {&#xD;
                 if (nextOffer.getSvcProductType().equals(&quot;PS&quot;)) {&#xD;
                     // this is just to have the PS offers sorted at the top in the&#xD;
                     // xml reply&#xD;
                     key = key + &quot; &quot;;&#xD;
                 }&#xD;
                 else {&#xD;
                     key = key + &quot;#&quot; + nextOffer.getSvcProductType();&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             OfferComplexType prevOffer = (OfferComplexType)tmpMap.get(key);&#xD;
             if (prevOffer == null) {&#xD;
                 // Remove AvailableQuantity and ServiceQuantity from Offer&#xD;
                 nextOffer.deleteAvailableQuantity();&#xD;
                 nextOffer.deleteServiceQuantity();&#xD;
                 // Remove the AppliesTo as it is not needed in the reply of this operation&#xD;
                 nextOffer.removeAllAppliesTo();&#xD;
                 // setIncidentBasedOffer flag to true for all non-PS services&#xD;
                 if (nextOffer.getSvcProductType() != null&#xD;
                     &amp;&amp; !nextOffer.getSvcProductType().equals(&quot;PS&quot;)) {&#xD;
                     nextOffer.setIncidentBasedOffer(true);&#xD;
                 }&#xD;
&#xD;
                 tmpMap.put(key, nextOffer);&#xD;
             }&#xD;
             else {&#xD;
                 if (nextOffer.getDeliverableCount() > 0) {&#xD;
                     // there is only one deliverable&#xD;
                     prevOffer.addDeliverable(nextOffer.getDeliverable(0));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Now overwrite with the new merged offers.&#xD;
         contract.setOffer( (OfferComplexType[])tmpMap.values().toArray(new OfferComplexType[0]) );&#xD;
&#xD;
&#xD;
         // Iterate over all unique offers and merge the deliverables with the same&#xD;
         // productID and calculate the quantities.&#xD;
         for (Enumeration enumOffer=contract.enumerateOffer(); enumOffer.hasMoreElements(); ) {&#xD;
&#xD;
             tmpMap.clear();&#xD;
             OfferComplexType nextOffer = (OfferComplexType)enumOffer.nextElement();&#xD;
&#xD;
             for (Enumeration enumDeliv=nextOffer.enumerateDeliverable(); enumDeliv.hasMoreElements(); ) {&#xD;
                 Deliverable nextDeliv = (Deliverable)enumDeliv.nextElement();&#xD;
&#xD;
                 // Check if there is already a deliverable with the same deliverable code.&#xD;
                 String key = nextDeliv.getDelivCode()==null ? &quot;&quot; : nextDeliv.getDelivCode();&#xD;
                 Deliverable prevDeliv = (Deliverable)tmpMap.get(key);&#xD;
                 if (prevDeliv==null) {&#xD;
                      tmpMap.put(key, nextDeliv);&#xD;
                 }&#xD;
                 // else sum up the availableQuantity and serviceQuantity&#xD;
                 else {&#xD;
                     prevDeliv.setAvailableQuantity(&#xD;
                                 prevDeliv.getAvailableQuantity() +&#xD;
                                 nextDeliv.getAvailableQuantity());&#xD;
                     prevDeliv.setDeliverableQuantity(&#xD;
                                 prevDeliv.getDeliverableQuantity() +&#xD;
                                 nextDeliv.getDeliverableQuantity());&#xD;
                 }&#xD;
             }&#xD;
             nextOffer.setDeliverable((Deliverable[])tmpMap.values().toArray(new Deliverable[0]) );&#xD;
         }&#xD;
     }&#xD;
&#xD;
     EsReply esReply = new EsReply();&#xD;
     EsReplyChoice esReplyChoice = new EsReplyChoice();&#xD;
     esReply.setEsReplyChoice(esReplyChoice);&#xD;
     esReplyChoice.setPrintAdvantageEntitlement(result);&#xD;
&#xD;
     EsHeader esHeader = new EsHeader();&#xD;
     esHeader.setInputRequest(request);&#xD;
     // transaction ID is set in service handler class&#xD;
&#xD;
     esReply.setEsHeader(esHeader);&#xD;
&#xD;
     return esReply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFKtrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" specification="_xXOYgtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFK9rTEeWv0eZvzLc0yA" name="errorId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFLNrTEeWv0eZvzLc0yA" name="errorText">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFLdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFLtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>ESLog.debug(&quot;Enter generateEsReplyWithWarning()&quot;);&#xD;
     EIAError eiaError = ErrorFactory.getEIAError(errorId, errorText);&#xD;
     &#xD;
     Warnings warnings = new Warnings();&#xD;
     warnings.addEIAError(eiaError);&#xD;
     &#xD;
     EsReply esReply = new EsReply();&#xD;
     EsHeader esHeader=new EsHeader();&#xD;
     esReply.setEsHeader(esHeader);&#xD;
     esReply.getEsHeader().setWarnings(warnings);&#xD;
     esReply.getEsHeader().setInputRequest(request);&#xD;
     ESLog.debug(&quot;Exit createEsReplyWithWarning()&quot;);&#xD;
     return esReply;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xPYEAtrTEeWv0eZvzLc0yA" name="init" visibility="protected" method="_xZtFItrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xXOYdtrTEeWv0eZvzLc0yA" name="execute" visibility="protected" method="_xZtFHdrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYd9rTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYeNrTEeWv0eZvzLc0yA" name="context" type="_xVUT8trTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYedrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYetrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYe9rTEeWv0eZvzLc0yA" name="verifyRequest" visibility="protected" method="_xZtFI9rTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYfNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYfdrTEeWv0eZvzLc0yA" name="metricsHandler" type="_xVUUCNrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYftrTEeWv0eZvzLc0yA" name="generateReply" visibility="protected" method="_xZtFJtrTEeWv0eZvzLc0yA" raisedException="_xU75etrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYf9rTEeWv0eZvzLc0yA" name="replyContext" type="_xO5jAdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYgNrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYgdrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYgtrTEeWv0eZvzLc0yA" name="generateEsReplyWithWarning" visibility="private" method="_xZtFKtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYg9rTEeWv0eZvzLc0yA" name="errorId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYhNrTEeWv0eZvzLc0yA" name="errorText">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYhdrTEeWv0eZvzLc0yA" name="request" type="_xVUUANrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYhtrTEeWv0eZvzLc0yA" type="_xVUT_NrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPYEA9rTEeWv0eZvzLc0yA" name="GetPrintAdvantageEntitlementOperationTest">
                <ownedComment xmi:id="_xaXzS9rTEeWv0eZvzLc0yA">
                  <body>Test if the correct reply is generated (merging offers with the same offerCode;&#xD;
merging deliverables with the same deliverable code; calculate quantities)</body>
                </ownedComment>
                <generalization xmi:id="_xXOYl9rTEeWv0eZvzLc0yA" general="_xVCAEdrTEeWv0eZvzLc0yA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFL9rTEeWv0eZvzLc0yA" name="GetPrintAdvantageEntitlementOperationTest" specification="_xPYEBNrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFMNrTEeWv0eZvzLc0yA" name="inTest">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFMdrTEeWv0eZvzLc0yA" type="_xPYEA9rTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>super(inTest);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFMtrTEeWv0eZvzLc0yA" name="suite" specification="_xPYECdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFM9rTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                  <language>java</language>
                  <body>// discover test*() methods via reflection:&#xD;
     return new TestSuite(GetPrintAdvantageEntitlementOperationTest.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFNNrTEeWv0eZvzLc0yA" name="testMultipleOffersSameProduct" specification="_xPYECtrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>OutputDetails outputDetails = new OutputDetails(new PrintAdvantageRequest());&#xD;
     EsReplyContext context = new EsReplyContext(outputDetails);&#xD;
     &#xD;
     ContractComplexType contract = new ContractComplexType();&#xD;
     ObligationHeaderKey ohKey = new ObligationHeaderKey(&quot;sourceObligationID&quot;);        &#xD;
     &#xD;
     OfferComplexType offer1 = new OfferComplexType();&#xD;
     OfferComplexType offer2 = new OfferComplexType();&#xD;
     OfferComplexType offer3 = new OfferComplexType();&#xD;
     OfferComplexType offer4 = new OfferComplexType();&#xD;
     OfferComplexType offer5 = new OfferComplexType();&#xD;
     OOSComplexType oos1 = new OOSComplexType();&#xD;
     OOSComplexType oos2 = new OOSComplexType();&#xD;
     OOSComplexType oos3 = new OOSComplexType();&#xD;
     OOSComplexType oos4 = new OOSComplexType();&#xD;
     OOSComplexType oos5 = new OOSComplexType();&#xD;
     AppliesTo appliesTo1 = new AppliesTo();&#xD;
     AppliesTo appliesTo2 = new AppliesTo();&#xD;
     AppliesTo appliesTo3 = new AppliesTo();&#xD;
     AppliesTo appliesTo4 = new AppliesTo();&#xD;
     AppliesTo appliesTo5 = new AppliesTo();&#xD;
     ProductComplexType product1 = new ProductComplexType();&#xD;
     ProductComplexType product2 = new ProductComplexType();&#xD;
     ProductComplexType product3 = new ProductComplexType();&#xD;
     ProductComplexType product4 = new ProductComplexType();&#xD;
     ProductComplexType product5 = new ProductComplexType();&#xD;
     &#xD;
     oos1.setProduct(product1);&#xD;
     oos2.setProduct(product2);&#xD;
     oos3.setProduct(product3);&#xD;
     oos4.setProduct(product4);&#xD;
     oos5.setProduct(product5);&#xD;
     appliesTo1.setOOSRef(oos1);&#xD;
     appliesTo2.setOOSRef(oos2);&#xD;
     appliesTo3.setOOSRef(oos3);&#xD;
     appliesTo4.setOOSRef(oos4);&#xD;
     appliesTo5.setOOSRef(oos5);&#xD;
     offer1.addAppliesTo(appliesTo1);&#xD;
     offer2.addAppliesTo(appliesTo2);&#xD;
     offer3.addAppliesTo(appliesTo3);&#xD;
     offer4.addAppliesTo(appliesTo4);&#xD;
     offer5.addAppliesTo(appliesTo5);&#xD;
     // reverse order in order to test sortation&#xD;
     contract.addOffer(offer5);&#xD;
     contract.addOffer(offer4);&#xD;
     contract.addOffer(offer3);&#xD;
     contract.addOffer(offer2);&#xD;
     contract.addOffer(offer1);&#xD;
     &#xD;
     context.addContract(ohKey,contract);&#xD;
&#xD;
     // fill data&#xD;
     {&#xD;
         // offer1 and offer2 needs to be merged together&#xD;
         // products with productID1 needs to be merged and the quantities &#xD;
         // needs to be added&#xD;
         offer1.setOfferCode(&quot;offerCode1&quot;);&#xD;
         offer1.setAvailableQuantity(5);&#xD;
         offer1.setServiceQuantity(10);&#xD;
         product1.setProductID(&quot;productID1&quot;);&#xD;
         product1.setProductDescription(&quot;productDescription1&quot;);&#xD;
 &#xD;
         offer2.setOfferCode(&quot;offerCode1&quot;);&#xD;
         offer2.setAvailableQuantity(3);&#xD;
         offer2.setServiceQuantity(6);&#xD;
         product2.setProductID(&quot;productID1&quot;);&#xD;
         product2.setProductDescription(&quot;productDescription1&quot;);&#xD;
     }&#xD;
&#xD;
     {&#xD;
         offer3.setOfferCode(&quot;offerCode2&quot;);&#xD;
         offer3.setAvailableQuantity(1);&#xD;
         offer3.setServiceQuantity(20);&#xD;
         product3.setProductID(&quot;productID2&quot;);&#xD;
         product3.setProductDescription(&quot;productDescription2&quot;);  &#xD;
     }        &#xD;
     &#xD;
     {&#xD;
         // offer4 and offer4 needs to be merged together&#xD;
         // products are not merged&#xD;
         offer4.setOfferCode(&quot;offerCode4&quot;);&#xD;
         offer4.setAvailableQuantity(5);&#xD;
         offer4.setServiceQuantity(10);&#xD;
         product4.setProductID(&quot;productID4&quot;);&#xD;
         product4.setProductDescription(&quot;productDescription4&quot;);&#xD;
 &#xD;
         offer5.setOfferCode(&quot;offerCode4&quot;);&#xD;
         offer5.setAvailableQuantity(3);&#xD;
         offer5.setServiceQuantity(6);&#xD;
         product5.setProductID(&quot;productID1&quot;);&#xD;
         product5.setProductDescription(&quot;productDescription1&quot;);&#xD;
     }        &#xD;
     &#xD;
     GetPrintAdvantageEntitlementOperation operation = new GetPrintAdvantageEntitlementOperation();&#xD;
     EsReply reply = null;&#xD;
     try {&#xD;
         reply = operation.generateReply(context, new EsRequestComplexType());&#xD;
     } catch(SifException eiaEx) {&#xD;
         fail(eiaEx.toString());&#xD;
     }&#xD;
     checkMultipleOffersSameProduct(reply);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFNdrTEeWv0eZvzLc0yA" name="checkMultipleOffersSameProduct" specification="_xXOYidrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFNtrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>ContractComplexType contract =&#xD;
         reply&#xD;
             .getEsReplyChoice()&#xD;
             .getPrintAdvantageEntitlement()&#xD;
             .getContract(&#xD;
             0);&#xD;
     OfferComplexType[] offers = contract.getOffer();&#xD;
     &#xD;
     if(offers.length != 3) {&#xD;
         fail(&quot;There have to be 3 offers.&quot;);&#xD;
     }&#xD;
     &#xD;
     // ---------------------------------------------&#xD;
     check(offers[0], &quot;offerCode1&quot;, offers[0].getDeliverable(0), 1, &quot;productID1&quot;, 8, 16);&#xD;
     &#xD;
     // ---------------------------------------------&#xD;
     check(offers[1], &quot;offerCode2&quot;, offers[1].getDeliverable(0), 1, &quot;productID2&quot;, 1, 20);&#xD;
 &#xD;
     // ---------------------------------------------&#xD;
     check(offers[2], &quot;offerCode4&quot;, offers[2].getDeliverable(0), 2, &quot;productID1&quot;, 3, 6);&#xD;
     check(offers[2], &quot;offerCode4&quot;, offers[2].getDeliverable(1), 2, &quot;productID4&quot;, 5, 10);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFN9rTEeWv0eZvzLc0yA" name="testProductNullValues" specification="_xPYEC9rTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>OutputDetails outputDetails = new OutputDetails(new PrintAdvantageRequest());&#xD;
     EsReplyContext context = new EsReplyContext(outputDetails);&#xD;
     &#xD;
     ContractComplexType contract = new ContractComplexType();&#xD;
     ObligationHeaderKey ohKey = new ObligationHeaderKey(&quot;sourceObligationID&quot;);        &#xD;
     &#xD;
     OfferComplexType offer1 = new OfferComplexType();&#xD;
     OfferComplexType offer2 = new OfferComplexType();&#xD;
     OOSComplexType oos1 = new OOSComplexType();&#xD;
     OOSComplexType oos2 = new OOSComplexType();&#xD;
     AppliesTo appliesTo1 = new AppliesTo();&#xD;
     AppliesTo appliesTo2 = new AppliesTo();&#xD;
     ProductComplexType product1 = new ProductComplexType();&#xD;
     ProductComplexType product2 = new ProductComplexType();&#xD;
     &#xD;
     oos1.setProduct(product1);&#xD;
     oos2.setProduct(product2);&#xD;
     appliesTo1.setOOSRef(oos1);&#xD;
     appliesTo2.setOOSRef(oos2);&#xD;
     offer1.addAppliesTo(appliesTo1);&#xD;
     offer2.addAppliesTo(appliesTo2);&#xD;
     // reverse order in order to test sortation&#xD;
     contract.addOffer(offer2);&#xD;
     contract.addOffer(offer1);&#xD;
     &#xD;
     context.addContract(ohKey,contract);&#xD;
&#xD;
     // fill data&#xD;
     {&#xD;
         // offer1 and offer2 needs to be merged together&#xD;
         // products with productID1 needs to be merged and the quantities &#xD;
         // needs to be added&#xD;
         offer1.setOfferCode(&quot;offerCode1&quot;);&#xD;
         offer1.setAvailableQuantity(5);&#xD;
         offer1.setServiceQuantity(10);&#xD;
         product1.setProductID(null);&#xD;
         product1.setProductDescription(&quot;productDescription1&quot;);&#xD;
 &#xD;
         offer2.setOfferCode(&quot;offerCode1&quot;);&#xD;
         offer2.setAvailableQuantity(3);&#xD;
         offer2.setServiceQuantity(6);&#xD;
         product2.setProductID(null);&#xD;
         product2.setProductDescription(&quot;productDescription1&quot;);&#xD;
     }&#xD;
    &#xD;
     GetPrintAdvantageEntitlementOperation operation = new GetPrintAdvantageEntitlementOperation();&#xD;
     EsReply reply = null;&#xD;
     try {&#xD;
         reply = operation.generateReply(context, new EsRequestComplexType());&#xD;
     } catch(SifException eiaEx) {&#xD;
         fail(eiaEx.toString());&#xD;
     }&#xD;
     checkProductNullValues(reply);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFONrTEeWv0eZvzLc0yA" name="checkProductNullValues" specification="_xXOYi9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFOdrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>ContractComplexType contract =&#xD;
         reply&#xD;
             .getEsReplyChoice()&#xD;
             .getPrintAdvantageEntitlement()&#xD;
             .getContract(&#xD;
             0);&#xD;
     OfferComplexType[] offers = contract.getOffer();&#xD;
     &#xD;
     if(offers.length != 1) {&#xD;
         fail(&quot;There have to be 1 offer.&quot;);&#xD;
     }&#xD;
     &#xD;
     // ---------------------------------------------&#xD;
     check(offers[0], &quot;offerCode1&quot;, offers[0].getDeliverable(0), 1, null, 8, 16);&#xD;
     &#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFOtrTEeWv0eZvzLc0yA" name="testMultipleContracts" specification="_xPYEDNrTEeWv0eZvzLc0yA">
                  <language>java</language>
                  <body>OutputDetails outputDetails = new OutputDetails(new PrintAdvantageRequest());&#xD;
     EsReplyContext context = new EsReplyContext(outputDetails);&#xD;
&#xD;
     ContractComplexType contract1 = new ContractComplexType();&#xD;
     ContractComplexType contract2 = new ContractComplexType();&#xD;
     &#xD;
     ObligationHeaderKey ohKey1 = new ObligationHeaderKey(&quot;obligationHeaderKey1&quot;);&#xD;
     ObligationHeaderKey ohKey2 = new ObligationHeaderKey(&quot;obligationHeaderKey2&quot;);&#xD;
     OfferComplexType offer1 = new OfferComplexType();&#xD;
     OfferComplexType offer2 = new OfferComplexType();&#xD;
     AppliesTo appliesTo1 = new AppliesTo();&#xD;
     AppliesTo appliesTo2 = new AppliesTo();&#xD;
     OOSComplexType oos1 = new OOSComplexType();&#xD;
     OOSComplexType oos2 = new OOSComplexType();&#xD;
     ProductComplexType product1 = new ProductComplexType();&#xD;
     ProductComplexType product2 = new ProductComplexType();&#xD;
     &#xD;
     contract1.setPortfolioFlag(&quot;G&quot;);&#xD;
     contract2.setPortfolioFlag(&quot;G&quot;);&#xD;
     contract1.setSvcAgreementID(&quot;scvAgrID1&quot;);&#xD;
     contract2.setSvcAgreementID(&quot;scvAgrID2&quot;);&#xD;
     &#xD;
     oos1.setProduct(product1);&#xD;
     oos2.setProduct(product2);&#xD;
     appliesTo1.setOOSRef(oos1);&#xD;
     appliesTo2.setOOSRef(oos2);&#xD;
     offer1.addAppliesTo(appliesTo1);&#xD;
     offer2.addAppliesTo(appliesTo2);&#xD;
     contract1.addOffer(offer1);&#xD;
     contract2.addOffer(offer2);&#xD;
             &#xD;
     offer1.setOfferCode(&quot;offerCode1&quot;);&#xD;
     offer2.setOfferCode(&quot;offerCode2&quot;);&#xD;
     offer1.setAvailableQuantity(5);&#xD;
     offer2.setAvailableQuantity(2);&#xD;
     offer1.setServiceQuantity(10);&#xD;
     offer2.setServiceQuantity(8);&#xD;
     &#xD;
     product1.setProductID(&quot;productID1&quot;);&#xD;
     product2.setProductID(&quot;productID2&quot;);&#xD;
     product1.setProductDescription(&quot;productDescription1&quot;);&#xD;
     product2.setProductDescription(&quot;productDescription2&quot;);&#xD;
&#xD;
     context.addContract(ohKey1, contract1);&#xD;
     context.addContract(ohKey2, contract2);&#xD;
     &#xD;
     GetPrintAdvantageEntitlementOperation operation = new GetPrintAdvantageEntitlementOperation();&#xD;
     EsReply reply = null;&#xD;
     try {&#xD;
         reply = operation.generateReply(context, new EsRequestComplexType());&#xD;
     } catch(SifException eiaEx) {&#xD;
         fail(eiaEx.toString());&#xD;
     }&#xD;
     checkMultipleContracts(reply);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFO9rTEeWv0eZvzLc0yA" name="checkMultipleContracts" specification="_xXOYjdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFPNrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                  <language>java</language>
                  <body>ContractComplexType[] contracts =&#xD;
         reply&#xD;
             .getEsReplyChoice()&#xD;
             .getPrintAdvantageEntitlement()&#xD;
             .getContract();&#xD;
     if(contracts.length != 2) {&#xD;
         fail(&quot;Multiple contracts are not handeled correctly! There have to be 2 contracts in this reply but there are &quot;+&#xD;
             contracts.length+&quot;.&quot;);&#xD;
     }&#xD;
     if(contracts[0].getOfferCount() > 1) {&#xD;
         fail(&quot;There should be only one offer in contract1 but there are &quot;+ contracts[0].getOfferCount() + &quot;.&quot;);&#xD;
     }&#xD;
     &#xD;
     if(contracts[1].getOfferCount() > 1) {&#xD;
         fail(&quot;There should be only one offer in contract2 but there are &quot;+ contracts[1].getOfferCount() + &quot;.&quot;);&#xD;
     }&#xD;
&#xD;
&#xD;
     check(contracts[0].getOffer(0), &quot;offerCode1&quot;, contracts[0].getOffer(0).getDeliverable(0), 1, &quot;productID1&quot;, 5, 10);&#xD;
     check(contracts[1].getOffer(0), &quot;offerCode2&quot;, contracts[1].getOffer(0).getDeliverable(0), 1, &quot;productID2&quot;, 2, 8);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xZtFPdrTEeWv0eZvzLc0yA" name="check" specification="_xXOYj9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xZtFPtrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFP9rTEeWv0eZvzLc0yA" name="expectedOfferCode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFQNrTEeWv0eZvzLc0yA" name="d" type="_xVCAMdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xZtFQdrTEeWv0eZvzLc0yA" name="expectedDelivCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFQtrTEeWv0eZvzLc0yA" name="expectedDelivCode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFQ9rTEeWv0eZvzLc0yA" name="expectedAvQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xZtFRNrTEeWv0eZvzLc0yA" name="expectedDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!offer.getOfferCode().equals(expectedOfferCode)) {&#xD;
         fail(&quot;offer should have offerCode=&quot; + expectedOfferCode);&#xD;
     }&#xD;
     &#xD;
     if (offer.getDeliverableCount() != expectedDelivCount) {&#xD;
         fail(&#xD;
             &quot;DeliverableCount of offer (offerCode=&quot;&#xD;
                 + expectedOfferCode&#xD;
                 + &quot;) wrong (expected= &quot;&#xD;
                 + expectedDelivCount&#xD;
                 + &quot; current=&quot;&#xD;
                 + offer.getDeliverableCount());&#xD;
     }&#xD;
     &#xD;
     if ((d.getDelivCode() == null &amp;&amp; expectedDelivCode != null)&#xD;
         || (d.getDelivCode() != null&#xD;
             &amp;&amp; !d.getDelivCode().equals(expectedDelivCode))) {&#xD;
         fail(&#xD;
             &quot;delivCode doesn't match for offerCode=&quot;&#xD;
                 + expectedOfferCode&#xD;
                 + &quot; (expected=&quot;&#xD;
                 + expectedDelivCode&#xD;
                 + &quot; current=&quot;&#xD;
                 + d.getDelivCode()&#xD;
                 + &quot;)&quot;);&#xD;
     }&#xD;
     if (d.getAvailableQuantity() != expectedAvQ) {&#xD;
         fail(&#xD;
             &quot;Available quantity for offerCode=&quot;&#xD;
                 + expectedOfferCode&#xD;
                 + &quot;  should be &quot;&#xD;
                 + expectedAvQ&#xD;
                 + &quot; but is &quot;&#xD;
                 + d.getAvailableQuantity()&#xD;
                 + &quot;.&quot;);&#xD;
     }&#xD;
     if (d.getDeliverableQuantity() != expectedDQ) {&#xD;
         fail(&#xD;
             &quot;Deliverable quantity for offerCode=&quot;&#xD;
                 + expectedOfferCode&#xD;
                 + &quot; should be &quot;&#xD;
                 + expectedDQ&#xD;
                 + &quot; but is &quot;&#xD;
                 + d.getDeliverableQuantity()&#xD;
                 + &quot;.&quot;);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_xPYEBNrTEeWv0eZvzLc0yA" name="GetPrintAdvantageEntitlementOperationTest" method="_xZtFL9rTEeWv0eZvzLc0yA">
                  <eAnnotations xmi:id="_xPYEBtrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xPYEB9rTEeWv0eZvzLc0yA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_xPYEBdrTEeWv0eZvzLc0yA" name="inTest">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xPYECNrTEeWv0eZvzLc0yA" type="_xPYEA9rTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xPYECdrTEeWv0eZvzLc0yA" name="suite" isStatic="true" method="_xZtFMtrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYiNrTEeWv0eZvzLc0yA" type="_xU75ftrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xPYECtrTEeWv0eZvzLc0yA" name="testMultipleOffersSameProduct" method="_xZtFNNrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPYEC9rTEeWv0eZvzLc0yA" name="testProductNullValues" method="_xZtFN9rTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xPYEDNrTEeWv0eZvzLc0yA" name="testMultipleContracts" method="_xZtFOtrTEeWv0eZvzLc0yA"/>
                <ownedOperation xmi:id="_xXOYidrTEeWv0eZvzLc0yA" name="checkMultipleOffersSameProduct" visibility="private" method="_xZtFNdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYitrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYi9rTEeWv0eZvzLc0yA" name="checkProductNullValues" visibility="private" method="_xZtFONrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYjNrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYjdrTEeWv0eZvzLc0yA" name="checkMultipleContracts" visibility="private" method="_xZtFO9rTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYjtrTEeWv0eZvzLc0yA" name="reply" type="_xVUT_NrTEeWv0eZvzLc0yA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_xXOYj9rTEeWv0eZvzLc0yA" name="check" visibility="private" method="_xZtFPdrTEeWv0eZvzLc0yA">
                  <ownedParameter xmi:id="_xXOYkNrTEeWv0eZvzLc0yA" name="offer" type="_xVCAO9rTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYkdrTEeWv0eZvzLc0yA" name="expectedOfferCode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYktrTEeWv0eZvzLc0yA" name="d" type="_xVCAMdrTEeWv0eZvzLc0yA"/>
                  <ownedParameter xmi:id="_xXOYk9rTEeWv0eZvzLc0yA" name="expectedDelivCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYlNrTEeWv0eZvzLc0yA" name="expectedDelivCode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYldrTEeWv0eZvzLc0yA" name="expectedAvQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_xXOYltrTEeWv0eZvzLc0yA" name="expectedDQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xPeKoNrTEeWv0eZvzLc0yA" name="ObligHeaderLocation">
                <ownedComment xmi:id="_xaXzTNrTEeWv0eZvzLc0yA">
                  <body>@author yesilyur&#xD;
 *</body>
                </ownedComment>
                <ownedAttribute xmi:id="_xY8PxdrTEeWv0eZvzLc0yA" name="sourceObligationId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8PxtrTEeWv0eZvzLc0yA" name="sourceCustomerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_xY8Px9rTEeWv0eZvzLc0yA" name="obligHeaderRole">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedOperation xmi:id="_xPeKodrTEeWv0eZvzLc0yA" name="ObligHeaderLocation">
                  <eAnnotations xmi:id="_xPeKotrTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_xPeKo9rTEeWv0eZvzLc0yA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_xPeKpdrTEeWv0eZvzLc0yA" type="_xPeKoNrTEeWv0eZvzLc0yA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xXCLMtrTEeWv0eZvzLc0yA" name="Object"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_xakAUNrTEeWv0eZvzLc0yA" name="" memberEnd="_xakAUdrTEeWv0eZvzLc0yA _xY2JHtrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xakAUdrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xakAUNrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xakAU9rTEeWv0eZvzLc0yA" name="" memberEnd="_xakAVNrTEeWv0eZvzLc0yA _xY2JIdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xakAVNrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xakAU9rTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xakAVtrTEeWv0eZvzLc0yA" name="" memberEnd="_xakAV9rTEeWv0eZvzLc0yA _xY2JJNrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xakAV9rTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xakAVtrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqG8drTEeWv0eZvzLc0yA" name="" memberEnd="_xaqG8trTEeWv0eZvzLc0yA _xY2JJ9rTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqG8trTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqG8drTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqG9NrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqG9drTEeWv0eZvzLc0yA _xY2JKtrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqG9drTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqG9NrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqG99rTEeWv0eZvzLc0yA" name="" memberEnd="_xaqG-NrTEeWv0eZvzLc0yA _xY2JLdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqG-NrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqG99rTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqG-trTEeWv0eZvzLc0yA" name="" memberEnd="_xaqG-9rTEeWv0eZvzLc0yA _xY2JMNrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqG-9rTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqG-trTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqG_drTEeWv0eZvzLc0yA" name="" memberEnd="_xaqG_trTEeWv0eZvzLc0yA _xY2JM9rTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqG_trTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqG_drTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHANrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHAdrTEeWv0eZvzLc0yA _xY2JNtrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHAdrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHANrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHA9rTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHBNrTEeWv0eZvzLc0yA _xY2JOdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHBNrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHA9rTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHBtrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHB9rTEeWv0eZvzLc0yA _xY2JPNrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHB9rTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHBtrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHCdrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHCtrTEeWv0eZvzLc0yA _xY2JP9rTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHCtrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHCdrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHDNrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHDdrTEeWv0eZvzLc0yA _xY2JQtrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHDdrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHDNrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHD9rTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHENrTEeWv0eZvzLc0yA _xY2JRdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHENrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHD9rTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHEtrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHE9rTEeWv0eZvzLc0yA _xY8PstrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHE9rTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHEtrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHFdrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHFtrTEeWv0eZvzLc0yA _xY8PtdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHFtrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHFdrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHGNrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHGdrTEeWv0eZvzLc0yA _xY8PuNrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHGdrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHGNrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHG9rTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHHNrTEeWv0eZvzLc0yA _xY8PudrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHHNrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHG9rTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHHtrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHH9rTEeWv0eZvzLc0yA _xY8PwdrTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHH9rTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHHtrTEeWv0eZvzLc0yA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_xaqHIdrTEeWv0eZvzLc0yA" name="" memberEnd="_xaqHItrTEeWv0eZvzLc0yA _xY8Pw9rTEeWv0eZvzLc0yA">
                <ownedEnd xmi:id="_xaqHItrTEeWv0eZvzLc0yA" name="" type="_xO5jAdrTEeWv0eZvzLc0yA" association="_xaqHIdrTEeWv0eZvzLc0yA"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xMnD4NrTEeWv0eZvzLc0yA" name="operations">
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT8NrTEeWv0eZvzLc0yA" name="EsOperation"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT8trTEeWv0eZvzLc0yA" name="OperationContext"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xMzRItrTEeWv0eZvzLc0yA" name="db">
              <packagedElement xmi:type="uml:Class" xmi:id="_xVghOtrTEeWv0eZvzLc0yA" name="DbConnectionManager"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xM_eYtrTEeWv0eZvzLc0yA" name="orchestration">
              <packagedElement xmi:type="uml:Class" xmi:id="_xVy1EtrTEeWv0eZvzLc0yA" name="ErrorTransaction"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_xM_eZdrTEeWv0eZvzLc0yA" name="sap">
                <packagedElement xmi:type="uml:Class" xmi:id="_xVy1ItrTEeWv0eZvzLc0yA" name="Region"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xVy1JNrTEeWv0eZvzLc0yA" name="RegionConfiguration"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xVy1JtrTEeWv0eZvzLc0yA" name="RegionFactory"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xWpwt9rTEeWv0eZvzLc0yA" name="SapSOAPReply"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVy1FNrTEeWv0eZvzLc0yA" name="Transaction"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWjqEdrTEeWv0eZvzLc0yA" name="ErrorsProcessing"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWjqHNrTEeWv0eZvzLc0yA" name="OrchestrationWorker"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWjqHtrTEeWv0eZvzLc0yA" name="SourceSystemsOrchestration"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWv3UtrTEeWv0eZvzLc0yA" name="TransactionComposition"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xNwTYNrTEeWv0eZvzLc0yA" name="contractSummary">
              <packagedElement xmi:type="uml:Package" xmi:id="_xNwTYdrTEeWv0eZvzLc0yA" name="integration">
                <packagedElement xmi:type="uml:Package" xmi:id="_xNwTYtrTEeWv0eZvzLc0yA" name="mapping">
                  <packagedElement xmi:type="uml:Class" xmi:id="_xWjqFtrTEeWv0eZvzLc0yA" name="CSWorkingMapper"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_xNwTY9rTEeWv0eZvzLc0yA" name="customerIndicator">
              <packagedElement xmi:type="uml:Class" xmi:id="_xWjqGNrTEeWv0eZvzLc0yA" name="ODSCustomerIndicatorIntegration"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWjqGtrTEeWv0eZvzLc0yA" name="ODSGetCustomerIndicatorIntegration"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_xVy1GtrTEeWv0eZvzLc0yA" name="RequestCleaner"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_xV47sNrTEeWv0eZvzLc0yA" name="IntegrationInterface"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_xMUwCNrTEeWv0eZvzLc0yA" name="constants">
            <packagedElement xmi:type="uml:Class" xmi:id="_xU75ctrTEeWv0eZvzLc0yA" name="EsConstants"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_xMa2ptrTEeWv0eZvzLc0yA" name="xml">
            <packagedElement xmi:type="uml:Package" xmi:id="_xMa2p9rTEeWv0eZvzLc0yA" name="service">
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAK9rTEeWv0eZvzLc0yA" name="AppliesTo"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_xMtKgdrTEeWv0eZvzLc0yA" name="types">
                <packagedElement xmi:type="uml:Class" xmi:id="_xVaamNrTEeWv0eZvzLc0yA" name="ContractIdentifierTypeType"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xVaaotrTEeWv0eZvzLc0yA" name="StatusType"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xVghPtrTEeWv0eZvzLc0yA" name="AssociatedContractIdentifierTypeType"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_xVmn1trTEeWv0eZvzLc0yA" name="ContractStatusType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCALdrTEeWv0eZvzLc0yA" name="ContactComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAL9rTEeWv0eZvzLc0yA" name="ContractComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAMdrTEeWv0eZvzLc0yA" name="Deliverable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAM9rTEeWv0eZvzLc0yA" name="LocationComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCANdrTEeWv0eZvzLc0yA" name="ModifierComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAN9rTEeWv0eZvzLc0yA" name="OOSComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAOdrTEeWv0eZvzLc0yA" name="ObligationHeader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAO9rTEeWv0eZvzLc0yA" name="OfferComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVCAPdrTEeWv0eZvzLc0yA" name="ServiceItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVIGsdrTEeWv0eZvzLc0yA" name="UniqueDeliverable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVIGs9rTEeWv0eZvzLc0yA" name="UniqueOffer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT9NrTEeWv0eZvzLc0yA" name="AssociatedContractsComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT9trTEeWv0eZvzLc0yA" name="AssociatedContractsRequest"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT-NrTEeWv0eZvzLc0yA" name="EIAError"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT-trTEeWv0eZvzLc0yA" name="EsHeader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT_NrTEeWv0eZvzLc0yA" name="EsReply"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUT_trTEeWv0eZvzLc0yA" name="EsReplyChoice"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUUANrTEeWv0eZvzLc0yA" name="EsRequestComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVUUAtrTEeWv0eZvzLc0yA" name="Warnings"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaaktrTEeWv0eZvzLc0yA" name="ContractRequest"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaalNrTEeWv0eZvzLc0yA" name="PrintAdvantageEntitlementComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaaltrTEeWv0eZvzLc0yA" name="PrintAdvantageRequest"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaamtrTEeWv0eZvzLc0yA" name="ProductComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVaaoNrTEeWv0eZvzLc0yA" name="ProfitCenter"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVmn2drTEeWv0eZvzLc0yA" name="ContractRequestComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVmn29rTEeWv0eZvzLc0yA" name="EntitlementByPnRequest"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVmn3drTEeWv0eZvzLc0yA" name="EntitlementBySnRequest"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVsucdrTEeWv0eZvzLc0yA" name="EntitlementByXXRequestComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xVy1HtrTEeWv0eZvzLc0yA" name="ContractEntitlementComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xV47strTEeWv0eZvzLc0yA" name="WorkingComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xV47uNrTEeWv0eZvzLc0yA" name="CombinedUnitEntitlementComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xV47utrTEeWv0eZvzLc0yA" name="UnitListComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWLPotrTEeWv0eZvzLc0yA" name="AccountSegmentType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWLPpNrTEeWv0eZvzLc0yA" name="CustomerIdentificationType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWRWOtrTEeWv0eZvzLc0yA" name="ManufacturerComplexType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_xWpwsdrTEeWv0eZvzLc0yA" name="EsRequestComplexTypeChoice"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_xMUwCtrTEeWv0eZvzLc0yA" name="ruc">
          <packagedElement xmi:type="uml:Package" xmi:id="_xMUwC9rTEeWv0eZvzLc0yA" name="config">
            <packagedElement xmi:type="uml:Class" xmi:id="_xU75dtrTEeWv0eZvzLc0yA" name="DynConfigFactory"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_xU75eNrTEeWv0eZvzLc0yA" name="ReadOnlyProperties"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_xWjqINrTEeWv0eZvzLc0yA" name="ConfigChangeEvent"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_xWjqItrTEeWv0eZvzLc0yA" name="ConfigChangeListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_xMnD4drTEeWv0eZvzLc0yA" name="db">
            <packagedElement xmi:type="uml:Class" xmi:id="_xVUUBNrTEeWv0eZvzLc0yA" name="DataAccessException"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_xVUUBtrTEeWv0eZvzLc0yA" name="DatabaseDownException"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_xMnD4trTEeWv0eZvzLc0yA" name="metrics">
            <packagedElement xmi:type="uml:Class" xmi:id="_xVUUCNrTEeWv0eZvzLc0yA" name="MetricsHandler"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_xVghQNrTEeWv0eZvzLc0yA" name="MetricsEntry"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_xMUwDNrTEeWv0eZvzLc0yA" name="sif">
          <packagedElement xmi:type="uml:Class" xmi:id="_xU75etrTEeWv0eZvzLc0yA" name="SifException"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_xMUwBNrTEeWv0eZvzLc0yA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_xMUwBdrTEeWv0eZvzLc0yA" name="exolab">
        <packagedElement xmi:type="uml:Package" xmi:id="_xMUwBtrTEeWv0eZvzLc0yA" name="castor">
          <packagedElement xmi:type="uml:Package" xmi:id="_xMUwB9rTEeWv0eZvzLc0yA" name="types">
            <packagedElement xmi:type="uml:Class" xmi:id="_xU75cNrTEeWv0eZvzLc0yA" name="Date"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_xMa2oNrTEeWv0eZvzLc0yA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_xMa2odrTEeWv0eZvzLc0yA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_xU75fNrTEeWv0eZvzLc0yA" name="Calendar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAFdrTEeWv0eZvzLc0yA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAF9rTEeWv0eZvzLc0yA" name="Date"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAGdrTEeWv0eZvzLc0yA" name="Enumeration"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAG9rTEeWv0eZvzLc0yA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAHdrTEeWv0eZvzLc0yA" name="HashSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAH9rTEeWv0eZvzLc0yA" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAIdrTEeWv0eZvzLc0yA" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAI9rTEeWv0eZvzLc0yA" name="TreeMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVy1INrTEeWv0eZvzLc0yA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xV47ttrTEeWv0eZvzLc0yA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xV47v9rTEeWv0eZvzLc0yA" name="AbstractList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xWdjndrTEeWv0eZvzLc0yA" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xWdjn9rTEeWv0eZvzLc0yA" name="TreeSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xWjqFNrTEeWv0eZvzLc0yA" name="StringTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_xMg9QNrTEeWv0eZvzLc0yA" name="sql">
        <packagedElement xmi:type="uml:Class" xmi:id="_xVIGydrTEeWv0eZvzLc0yA" name="Date"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVaanNrTEeWv0eZvzLc0yA" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVaantrTEeWv0eZvzLc0yA" name="SQLException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVghNNrTEeWv0eZvzLc0yA" name="CallableStatement"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVghNtrTEeWv0eZvzLc0yA" name="Connection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVsuddrTEeWv0eZvzLc0yA" name="Timestamp"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_xM5XwNrTEeWv0eZvzLc0yA" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_xVsuetrTEeWv0eZvzLc0yA" name="SimpleDateFormat"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_xMa2otrTEeWv0eZvzLc0yA" name="junit">
      <packagedElement xmi:type="uml:Package" xmi:id="_xMa2o9rTEeWv0eZvzLc0yA" name="framework">
        <packagedElement xmi:type="uml:Class" xmi:id="_xU75ftrTEeWv0eZvzLc0yA" name="Test"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAEdrTEeWv0eZvzLc0yA" name="TestCase"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVCAE9rTEeWv0eZvzLc0yA" name="TestSuite"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_xVsuc9rTEeWv0eZvzLc0yA" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_xMzRINrTEeWv0eZvzLc0yA" name="oracle">
      <packagedElement xmi:type="uml:Package" xmi:id="_xMzRIdrTEeWv0eZvzLc0yA" name="jdbc">
        <packagedElement xmi:type="uml:Class" xmi:id="_xVghONrTEeWv0eZvzLc0yA" name="OracleTypes"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_xO5i4drTEeWv0eZvzLc0yA">
      <eAnnotations xmi:id="_xO5i4trTEeWv0eZvzLc0yA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xO5i8trTEeWv0eZvzLc0yA" base_Element="_xO5i79rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xO_pmNrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xO_pl9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xO_pn9rTEeWv0eZvzLc0yA" genericsValue="String, String" base_Element="_xO_pntrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xPeKpNrTEeWv0eZvzLc0yA" base_Element="_xPeKodrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xPkRRtrTEeWv0eZvzLc0yA" base_Element="_xPkRQ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xP2lL9rTEeWv0eZvzLc0yA" base_Element="_xP2lLdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xP2lMdrTEeWv0eZvzLc0yA" base_Element="_xP2lLtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQO_rdrTEeWv0eZvzLc0yA" base_Element="_xQO_qtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQVGStrTEeWv0eZvzLc0yA" dimensions="1" base_Element="_xQVGQdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xQVGU9rTEeWv0eZvzLc0yA" base_Element="_xQVGUNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xQVGVdrTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xQVGVNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xQVGVtrTEeWv0eZvzLc0yA" base_Element="_xQVGVNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQbM5NrTEeWv0eZvzLc0yA" base_Element="_xQbM4drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQbz9NrTEeWv0eZvzLc0yA" base_Element="_xQbz8drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQb0AdrTEeWv0eZvzLc0yA" base_Element="_xQbz-NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xQpPUtrTEeWv0eZvzLc0yA" genericsValue="SifException" base_Element="_xQpPUdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQpPV9rTEeWv0eZvzLc0yA" base_Element="_xQpPVNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQpPYNrTEeWv0eZvzLc0yA" base_Element="_xQpPXNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQvV99rTEeWv0eZvzLc0yA" base_Element="_xQvV8trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQvV_drTEeWv0eZvzLc0yA" base_Element="_xQvV-NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQvWA9rTEeWv0eZvzLc0yA" base_Element="_xQvV_trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQvWDdrTEeWv0eZvzLc0yA" base_Element="_xQvWCtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xQ7jNNrTEeWv0eZvzLc0yA" base_Element="_xQ7jMdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xQ7jONrTEeWv0eZvzLc0yA" base_Element="_xQ7jN9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xQ7jOtrTEeWv0eZvzLc0yA" base_Element="_xQ7jOdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xRHwhtrTEeWv0eZvzLc0yA" base_Element="_xRHwhNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xRHwidrTEeWv0eZvzLc0yA" base_Element="_xRHwh9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xRHwi9rTEeWv0eZvzLc0yA" base_Element="_xRHwitrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xRT9uNrTEeWv0eZvzLc0yA" base_Element="_xRT9tdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xRmRq9rTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xRmRqtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xRmRrtrTEeWv0eZvzLc0yA" base_Element="_xRmRrdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Annotations xmi:id="_xRmRr9rTEeWv0eZvzLc0yA" base_Element="_xRmRrdrTEeWv0eZvzLc0yA">
    <annotations xmi:id="_xRmRsNrTEeWv0eZvzLc0yA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_xU75cdrTEeWv0eZvzLc0yA" base_Element="_xU75cNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75c9rTEeWv0eZvzLc0yA" base_Element="_xU75ctrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75ddrTEeWv0eZvzLc0yA" base_Element="_xU75dNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75d9rTEeWv0eZvzLc0yA" base_Element="_xU75dtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75edrTEeWv0eZvzLc0yA" base_Element="_xU75eNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75e9rTEeWv0eZvzLc0yA" base_Element="_xU75etrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xU75fdrTEeWv0eZvzLc0yA" base_Element="_xU75fNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAENrTEeWv0eZvzLc0yA" base_Element="_xU75ftrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAEtrTEeWv0eZvzLc0yA" base_Element="_xVCAEdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAFNrTEeWv0eZvzLc0yA" base_Element="_xVCAE9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAFtrTEeWv0eZvzLc0yA" base_Element="_xVCAFdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAGNrTEeWv0eZvzLc0yA" base_Element="_xVCAF9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAGtrTEeWv0eZvzLc0yA" base_Element="_xVCAGdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAHNrTEeWv0eZvzLc0yA" base_Element="_xVCAG9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAHtrTEeWv0eZvzLc0yA" base_Element="_xVCAHdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAINrTEeWv0eZvzLc0yA" base_Element="_xVCAH9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAItrTEeWv0eZvzLc0yA" base_Element="_xVCAIdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAJNrTEeWv0eZvzLc0yA" base_Element="_xVCAI9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAJtrTEeWv0eZvzLc0yA" base_Element="_xVCAJdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAKNrTEeWv0eZvzLc0yA" base_Element="_xVCAJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAKtrTEeWv0eZvzLc0yA" base_Element="_xVCAKdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCALNrTEeWv0eZvzLc0yA" base_Element="_xVCAK9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCALtrTEeWv0eZvzLc0yA" base_Element="_xVCALdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAMNrTEeWv0eZvzLc0yA" base_Element="_xVCAL9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAMtrTEeWv0eZvzLc0yA" base_Element="_xVCAMdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCANNrTEeWv0eZvzLc0yA" base_Element="_xVCAM9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCANtrTEeWv0eZvzLc0yA" base_Element="_xVCANdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAONrTEeWv0eZvzLc0yA" base_Element="_xVCAN9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAOtrTEeWv0eZvzLc0yA" base_Element="_xVCAOdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVCAPNrTEeWv0eZvzLc0yA" base_Element="_xVCAO9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVIGsNrTEeWv0eZvzLc0yA" base_Element="_xVCAPdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVIGstrTEeWv0eZvzLc0yA" base_Element="_xVIGsdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVIGtNrTEeWv0eZvzLc0yA" base_Element="_xVIGs9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVIGytrTEeWv0eZvzLc0yA" base_Element="_xVIGydrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT8drTEeWv0eZvzLc0yA" base_Element="_xVUT8NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT89rTEeWv0eZvzLc0yA" base_Element="_xVUT8trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT9drTEeWv0eZvzLc0yA" base_Element="_xVUT9NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT99rTEeWv0eZvzLc0yA" base_Element="_xVUT9trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT-drTEeWv0eZvzLc0yA" base_Element="_xVUT-NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT-9rTEeWv0eZvzLc0yA" base_Element="_xVUT-trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT_drTEeWv0eZvzLc0yA" base_Element="_xVUT_NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUT_9rTEeWv0eZvzLc0yA" base_Element="_xVUT_trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUAdrTEeWv0eZvzLc0yA" base_Element="_xVUUANrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUA9rTEeWv0eZvzLc0yA" base_Element="_xVUUAtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUBdrTEeWv0eZvzLc0yA" base_Element="_xVUUBNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUB9rTEeWv0eZvzLc0yA" base_Element="_xVUUBtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUCdrTEeWv0eZvzLc0yA" base_Element="_xVUUCNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVUUC9rTEeWv0eZvzLc0yA" base_Element="_xVUUCtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaakdrTEeWv0eZvzLc0yA" base_Element="_xVaakNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaak9rTEeWv0eZvzLc0yA" base_Element="_xVaaktrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaaldrTEeWv0eZvzLc0yA" base_Element="_xVaalNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaal9rTEeWv0eZvzLc0yA" base_Element="_xVaaltrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaamdrTEeWv0eZvzLc0yA" base_Element="_xVaamNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaam9rTEeWv0eZvzLc0yA" base_Element="_xVaamtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaandrTEeWv0eZvzLc0yA" base_Element="_xVaanNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaan9rTEeWv0eZvzLc0yA" base_Element="_xVaantrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaaodrTEeWv0eZvzLc0yA" base_Element="_xVaaoNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVaao9rTEeWv0eZvzLc0yA" base_Element="_xVaaotrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghNdrTEeWv0eZvzLc0yA" base_Element="_xVghNNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghN9rTEeWv0eZvzLc0yA" base_Element="_xVghNtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghOdrTEeWv0eZvzLc0yA" base_Element="_xVghONrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghO9rTEeWv0eZvzLc0yA" base_Element="_xVghOtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghPdrTEeWv0eZvzLc0yA" base_Element="_xVghPNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghP9rTEeWv0eZvzLc0yA" base_Element="_xVghPtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVghQdrTEeWv0eZvzLc0yA" base_Element="_xVghQNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVmn19rTEeWv0eZvzLc0yA" base_Element="_xVmn1trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVmn2trTEeWv0eZvzLc0yA" base_Element="_xVmn2drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVmn3NrTEeWv0eZvzLc0yA" base_Element="_xVmn29rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVsucNrTEeWv0eZvzLc0yA" base_Element="_xVmn3drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVsuctrTEeWv0eZvzLc0yA" base_Element="_xVsucdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVsudNrTEeWv0eZvzLc0yA" base_Element="_xVsuc9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVsudtrTEeWv0eZvzLc0yA" base_Element="_xVsuddrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVsue9rTEeWv0eZvzLc0yA" base_Element="_xVsuetrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1E9rTEeWv0eZvzLc0yA" base_Element="_xVy1EtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1FdrTEeWv0eZvzLc0yA" base_Element="_xVy1FNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1F9rTEeWv0eZvzLc0yA" base_Element="_xVy1FtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1G9rTEeWv0eZvzLc0yA" base_Element="_xVy1GtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1HdrTEeWv0eZvzLc0yA" base_Element="_xVy1HNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1H9rTEeWv0eZvzLc0yA" base_Element="_xVy1HtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1IdrTEeWv0eZvzLc0yA" base_Element="_xVy1INrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1I9rTEeWv0eZvzLc0yA" base_Element="_xVy1ItrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1JdrTEeWv0eZvzLc0yA" base_Element="_xVy1JNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xVy1J9rTEeWv0eZvzLc0yA" base_Element="_xVy1JtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47sdrTEeWv0eZvzLc0yA" base_Element="_xV47sNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47s9rTEeWv0eZvzLc0yA" base_Element="_xV47strTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47t9rTEeWv0eZvzLc0yA" base_Element="_xV47ttrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47udrTEeWv0eZvzLc0yA" base_Element="_xV47uNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47u9rTEeWv0eZvzLc0yA" base_Element="_xV47utrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xV47wNrTEeWv0eZvzLc0yA" base_Element="_xV47v9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI8drTEeWv0eZvzLc0yA" base_Element="_xWFI8NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI89rTEeWv0eZvzLc0yA" base_Element="_xWFI8trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI9drTEeWv0eZvzLc0yA" base_Element="_xWFI9NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI99rTEeWv0eZvzLc0yA" base_Element="_xWFI9trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI-trTEeWv0eZvzLc0yA" base_Element="_xWFI-drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI_NrTEeWv0eZvzLc0yA" base_Element="_xWFI-9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFI_9rTEeWv0eZvzLc0yA" base_Element="_xWFI_trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFJAdrTEeWv0eZvzLc0yA" base_Element="_xWFJANrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFJBNrTEeWv0eZvzLc0yA" base_Element="_xWFJA9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFJB9rTEeWv0eZvzLc0yA" base_Element="_xWFJBtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWFJC9rTEeWv0eZvzLc0yA" base_Element="_xWFJCtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPkNrTEeWv0eZvzLc0yA" base_Element="_xWFJDNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPktrTEeWv0eZvzLc0yA" base_Element="_xWLPkdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPlNrTEeWv0eZvzLc0yA" base_Element="_xWLPk9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPltrTEeWv0eZvzLc0yA" base_Element="_xWLPldrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPmNrTEeWv0eZvzLc0yA" base_Element="_xWLPl9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPmtrTEeWv0eZvzLc0yA" base_Element="_xWLPmdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPndrTEeWv0eZvzLc0yA" base_Element="_xWLPnNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPn9rTEeWv0eZvzLc0yA" base_Element="_xWLPntrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPodrTEeWv0eZvzLc0yA" base_Element="_xWLPoNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPo9rTEeWv0eZvzLc0yA" base_Element="_xWLPotrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPpdrTEeWv0eZvzLc0yA" base_Element="_xWLPpNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPp9rTEeWv0eZvzLc0yA" base_Element="_xWLPptrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPqdrTEeWv0eZvzLc0yA" base_Element="_xWLPqNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWLPrNrTEeWv0eZvzLc0yA" base_Element="_xWLPq9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWMdrTEeWv0eZvzLc0yA" base_Element="_xWRWMNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWN9rTEeWv0eZvzLc0yA" base_Element="_xWRWNtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWOdrTEeWv0eZvzLc0yA" base_Element="_xWRWONrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWO9rTEeWv0eZvzLc0yA" base_Element="_xWRWOtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWPtrTEeWv0eZvzLc0yA" base_Element="_xWRWPdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWRWQNrTEeWv0eZvzLc0yA" base_Element="_xWRWP9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xWXc2NrTEeWv0eZvzLc0yA" base_Element="_xWXc1drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWdjntrTEeWv0eZvzLc0yA" base_Element="_xWdjndrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWdjoNrTEeWv0eZvzLc0yA" base_Element="_xWdjn9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqEtrTEeWv0eZvzLc0yA" base_Element="_xWjqEdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqFdrTEeWv0eZvzLc0yA" base_Element="_xWjqFNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqF9rTEeWv0eZvzLc0yA" base_Element="_xWjqFtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqGdrTEeWv0eZvzLc0yA" base_Element="_xWjqGNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqG9rTEeWv0eZvzLc0yA" base_Element="_xWjqGtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqHdrTEeWv0eZvzLc0yA" base_Element="_xWjqHNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqH9rTEeWv0eZvzLc0yA" base_Element="_xWjqHtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqIdrTEeWv0eZvzLc0yA" base_Element="_xWjqINrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWjqI9rTEeWv0eZvzLc0yA" base_Element="_xWjqItrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWpwstrTEeWv0eZvzLc0yA" base_Element="_xWpwsdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWpwtNrTEeWv0eZvzLc0yA" base_Element="_xWpws9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWpwttrTEeWv0eZvzLc0yA" base_Element="_xWpwtdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWpwuNrTEeWv0eZvzLc0yA" base_Element="_xWpwt9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xWv3U9rTEeWv0eZvzLc0yA" base_Element="_xWv3UtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xXCLM9rTEeWv0eZvzLc0yA" base_Element="_xXCLMtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xXCLX9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xXCLXtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xXCLZNrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xXCLYdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xXIR1NrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xXIR0drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xXgsYtrTEeWv0eZvzLc0yA" base_Element="_xXgsYNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xXmy8drTEeWv0eZvzLc0yA" base_Element="_xXmy8NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xXs5rNrTEeWv0eZvzLc0yA" base_Element="_xXs5q9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xXzAQtrTEeWv0eZvzLc0yA" base_Element="_xXzAPdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xXzAZ9rTEeWv0eZvzLc0yA" base_Element="_xXzAY9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xX5G3trTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xX5G2NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xX5G5NrTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xX5G4NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xYFUHNrTEeWv0eZvzLc0yA" base_Element="_xYFUGNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Array xmi:id="_xYFULdrTEeWv0eZvzLc0yA" base_Element="_xYFUJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYFULtrTEeWv0eZvzLc0yA" genericsValue="ZESCQSMODIFIER" base_Element="_xYFUKNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYFUNtrTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xYFUMNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYFUWNrTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xYFUU9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:StyledElement xmi:id="_xYRhZdrTEeWv0eZvzLc0yA" base_Element="_xYRhX9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:StyledElement xmi:id="_xYRha9rTEeWv0eZvzLc0yA" base_Element="_xYRhZ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xYRhbtrTEeWv0eZvzLc0yA" base_Element="_xYRhbdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xYRhedrTEeWv0eZvzLc0yA" base_Element="_xYRheNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYduktrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYdukdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdul9rTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYdulNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdumtrTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xYdumNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdunNrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYdumdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdup9rTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYduo9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdurdrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYduqdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdus9rTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYdur9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYdut9rTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYdutNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYduvNrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYduudrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYduwdrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYduvtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYduxtrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYduw9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYj1M9rTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYj1MNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYj1ONrTEeWv0eZvzLc0yA" genericsValue="Transaction" base_Element="_xYj1NdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xYj1VtrTEeWv0eZvzLc0yA" base_Element="_xYj1VdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYj1adrTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xYj1ZNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYp71trTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xYp70drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xYp72drTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xYp72NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JH9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JHtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JINrTEeWv0eZvzLc0yA" base_Element="_xY2JHtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JItrTEeWv0eZvzLc0yA" genericsValue="ObligationHeaderKey, ContractComplexType" base_Element="_xY2JIdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JI9rTEeWv0eZvzLc0yA" base_Element="_xY2JIdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JJdrTEeWv0eZvzLc0yA" genericsValue="ObligationHeaderKey, String" base_Element="_xY2JJNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JJtrTEeWv0eZvzLc0yA" base_Element="_xY2JJNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JKNrTEeWv0eZvzLc0yA" genericsValue="String, ContractComplexType" base_Element="_xY2JJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JKdrTEeWv0eZvzLc0yA" base_Element="_xY2JJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JK9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JKtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JLNrTEeWv0eZvzLc0yA" base_Element="_xY2JKtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JLtrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JLdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JL9rTEeWv0eZvzLc0yA" base_Element="_xY2JLdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JMdrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JMNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JMtrTEeWv0eZvzLc0yA" base_Element="_xY2JMNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JNNrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JM9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JNdrTEeWv0eZvzLc0yA" base_Element="_xY2JM9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JN9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JNtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JONrTEeWv0eZvzLc0yA" base_Element="_xY2JNtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JOtrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JOdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JO9rTEeWv0eZvzLc0yA" base_Element="_xY2JOdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JPdrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JPNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JPtrTEeWv0eZvzLc0yA" base_Element="_xY2JPNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JQNrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JP9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JQdrTEeWv0eZvzLc0yA" base_Element="_xY2JP9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY2JQ9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY2JQtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY2JRNrTEeWv0eZvzLc0yA" base_Element="_xY2JQtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY8PsNrTEeWv0eZvzLc0yA" genericsValue="String, String" base_Element="_xY2JRdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PsdrTEeWv0eZvzLc0yA" base_Element="_xY2JRdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY8Ps9rTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY8PstrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PtNrTEeWv0eZvzLc0yA" base_Element="_xY8PstrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xY8PttrTEeWv0eZvzLc0yA" genericsValue="Key, Object" base_Element="_xY8PtdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8Pt9rTEeWv0eZvzLc0yA" base_Element="_xY8PtdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8Pu9rTEeWv0eZvzLc0yA" base_Element="_xY8PutrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PwNrTEeWv0eZvzLc0yA" base_Element="_xY8PvtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PwtrTEeWv0eZvzLc0yA" base_Element="_xY8PwdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PxNrTEeWv0eZvzLc0yA" base_Element="_xY8Pw9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8PzNrTEeWv0eZvzLc0yA" base_Element="_xY8PytrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8Pz9rTEeWv0eZvzLc0yA" base_Element="_xY8PzdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8P0trTEeWv0eZvzLc0yA" base_Element="_xY8P0NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8P19rTEeWv0eZvzLc0yA" base_Element="_xY8P1drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8P2trTEeWv0eZvzLc0yA" base_Element="_xY8P2NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xY8P3drTEeWv0eZvzLc0yA" base_Element="_xY8P29rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWUtrTEeWv0eZvzLc0yA" base_Element="_xZCWUNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWVdrTEeWv0eZvzLc0yA" base_Element="_xZCWU9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWWNrTEeWv0eZvzLc0yA" base_Element="_xZCWVtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWW9rTEeWv0eZvzLc0yA" base_Element="_xZCWWdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWXtrTEeWv0eZvzLc0yA" base_Element="_xZCWXNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWYdrTEeWv0eZvzLc0yA" base_Element="_xZCWX9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWZNrTEeWv0eZvzLc0yA" base_Element="_xZCWYtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWZ9rTEeWv0eZvzLc0yA" base_Element="_xZCWZdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWatrTEeWv0eZvzLc0yA" base_Element="_xZCWaNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWbtrTEeWv0eZvzLc0yA" base_Element="_xZCWbdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWcNrTEeWv0eZvzLc0yA" base_Element="_xZCWb9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWdNrTEeWv0eZvzLc0yA" base_Element="_xZCWc9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWedrTEeWv0eZvzLc0yA" base_Element="_xZCWeNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWfNrTEeWv0eZvzLc0yA" base_Element="_xZCWe9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWftrTEeWv0eZvzLc0yA" base_Element="_xZCWfdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWgdrTEeWv0eZvzLc0yA" base_Element="_xZCWf9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZCWhNrTEeWv0eZvzLc0yA" base_Element="_xZCWgtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc8drTEeWv0eZvzLc0yA" base_Element="_xZIc8NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc89rTEeWv0eZvzLc0yA" base_Element="_xZIc8trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc9drTEeWv0eZvzLc0yA" base_Element="_xZIc9NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc99rTEeWv0eZvzLc0yA" base_Element="_xZIc9trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc-9rTEeWv0eZvzLc0yA" base_Element="_xZIc-trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc_drTEeWv0eZvzLc0yA" base_Element="_xZIc_NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIc_9rTEeWv0eZvzLc0yA" base_Element="_xZIc_trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdAdrTEeWv0eZvzLc0yA" base_Element="_xZIdANrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdA9rTEeWv0eZvzLc0yA" base_Element="_xZIdAtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdBdrTEeWv0eZvzLc0yA" base_Element="_xZIdBNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdB9rTEeWv0eZvzLc0yA" base_Element="_xZIdBtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdCdrTEeWv0eZvzLc0yA" base_Element="_xZIdCNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdC9rTEeWv0eZvzLc0yA" base_Element="_xZIdCtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdDdrTEeWv0eZvzLc0yA" base_Element="_xZIdDNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdD9rTEeWv0eZvzLc0yA" base_Element="_xZIdDtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdEdrTEeWv0eZvzLc0yA" base_Element="_xZIdENrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdE9rTEeWv0eZvzLc0yA" base_Element="_xZIdEtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdFdrTEeWv0eZvzLc0yA" base_Element="_xZIdFNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdF9rTEeWv0eZvzLc0yA" base_Element="_xZIdFtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdGdrTEeWv0eZvzLc0yA" base_Element="_xZIdGNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdG9rTEeWv0eZvzLc0yA" base_Element="_xZIdGtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdHdrTEeWv0eZvzLc0yA" base_Element="_xZIdHNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdH9rTEeWv0eZvzLc0yA" base_Element="_xZIdHtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdIdrTEeWv0eZvzLc0yA" base_Element="_xZIdINrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdI9rTEeWv0eZvzLc0yA" base_Element="_xZIdItrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZIdJdrTEeWv0eZvzLc0yA" genericsValue="?" base_Element="_xZIdJNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZIdJtrTEeWv0eZvzLc0yA" base_Element="_xZIdJNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjkNrTEeWv0eZvzLc0yA" base_Element="_xZIdJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjktrTEeWv0eZvzLc0yA" base_Element="_xZOjkdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZOjlNrTEeWv0eZvzLc0yA" genericsValue="String, String" base_Element="_xZOjk9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjltrTEeWv0eZvzLc0yA" base_Element="_xZOjk9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZOjmNrTEeWv0eZvzLc0yA" genericsValue="String, String" base_Element="_xZOjl9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjmtrTEeWv0eZvzLc0yA" base_Element="_xZOjl9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjnNrTEeWv0eZvzLc0yA" base_Element="_xZOjm9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjntrTEeWv0eZvzLc0yA" base_Element="_xZOjndrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjodrTEeWv0eZvzLc0yA" base_Element="_xZOjn9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjpdrTEeWv0eZvzLc0yA" base_Element="_xZOjpNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjp9rTEeWv0eZvzLc0yA" base_Element="_xZOjptrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjqdrTEeWv0eZvzLc0yA" base_Element="_xZOjqNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjq9rTEeWv0eZvzLc0yA" base_Element="_xZOjqtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjrdrTEeWv0eZvzLc0yA" base_Element="_xZOjrNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjr9rTEeWv0eZvzLc0yA" base_Element="_xZOjrtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjsdrTEeWv0eZvzLc0yA" base_Element="_xZOjsNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjs9rTEeWv0eZvzLc0yA" base_Element="_xZOjstrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjtdrTEeWv0eZvzLc0yA" base_Element="_xZOjtNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjt9rTEeWv0eZvzLc0yA" base_Element="_xZOjttrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOju9rTEeWv0eZvzLc0yA" base_Element="_xZOjutrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjvdrTEeWv0eZvzLc0yA" base_Element="_xZOjvNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZOjwNrTEeWv0eZvzLc0yA" base_Element="_xZOjvtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqO9rTEeWv0eZvzLc0yA" base_Element="_xZUqOtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqPdrTEeWv0eZvzLc0yA" base_Element="_xZUqPNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqQdrTEeWv0eZvzLc0yA" base_Element="_xZUqQNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqQ9rTEeWv0eZvzLc0yA" base_Element="_xZUqQtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqRdrTEeWv0eZvzLc0yA" base_Element="_xZUqRNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqTNrTEeWv0eZvzLc0yA" base_Element="_xZUqS9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqT9rTEeWv0eZvzLc0yA" base_Element="_xZUqTdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZUqUdrTEeWv0eZvzLc0yA" base_Element="_xZUqUNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw0trTEeWv0eZvzLc0yA" base_Element="_xZaw0drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw19rTEeWv0eZvzLc0yA" base_Element="_xZaw1drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw2trTEeWv0eZvzLc0yA" base_Element="_xZaw2NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw3drTEeWv0eZvzLc0yA" base_Element="_xZaw29rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw4NrTEeWv0eZvzLc0yA" base_Element="_xZaw3trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw49rTEeWv0eZvzLc0yA" base_Element="_xZaw4drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw5trTEeWv0eZvzLc0yA" base_Element="_xZaw5NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw6drTEeWv0eZvzLc0yA" base_Element="_xZaw59rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw7NrTEeWv0eZvzLc0yA" base_Element="_xZaw6trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw79rTEeWv0eZvzLc0yA" base_Element="_xZaw7drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw8trTEeWv0eZvzLc0yA" base_Element="_xZaw8NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw9drTEeWv0eZvzLc0yA" base_Element="_xZaw89rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw-NrTEeWv0eZvzLc0yA" base_Element="_xZaw9trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw-9rTEeWv0eZvzLc0yA" base_Element="_xZaw-drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaw_trTEeWv0eZvzLc0yA" base_Element="_xZaw_NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaxAdrTEeWv0eZvzLc0yA" base_Element="_xZaw_9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaxBNrTEeWv0eZvzLc0yA" base_Element="_xZaxAtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaxB9rTEeWv0eZvzLc0yA" base_Element="_xZaxBdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaxCtrTEeWv0eZvzLc0yA" base_Element="_xZaxCNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZaxDdrTEeWv0eZvzLc0yA" base_Element="_xZaxC9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZg3cNrTEeWv0eZvzLc0yA" genericsValue="String, CQSIntegration" base_Element="_xZaxDtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3ctrTEeWv0eZvzLc0yA" base_Element="_xZaxDtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZg3dNrTEeWv0eZvzLc0yA" genericsValue="String, CQSIntegration" base_Element="_xZg3c9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3dtrTEeWv0eZvzLc0yA" base_Element="_xZg3c9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3edrTEeWv0eZvzLc0yA" base_Element="_xZg3d9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3fNrTEeWv0eZvzLc0yA" base_Element="_xZg3etrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3f9rTEeWv0eZvzLc0yA" base_Element="_xZg3fdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3gtrTEeWv0eZvzLc0yA" base_Element="_xZg3gNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3hdrTEeWv0eZvzLc0yA" base_Element="_xZg3g9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3iNrTEeWv0eZvzLc0yA" base_Element="_xZg3htrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3kdrTEeWv0eZvzLc0yA" base_Element="_xZg3j9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZg3k9rTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xZg3ktrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3l9rTEeWv0eZvzLc0yA" base_Element="_xZg3ldrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Generics xmi:id="_xZg3mdrTEeWv0eZvzLc0yA" genericsValue="?, ?" base_Element="_xZg3mNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3mtrTEeWv0eZvzLc0yA" base_Element="_xZg3mNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3nNrTEeWv0eZvzLc0yA" base_Element="_xZg3m9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xZg3n9rTEeWv0eZvzLc0yA" base_Element="_xZg3ndrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xakAUtrTEeWv0eZvzLc0yA" base_Element="_xakAUNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xakAVdrTEeWv0eZvzLc0yA" base_Element="_xakAU9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG8NrTEeWv0eZvzLc0yA" base_Element="_xakAVtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG89rTEeWv0eZvzLc0yA" base_Element="_xaqG8drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG9trTEeWv0eZvzLc0yA" base_Element="_xaqG9NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG-drTEeWv0eZvzLc0yA" base_Element="_xaqG99rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG_NrTEeWv0eZvzLc0yA" base_Element="_xaqG-trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqG_9rTEeWv0eZvzLc0yA" base_Element="_xaqG_drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHAtrTEeWv0eZvzLc0yA" base_Element="_xaqHANrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHBdrTEeWv0eZvzLc0yA" base_Element="_xaqHA9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHCNrTEeWv0eZvzLc0yA" base_Element="_xaqHBtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHC9rTEeWv0eZvzLc0yA" base_Element="_xaqHCdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHDtrTEeWv0eZvzLc0yA" base_Element="_xaqHDNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHEdrTEeWv0eZvzLc0yA" base_Element="_xaqHD9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHFNrTEeWv0eZvzLc0yA" base_Element="_xaqHEtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHF9rTEeWv0eZvzLc0yA" base_Element="_xaqHFdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHGtrTEeWv0eZvzLc0yA" base_Element="_xaqHGNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHHdrTEeWv0eZvzLc0yA" base_Element="_xaqHG9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHINrTEeWv0eZvzLc0yA" base_Element="_xaqHHtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHI9rTEeWv0eZvzLc0yA" base_Element="_xaqHIdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHJtrTEeWv0eZvzLc0yA" base_Element="_xaqHJNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHKdrTEeWv0eZvzLc0yA" base_Element="_xaqHJ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHLNrTEeWv0eZvzLc0yA" base_Element="_xaqHKtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHL9rTEeWv0eZvzLc0yA" base_Element="_xaqHLdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xaqHMtrTEeWv0eZvzLc0yA" base_Element="_xaqHMNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNktrTEeWv0eZvzLc0yA" base_Element="_xawNkNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNldrTEeWv0eZvzLc0yA" base_Element="_xawNk9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNmNrTEeWv0eZvzLc0yA" base_Element="_xawNltrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNm9rTEeWv0eZvzLc0yA" base_Element="_xawNmdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNntrTEeWv0eZvzLc0yA" base_Element="_xawNnNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNodrTEeWv0eZvzLc0yA" base_Element="_xawNn9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNpNrTEeWv0eZvzLc0yA" base_Element="_xawNotrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNp9rTEeWv0eZvzLc0yA" base_Element="_xawNpdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNqtrTEeWv0eZvzLc0yA" base_Element="_xawNqNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNrdrTEeWv0eZvzLc0yA" base_Element="_xawNq9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNsNrTEeWv0eZvzLc0yA" base_Element="_xawNrtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xawNs9rTEeWv0eZvzLc0yA" base_Element="_xawNsdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UMNrTEeWv0eZvzLc0yA" base_Element="_xawNtNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UM9rTEeWv0eZvzLc0yA" base_Element="_xa2UMdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UNtrTEeWv0eZvzLc0yA" base_Element="_xa2UNNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UOdrTEeWv0eZvzLc0yA" base_Element="_xa2UN9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UPNrTEeWv0eZvzLc0yA" base_Element="_xa2UOtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UP9rTEeWv0eZvzLc0yA" base_Element="_xa2UPdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UQtrTEeWv0eZvzLc0yA" base_Element="_xa2UQNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2URdrTEeWv0eZvzLc0yA" base_Element="_xa2UQ9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2USNrTEeWv0eZvzLc0yA" base_Element="_xa2URtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2US9rTEeWv0eZvzLc0yA" base_Element="_xa2USdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UTtrTEeWv0eZvzLc0yA" base_Element="_xa2UTNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UUdrTEeWv0eZvzLc0yA" base_Element="_xa2UT9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa2UVNrTEeWv0eZvzLc0yA" base_Element="_xa2UUtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a0NrTEeWv0eZvzLc0yA" base_Element="_xa2UVdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a09rTEeWv0eZvzLc0yA" base_Element="_xa8a0drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a1trTEeWv0eZvzLc0yA" base_Element="_xa8a1NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a2drTEeWv0eZvzLc0yA" base_Element="_xa8a19rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a3NrTEeWv0eZvzLc0yA" base_Element="_xa8a2trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a39rTEeWv0eZvzLc0yA" base_Element="_xa8a3drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a4trTEeWv0eZvzLc0yA" base_Element="_xa8a4NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a5drTEeWv0eZvzLc0yA" base_Element="_xa8a49rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a6NrTEeWv0eZvzLc0yA" base_Element="_xa8a5trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a69rTEeWv0eZvzLc0yA" base_Element="_xa8a6drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a7trTEeWv0eZvzLc0yA" base_Element="_xa8a7NrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a8drTEeWv0eZvzLc0yA" base_Element="_xa8a79rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xa8a9NrTEeWv0eZvzLc0yA" base_Element="_xa8a8trTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChcNrTEeWv0eZvzLc0yA" base_Element="_xa8a9drTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChc9rTEeWv0eZvzLc0yA" base_Element="_xbChcdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChdtrTEeWv0eZvzLc0yA" base_Element="_xbChdNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChedrTEeWv0eZvzLc0yA" base_Element="_xbChd9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChfNrTEeWv0eZvzLc0yA" base_Element="_xbChetrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChf9rTEeWv0eZvzLc0yA" base_Element="_xbChfdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChgtrTEeWv0eZvzLc0yA" base_Element="_xbChgNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChhdrTEeWv0eZvzLc0yA" base_Element="_xbChg9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChiNrTEeWv0eZvzLc0yA" base_Element="_xbChhtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChi9rTEeWv0eZvzLc0yA" base_Element="_xbChidrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChjtrTEeWv0eZvzLc0yA" base_Element="_xbChjNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChkdrTEeWv0eZvzLc0yA" base_Element="_xbChj9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChlNrTEeWv0eZvzLc0yA" base_Element="_xbChktrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbChl9rTEeWv0eZvzLc0yA" base_Element="_xbChldrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoENrTEeWv0eZvzLc0yA" base_Element="_xbChmNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoE9rTEeWv0eZvzLc0yA" base_Element="_xbIoEdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoFtrTEeWv0eZvzLc0yA" base_Element="_xbIoFNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoGdrTEeWv0eZvzLc0yA" base_Element="_xbIoF9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoHNrTEeWv0eZvzLc0yA" base_Element="_xbIoGtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoH9rTEeWv0eZvzLc0yA" base_Element="_xbIoHdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoItrTEeWv0eZvzLc0yA" base_Element="_xbIoINrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoJdrTEeWv0eZvzLc0yA" base_Element="_xbIoI9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoKNrTEeWv0eZvzLc0yA" base_Element="_xbIoJtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoK9rTEeWv0eZvzLc0yA" base_Element="_xbIoKdrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoLtrTEeWv0eZvzLc0yA" base_Element="_xbIoLNrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoMdrTEeWv0eZvzLc0yA" base_Element="_xbIoL9rTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoNNrTEeWv0eZvzLc0yA" base_Element="_xbIoMtrTEeWv0eZvzLc0yA"/>
  <UMLLabProfile:Reference xmi:id="_xbIoN9rTEeWv0eZvzLc0yA" base_Element="_xbIoNdrTEeWv0eZvzLc0yA"/>
</xmi:XMI>
